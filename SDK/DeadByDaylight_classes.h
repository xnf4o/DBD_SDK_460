#pragma once

// Name: DBD, Version: 4.6.0


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class DeadByDaylight.interactable
// 0x00A8 (FullSize[0x02D8] - InheritedSize[0x0230])
class Uinteractable : public Uactor
{
public:
	unsigned char                                      UnknownData_34WV[0x18];                                    // 0x0230(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UprimitiveComponent*                         _singleZone;                                               // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _useSingleZone;                                            // 0x0250(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TN3O[0x7];                                     // 0x0251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class Uinteractor*>                         _interactors;                                              // 0x0258(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LH3R[0x20];                                    // 0x0268(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UprimitiveComponent*, struct FInteractionArray> _zoneToInteractions;                                       // 0x0288(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.interactable");
		return ptr;
	}



	void SetSingleZone(class UprimitiveComponent* zone);
	void SetInteractorsUsable(bool usable, class Uinteractor* exception);
	void PreInterruptionEvent(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee, class UinterruptionDefinition* interruption);
	void OnLevelReadyToPlay_Native();
	void OnLevelReadyToPlay();
	void OnInteractorLockChanged(bool Locked, class UdbdPlayer* interactingPlayer);
	bool IsInterruptionPossible(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee, class Uinteractor* interactor, class UinteractionDefinition* Definition, class UinterruptionDefinition* interruption);
	bool IsInteractionPossibleInternal(class UdbdPlayer* player, class Uinteractor* interactor, class UinteractionDefinition* Definition, DeadByDaylight_EInputInteractionType InteractionType);
	bool IsInteractionDone(class UdbdPlayer* player, class Uinteractor* interactor, class UinteractionDefinition* Definition, DeadByDaylight_EInputInteractionType InteractionType);
	bool IsInteractingWith(class UdbdPlayer* player);
	bool HasAnOngoingInteraction();
	class UdbdPlayer* GetPlayerOwner();
	TArray<class Uinteractor*> GetInteractors();
	TArray<class UdbdPlayer*> GetInteractingPlayersRaw();
	struct Fvector GetFocalPointPosition(class UdbdPlayer* player, class UinteractionDefinition* Definition);
	void AuthorityRequestCancelOngoingInteractions(bool onlyOnHitCancelableInteractions);
	TArray<class UdbdPlayer*> Authority_GetInteractingPlayers();
	void AttachEveryInteractionToZone(class UprimitiveComponent* zone);
};

// Class DeadByDaylight.collectable
// 0x0148 (FullSize[0x0420] - InheritedSize[0x02D8])
class Ucollectable : public Uinteractable
{
public:
	bool                                               DisplayUsePercent;                                         // 0x02D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EAtlantaItemProgressionBarEnum      ProgressBar;                                               // 0x02D9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideItemIndex;                                         // 0x02DA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9992[0x1];                                     // 0x02DB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                OverridenItemIndex;                                        // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StrafeOnUse;                                               // 0x02E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AimOnUse;                                                  // 0x02E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               VisibleWhenEquipped;                                       // 0x02E2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopRunningOnUse;                                          // 0x02E3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EItemHandPosition                   HandPosition;                                              // 0x02E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasUseInteraction;                                         // 0x02E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ECollectableCategory                category;                                                  // 0x02E6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInUse;                                                   // 0x02E7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       itemId;                                                    // 0x02E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FromPlayerSpawn;                                           // 0x02F4(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B2JU[0x3];                                     // 0x02F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UItemModifier*                               BaseItemModifier;                                          // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemModifier*                               ItemModifier1;                                             // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemModifier*                               ItemModifier2;                                             // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2RRZ[0x18];                                    // 0x0310(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCollectablePickedUpBP;                                   // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0I2U[0x48];                                    // 0x0338(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               BeingCollected;                                            // 0x0380(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BeingDropped;                                              // 0x0381(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _beingConsumedByEntity;                                    // 0x0382(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_53S7[0x5];                                     // 0x0383(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uinteractor*                                 _itemInteractor;                                           // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UskeletalMeshComponent*                      _mesh;                                                     // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _placementOrigin;                                          // 0x0398(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3C1T[0x10];                                    // 0x03A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _collector;                                                // 0x03B0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _firstCollector;                                           // 0x03B8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_ECollectableState                   _state;                                                    // 0x03C0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3JSM[0x7];                                     // 0x03C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UItemAddon*>                          _itemAddons;                                               // 0x03C8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VHKH[0x10];                                    // 0x03D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _itemCount;                                                // 0x03E8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0PKG[0xC];                                     // 0x03EC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct Fguid                                       _begunPlayFenceName;                                       // 0x03F8(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EAttachToSocketNameEnum             _attachToSocketName;                                       // 0x0408(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EInventoryType                      _collectInInventoryType;                                   // 0x0409(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z1G7[0x6];                                     // 0x040A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameplayTagContainerComponent*              _objectState;                                              // 0x0410(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DBDSharedTypes_ELoadoutItemType                    _itemType;                                                 // 0x0418(0x0001) ELEMENT_SIZE_MISMATCH (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V0ZY[0x3];                                     // 0x0418(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	bool                                               _discardWhenConsumed;                                      // 0x041C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _disableAttachmentReplication;                             // 0x041D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TSGC[0x2];                                     // 0x041E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.collectable");
		return ptr;
	}



	void SetVisibilityEvent(bool visibility);
	void SetItemInteractor(class Uinteractor* interactor);
	void SetCount(int Count);
	void OnUseReleased();
	void OnUse();
	void OnRep_State();
	void OnRep_Collector();
	void OnRep_BegunPlayFenceName();
	void OnPostItemAddonsCreation(class UdbdPlayer* player);
	void OnFenceInitialized();
	void OnDropped();
	void OnCustomizationChanged();
	void OnCollectorEndPlay(class Uactor* actor, TEnumAsByte<Engine_EEndPlayReason> endPlayReason);
	void OnCollected(class UdbdPlayer* collector);
	void OnCollectablePickedUpBPDelegate__DelegateSignature(class UdbdPlayer* player);
	void OnCollectablePickedUpBP__DelegateSignature(class UdbdPlayer* player);
	void OnAddonsRemoved(TArray<class UItemAddon*> addons);
	void OnAddonsAdded(TArray<class UItemAddon*> addons);
	void OnActivateDissolveItem();
	void NotifyUpdated();
	void Multicast_UseReleased();
	void Multicast_Use();
	void Multicast_RemoveItemAddon(class UItemAddon* Addon);
	void Multicast_RemoveAllAddons();
	void Multicast_Dropped(class UdbdPlayer* droppedBy, const struct Fvector& location, const struct FRotator& rotation);
	void Multicast_Collected(class UdbdPlayer* collector);
	void Local_Dropped_Location(class UdbdPlayer* droppedBy, const struct Fvector& location, const struct FRotator& rotation);
	bool IsStored();
	bool IsRechargeable();
	bool IsPickable();
	bool IsOnGround();
	bool IsLocallyControlled();
	bool IsInSearchable();
	bool IsEquipped();
	bool IsCountDisplayForced();
	bool IsCollected();
	bool IsBeingUsed();
	bool HasGameplayModifierFlag(const struct FgameplayTag& modifierFlag);
	float GetUsePercentLeft();
	float GetModifierSum(const struct FgameplayTag& ModifierType, float DefaultValue);
	float GetModifierMax(const struct FgameplayTag& ModifierType, float DefaultValue);
	class Uinteractor* GetItemInteractor();
	unsigned char GetItemIconIndex();
	TArray<class UItemAddon*> GetItemAddons();
	struct FString GetIconFilePath();
	int GetCount();
	class UdbdPlayer* GetCollector();
	void DebugPrintStats();
	bool CanUse();
	bool CanBeDropped(class UdbdPlayer* dropper);
	bool CanBeCollected(class UdbdPlayer* collector);
	void CallOnCollectablePickedUpBP(const struct FScriptDelegate& CallBack);
	void Authority_UseReleased();
	void Authority_Use();
	void Authority_RemoveItemAddon(class UItemAddon* Addon);
	void Authority_OnConsumed(bool forceDiscard);
	void Authority_Discard();
	void Authority_AddItemAddon(class UItemAddon* Addon);
};

// Class DeadByDaylight.interactionDefinition
// 0x02F0 (FullSize[0x0500] - InheritedSize[0x0210])
class UinteractionDefinition : public USceneComponent
{
public:
	unsigned char                                      UnknownData_BS8R[0x28];                                    // 0x0210(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     interactionID;                                             // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInputInteractionType               InteractionInputType;                                      // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInputInteractionType               InteractionAtlantaInputType;                               // 0x0249(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_35OV[0x2];                                     // 0x024A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SnapTime;                                                  // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetCameraDuringSnap;                                     // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInteractionCancelled;                                    // 0x0251(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowStartInteractionFromHeldInput;                        // 0x0252(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnInputRelease;                             // 0x0253(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AtlantaOverridePowerButtonImage;                           // 0x0254(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AtlantaOverrideItemUseToggleState;                         // 0x0255(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideStopInteractionOnInputRelease;                     // 0x0256(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AtlantaStopInteractionOnInputRelease;                      // 0x0257(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnMontageComplete;                          // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnMontageBlendingOut;                       // 0x0259(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnTimerExpire;                              // 0x025A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnHeightDelta;                              // 0x025B(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopEnterMontageOnExit;                                    // 0x025C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopUpdateMontageOnExit;                                   // 0x025D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreStrafeAnimFix;                                       // 0x025E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EInteractionAnimation               InteractionAnimation;                                      // 0x025F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CamperCanInteract;                                         // 0x0260(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SlasherCanInteract;                                        // 0x0261(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowInputPersistence;                                     // 0x0262(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SnapPosition;                                              // 0x0263(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SnapRotation;                                              // 0x0264(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1H29[0x3];                                     // 0x0265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SnapStopDistance;                                          // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TestClearPathDuringSnap;                                   // 0x026C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CheckInteractableIsInPlayerView;                           // 0x026D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XA20[0x2];                                     // 0x026E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CheckInteractableInViewSphereSweepRadius;                  // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fvector                                     CheckInteractableInViewOffset;                             // 0x0274(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInterruptibleIfTestClearPathDuringSnapFails;             // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TestPlayerOrientationOnSnap;                               // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ScaleEnterAnimationToTime;                                 // 0x0282(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ScaleMainAnimationToTime;                                  // 0x0283(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ScaleExitAnimationToTime;                                  // 0x0284(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ESnapBackType                       SnapBackType;                                              // 0x0285(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ESnapBackPositionType               SnapBackPositionType;                                      // 0x0286(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KIWM[0x1];                                     // 0x0287(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   SnapBackPositionOffset;                                    // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SnapToInitialRotationDuringSnapBack;                       // 0x0290(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseStartSnapTimeForSnapExitTime;                           // 0x0291(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileIncapacitated;                             // 0x0292(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileCloaked;                                   // 0x0293(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileChainBlinking;                             // 0x0294(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileAttacking;                                 // 0x0295(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileChainLinked;                               // 0x0296(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileShocked;                                   // 0x0297(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileUnhookingSelf;                             // 0x0298(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileCarrying;                                  // 0x0299(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigation;                                           // 0x029A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigationInput;                                      // 0x029B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowRotation;                                             // 0x029C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseCameraMontageMode;                                      // 0x029D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OwnerBlocksAttack;                                         // 0x029E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsHighPriority;                                            // 0x029F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowOverridingWhenNotForced;                              // 0x02A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreOverlapOnInteractable;                               // 0x02A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseAuthoritativeMovement;                                  // 0x02A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeAuthoritativePushedDuringEnter;                       // 0x02A3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeAuthoritativePushedDuringUpdate;                      // 0x02A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeAuthoritativePushedDuringExit;                        // 0x02A5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanAuthoritativePush;                                      // 0x02A6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CancelOnHit;                                               // 0x02A7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CancelOnAttack;                                            // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HideItem;                                                  // 0x02A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoBindToParentInteractor;                                // 0x02AA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoBindToParentZone;                                      // 0x02AB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WG40[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSecondaryInteractionProperties             SecondaryInteractionProperties;                            // 0x02B0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              CancelOnMoveInitialDelay;                                  // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CancelOnMoveInput;                                         // 0x02E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CancelOnMoveInputOnlyWhenRunning;                          // 0x02E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QO13[0x7];                                     // 0x02E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ProgressBasedSkillChecks;                                  // 0x02F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanCrouch;                                                 // 0x0300(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AffectsStillness;                                          // 0x0301(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ConsideredIdle;                                            // 0x0302(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               BlockSelfInteract;                                         // 0x0303(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              interactionTime;                                           // 0x0304(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowHighlightWhenActive;                                   // 0x0308(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowHighlightWhenAvailable;                                // 0x0309(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EPowerProgressBar                   ProgressBarToUpdate;                                       // 0x030A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateHighlightOpacityUsingCharge;                         // 0x030B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7EKF[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UinterruptionDefinition*>             _interruptionDefinitions;                                  // 0x0310(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OZ20[0x48];                                    // 0x0320(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInteractionAnimNotify;                                   // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               DebugUnavailability;                                       // 0x0378(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInputInteractionType               SecondaryActionInputType;                                  // 0x0379(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInputInteractionType               AtlantaSecondaryActionInputType;                           // 0x037A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8MQT[0x5];                                     // 0x037B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 NavigationSpeedCurveEnter;                                 // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 NavigationSpeedCurve;                                      // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 NavigationSpeedCurveExit;                                  // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _shouldCheckInteractedUpon;                                // 0x0398(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EInteractionOwnership               OwnershipUsability;                                        // 0x0399(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RRFV[0x2];                                     // 0x039A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExitInteractionTime;                                       // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ApplyModifiersToExitTime;                                  // 0x03A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_C8LE[0x7];                                     // 0x03A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       InteractionDescriptionText;                                // 0x03A8(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	DeadByDaylight_EButtonType                         AtlantaLastButtonPressed;                                  // 0x03C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CXCV[0x3];                                     // 0x03C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InteractionHeightDeltaMax;                                 // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumVelocity;                                           // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MBSJ[0x4];                                     // 0x03CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAnimationMontageDescriptor                 EnterMontage;                                              // 0x03D0(0x0020) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor                 UpdateMontage;                                             // 0x03F0(0x0020) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor                 ExitMontage;                                               // 0x0410(0x0020) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FName                                       SnapSocketName;                                            // 0x0430(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _canBeAttachedToAnyZone;                                   // 0x043C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EButtonType                         CancelButtonType;                                          // 0x043D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EButtonType                         SecondaryActionButtonType;                                 // 0x043E(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isInterruptibleBySacrifice;                               // 0x043F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IgnoreStun;                                                // 0x0440(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J938[0x7];                                     // 0x0441(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _tags;                                                     // 0x0448(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F5CW[0x1];                                     // 0x0468(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _useHoldPrompt;                                            // 0x0469(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _allowInteractionInNarrowSpaces;                           // 0x046A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _allowIKSensorDuringInteraction;                           // 0x046B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _startUpdateMontageDuringEnter;                            // 0x046C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OCS7[0x3];                                     // 0x046D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uinteractor*                                 _interactor;                                               // 0x0470(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UinteractionDefinition*>              _mutuallyExclusiveInteractionsClient;                      // 0x0478(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FActivationDefinition                       _activationDefinition;                                     // 0x0488(0x0028) (Edit, NativeAccessSpecifierPrivate)
	class UprimitiveComponent*                         _zone;                                                     // 0x04B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EInputInteractionType               _cancelInputType;                                          // 0x04B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3FD0[0x7];                                     // 0x04B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _preventingTags;                                           // 0x04C0(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _disablingTags;                                            // 0x04E0(0x0020) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.interactionDefinition");
		return ptr;
	}



	bool ShouldStartUpdateMontageDuringEnter(class UdbdPlayer* character);
	void SetSecondaryActionInputType(DeadByDaylight_EInputInteractionType InputType);
	void SetSecondaryActionButtonType(DeadByDaylight_EButtonType ButtonType);
	void SetCancelButtonType(DeadByDaylight_EButtonType ButtonType);
	void SetAtlantaSecondaryActionInputType(DeadByDaylight_EInputInteractionType InputType);
	void OnUpdateMontageStart(class UdbdPlayer* player);
	void OnInterruptorUpdateStart(class UinterruptionDefinition* currentInterruption, class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	void OnInteractionUpdateTick(class UdbdPlayer* player, float deltaTime);
	void OnInteractionUpdateStart(class UdbdPlayer* player);
	void OnInteractionUpdateMontageReachedMiddle(class UdbdPlayer* player);
	void OnInteractionUpdateEnd(class UdbdPlayer* player);
	void OnInteractionInterruptStarted(class UdbdPlayer* player, class UinterruptionDefinition* currentInterruption, class UdbdPlayer* interruptingPlayer);
	void OnInteractionInterruptStart(class UdbdPlayer* player, class UinterruptionDefinition* currentInterruption, class UdbdPlayer* interruptingPlayer);
	void OnInteractionInterruptEnd(class UdbdPlayer* player, class UinterruptionDefinition* currentInterruption, class UdbdPlayer* interruptingPlayer);
	void OnInteractionInit(class UdbdPlayer* player);
	void OnInteractionFinished(class UdbdPlayer* player, bool hasInteractionStarted);
	void OnInteractionExitTick(class UdbdPlayer* player, float deltaTime);
	void OnInteractionExitStart(class UdbdPlayer* player);
	void OnInteractionExitEnd(class UdbdPlayer* player);
	void OnInteractionEnterTick(class UdbdPlayer* player, float deltaTime);
	void OnInteractionEnterStart(class UdbdPlayer* player, float actualSnapTime);
	void OnInteractionEnterEnd(class UdbdPlayer* player);
	void OnInteractionCancelled(class UdbdPlayer* player);
	void OnInteractionAnimNotifyEvent(const struct FName& NotifyID, class UdbdPlayer* player);
	bool IsSupportedCharacterType(class UdbdPlayer* player);
	bool IsInterruptionPossible(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee, class UinterruptionDefinition* interruption);
	bool IsInteractionUsingOffering(class UdbdPlayer* player);
	bool IsInteractionPossibleClient(class UdbdPlayer* player, DeadByDaylight_EInputInteractionType InteractionType);
	bool IsInteractionPossibleBP(class UdbdPlayer* player, DeadByDaylight_EInputInteractionType InteractionType);
	bool IsInteractionDone(class UdbdPlayer* player, DeadByDaylight_EInputInteractionType InteractionType);
	bool IsInteractableInPlayerView(class UdbdPlayer* player);
	bool IsInputPressed(class UdbdPlayer* player);
	bool IsCharacterFacingInteractorDirection(class UdbdPlayer* player);
	bool IsCancelable(class UdbdPlayer* player);
	struct FAnimationMontageDescriptor GetUpdateMontage(class UdbdPlayer* player);
	bool GetUpdateHighlightOpacityUsingCharge();
	float GetUpdateAnimationPlayRate(class UdbdPlayer* player);
	struct FmontagePlaybackDefinition GetUpdateAnimationPlayBackDefinition(class UdbdPlayer* player, bool follower);
	float GetSnapTimeAtStart(class UdbdPlayer* player);
	float GetSnapTime(class UdbdPlayer* player);
	struct FName GetSnapSocketName(class UdbdPlayer* player);
	struct Fvector GetSnapPointPositionAtStart(class UdbdPlayer* player);
	struct Fvector GetSnapPointPosition(class UdbdPlayer* player);
	float GetSnapDistanceAtStart(class UdbdPlayer* player);
	float GetSnapDistance(class UdbdPlayer* player);
	DeadByDaylight_EInputInteractionType GetSecondaryActionInputType(class Upawn* pawn);
	DeadByDaylight_EButtonType GetSecondaryActionButtonType();
	struct FRotator GetRotationToSnapPointAtStart(class UdbdPlayer* player);
	struct FRotator GetRotationToSnapPoint(class UdbdPlayer* player);
	DeadByDaylight_EPowerProgressBar GetPowerProgressBar();
	class UdbdPlayer* GetPlayerDependancy(class UdbdPlayer* interactingPlayer);
	TArray<class UinterruptionDefinition*> GetInterruptionDefinitions();
	class Uinteractor* GetInteractor();
	float GetInteractionTimeMultiplier(class UdbdPlayer* character);
	float GetInteractionTime(class UdbdPlayer* character);
	struct FString GetInteractionText(class UdbdPlayer* player);
	float GetInteractionExitTime(class UdbdPlayer* character);
	struct FText GetInteractionDescriptionText();
	class Uinteractable* GetInteractable();
	struct Fvector GetFocalPointPosition(class UdbdPlayer* player);
	struct FAnimationMontageDescriptor GetExitMontage(class UdbdPlayer* player);
	float GetExitAnimationPlayRate(class UdbdPlayer* player);
	struct FmontagePlaybackDefinition GetExitAnimationPlayBackDefinition(class UdbdPlayer* player, bool follower);
	struct FAnimationMontageDescriptor GetEnterMontage(class UdbdPlayer* player);
	struct FmontagePlaybackDefinition GetEnterAnimationPlayBackDefinition(class UdbdPlayer* player, bool follower);
	float GetChargePercent();
	DeadByDaylight_EButtonType GetCancelButtonType();
	bool GetAllowNavigation(class UdbdPlayer* player);
	struct Fvector GetActualSnapPointPositionAtStart(class UdbdPlayer* player);
	struct Fvector GetActualSnapPointPosition(class UdbdPlayer* player);
	TArray<class Uactor*> GetActorsToIgnoreOverlap();
	float GetActorHeightDelta(class UdbdPlayer* player);
	float GetActionSpeedMultiplier(class UdbdPlayer* character);
	bool DoesPlayerHaveClearPath(class UdbdPlayer* player);
	bool DoesManuallyOverrideInteractionPriority(class UinteractionDefinition* interaction);
	void CompleteCharge(class UdbdPlayer* character);
	bool CanOverrideInteraction(class UinteractionDefinition* interaction);
	float CalculateSnapTimeForConstantSpeed(class UdbdPlayer* player, float speed);
	float CalculateSnapTimeForConstantMaxNormalMovementSpeed(class UdbdPlayer* player, float speedBoost);
	void AttachToZone(class UprimitiveComponent* zone);
	void AttachToInteractor(class Uinteractor* interactor);
	bool AtlantaItemUseToggleState();
	struct FName AtlantaGetPowerButtonImageID();
	void AddMutuallyExclusiveInteraction(class UinteractionDefinition* interaction);
};

// Class DeadByDaylight.ChargeableInteractionDefinition
// 0x0128 (FullSize[0x0628] - InheritedSize[0x0500])
class UChargeableInteractionDefinition : public UinteractionDefinition
{
public:
	unsigned char                                      UnknownData_S865[0x18];                                    // 0x0500(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    SkillCheckResponseAestheticDelegate;                       // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SkillCheckResponseAuthorityDelegate;                       // 0x0528(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnChargeComplete;                           // 0x0538(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasProgressivelyHarderSkillChecks;                         // 0x0539(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NRMR[0x2];                                     // 0x053A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProgressiveDifficultyModifier;                             // 0x053C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EChargeableInteractionBarType       ProgressBarType;                                           // 0x0540(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NZ4V[0x7];                                     // 0x0541(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ProgressPips;                                              // 0x0548(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HideProgressBar;                                           // 0x0558(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowItemIcon;                                              // 0x0559(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5O3H[0x6];                                     // 0x055A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UchargeableComponent*                        _chargeableComponent;                                      // 0x0560(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AtlantaIsCancellableWhileCharging;                         // 0x0568(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CW87[0x57];                                    // 0x0569(0x0057) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               ShowSpeedProficiencyForMultipleInteractors;                // 0x05C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K9XV[0x7];                                     // 0x05C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _interactionSpecificActionSpeedTags;                       // 0x05C8(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _interactionSpecificActionSpeedMultiplicativeTags;         // 0x05E8(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _interactionSpecificActionSpeedAdditiveTags;               // 0x0608(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChargeableInteractionDefinition");
		return ptr;
	}



	bool ShouldShowSpeedProficiencyForMultipleInteractors();
	void SetSpeedBase(float speedBase);
	void SetChargeableComponent(class UchargeableComponent* chargeableComponent);
	void OnSkillCheckResponseAuthorityBP(class UdbdPlayer* player, bool Success, bool bonus, bool HadInput, DBDSharedTypes_ESkillCheckCustomType type);
	void OnSkillCheckResponseAuthority(bool Success, bool bonus, class UdbdPlayer* player, bool triggerLoudNoise, bool HadInput, DBDSharedTypes_ESkillCheckCustomType type);
	void OnSkillCheckResponseAestheticBP(class UdbdPlayer* player, bool Success, bool bonus, bool HadInput, DBDSharedTypes_ESkillCheckCustomType type);
	void OnSkillCheckResponseAesthetic(bool Success, bool bonus, class UdbdPlayer* player, bool triggerLoudNoise, bool HadInput, DBDSharedTypes_ESkillCheckCustomType type);
	void OnInteractionCompletionStateChanged(class UdbdPlayer* player, bool Complete);
	void OnChargeableChangedBP(class UchargeableComponent* oldChargeable, class UchargeableComponent* newChargeable);
	bool HasSkillCheckHappened(class UdbdPlayer* character);
	float GetTunableValue(const struct FName& TunableValueID, float DefaultValue);
	float GetSuccessProbability();
	float GetSkillCheckProbability();
	float GetSkillCheckFailureTimePenalty();
	float GetSkillCheckFailurePercentPenalty(class UdbdPlayer* player);
	float GetSkillCheckDifficulityModifier(class UdbdPlayer* character);
	float GetSkillCheckCharge(class UdbdPlayer* player, bool Success, bool bonus, DBDSharedTypes_ESkillCheckCustomType type);
	int GetPipsPassed();
	float GetPerkMultiplier(class UdbdPlayer* character);
	float GetMultiplicativeLuckBonus(class UdbdPlayer* character);
	float GetMaxCharge();
	float GetItemEfficiencyModifier(class UdbdPlayer* character);
	float GetGoodSkillCheckSuccessPercentReward(class UdbdPlayer* player);
	float GetChargeSpeedModifier(class UdbdPlayer* character);
	float GetChargeAmountForTime(float deltaSeconds, class UdbdPlayer* character);
	class UchargeableComponent* GetChargeableComponent();
	float GetBonusSkillCheckZoneSizeModifier(class UdbdPlayer* character);
	float GetBonusSkillCheckSuccessPercentReward(class UdbdPlayer* player);
	float GetBlueprintChargeSpeedMultiplier(class UdbdPlayer* character);
	float GetAdditiveLuckBonus(class UdbdPlayer* character);
	float GetAdditiveChargeTimeReductionAsMultiplier(class UdbdPlayer* character);
	void Authority_ChargeWithItem(float deltaSeconds, class Ucollectable* Item, class UdbdPlayer* character);
	void Authority_AddCharge(float deltaSeconds, class UdbdPlayer* character);
};

// Class DeadByDaylight.QuestEventEvaluatorBase
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UQuestEventEvaluatorBase : public UObject
{
public:
	unsigned char                                      UnknownData_G97K[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _dbdplayer;                                                // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JSZD[0x18];                                    // 0x0058(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _evaluatorConditionsClass;                                 // 0x0070(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UEvaluatorCondition*>                 _evaluatorConditions;                                      // 0x0080(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.QuestEventEvaluatorBase");
		return ptr;
	}



	void OnGameEvent(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
};

// Class DeadByDaylight.EvaluatorCondition
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UEvaluatorCondition : public UObject
{
public:
	DeadByDaylight_EConditionSubject                   _conditionSubject;                                         // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4VXO[0x17];                                    // 0x0031(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EvaluatorCondition");
		return ptr;
	}



};

// Class DeadByDaylight.SpecialBehaviourInteractable
// 0x0008 (FullSize[0x02E0] - InheritedSize[0x02D8])
class USpecialBehaviourInteractable : public Uinteractable
{
public:
	TWeakObjectPtr<class UDBDPlayerState>              _specialBehaviourOwner;                                    // 0x02D8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpecialBehaviourInteractable");
		return ptr;
	}



};

// Class DeadByDaylight.AbstractAnalyticsManager
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAbstractAnalyticsManager : public UGameInstanceSubsystem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AbstractAnalyticsManager");
		return ptr;
	}



};

// Class DeadByDaylight.ArmIKSensorComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UArmIKSensorComponent : public UactorComponent
{
public:
	class UskeletalMeshComponent*                      _mesh;                                                     // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DeadByDaylight_EArm, struct FArmIKSensorDatum> _arms;                                                     // 0x00C0(0x0050) (Edit, EditFixedSize, Protected, NativeAccessSpecifierProtected)
	float                                              _capsuleRadius;                                            // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _capsuleHalfHeight;                                        // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _traceLength;                                              // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XEVP[0xC];                                     // 0x011C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArmIKSensorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttack
// 0x0228 (FullSize[0x02E0] - InheritedSize[0x00B8])
class UDBDAttack : public UactorComponent
{
public:
	unsigned char                                      UnknownData_CCM3[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EAttackType                         _attackType;                                               // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _useMontage;                                               // 0x00D1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EDetectionZone                      _damageZone;                                               // 0x00D2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EDetectionZone                      _lockZone;                                                 // 0x00D3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EDetectionZone                      _obstructionZone;                                          // 0x00D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ULP3[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FStatProperty                               _maxAccelerationMultiplier;                                // 0x00D8(0x0048) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDBDAttackTargetTracker                     _targetTracker;                                            // 0x0120(0x0078) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<DBDSharedTypes_EAttackSubstate, class UClass*> _stateClasses;                                             // 0x0198(0x0050) (Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UdbdPlayer*>                          _localAlreadyHitTargets;                                   // 0x01E8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DBDSharedTypes_EAttackSubstate, class UDBDAttackSubstate*> _states;                                                   // 0x01F8(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PZG0[0x20];                                    // 0x0248(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UdbdPlayer*>                          _hitTargets;                                               // 0x0268(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _targetsAwaitingServerValidation[0x50];                    // 0x0278(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_5XI7[0x18];                                    // 0x02C8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttack");
		return ptr;
	}



	void Server_RequestStateChange(DBDSharedTypes_EAttackSubstate state);
	void Server_HitTarget(class UdbdPlayer* target, float targetLocationTimestamp);
	void Server_ClearTargets();
	void Multicast_RequestStateChange(DBDSharedTypes_EAttackSubstate state);
	void Multicast_HitTarget(class UdbdPlayer* target);
	void Multicast_ClearTargets();
	void Client_ReceiveHitResult(class UdbdPlayer* target, bool isValid);
	void Client_ReceiveAttackSubstateRequestResult(const struct FAttackSubstateRequestResult& result);
};

// Class DeadByDaylight.DBDAttackSubstate
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UDBDAttackSubstate : public UObject
{
public:
	struct FStatProperty                               _duration;                                                 // 0x0030(0x0048) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 _speedCurve;                                               // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _montage;                                                  // 0x0080(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FS9Z[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _currentCurve;                                             // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KT5H[0x40];                                    // 0x0098(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackOpenSubstate
// 0x0000 (FullSize[0x00D8] - InheritedSize[0x00D8])
class UDBDAttackOpenSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackOpenSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackHittingSubstate
// 0x0048 (FullSize[0x0120] - InheritedSize[0x00D8])
class UDBDAttackHittingSubstate : public UDBDAttackSubstate
{
public:
	struct FStatProperty                               _hittingPercentDamageBegin;                                // 0x00D8(0x0048) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackHittingSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackSuccessSubstate
// 0x0000 (FullSize[0x00D8] - InheritedSize[0x00D8])
class UDBDAttackSuccessSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackSuccessSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackMissSubstate
// 0x0000 (FullSize[0x00D8] - InheritedSize[0x00D8])
class UDBDAttackMissSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackMissSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackObstructSubstate
// 0x0000 (FullSize[0x00D8] - InheritedSize[0x00D8])
class UDBDAttackObstructSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackObstructSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAIController
// 0x0160 (FullSize[0x04A0] - InheritedSize[0x0340])
class UDBDAIController : public UaiController
{
public:
	float                                              DefaultSightRange;                                         // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CloakedTargetSightRange;                                   // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<DeadByDaylight_EAIDifficultyLevel, int>       AIDifficultyMaxPlayerRanks;                                // 0x0348(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XH6F[0x18];                                    // 0x0398(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Upawn*                                       _aiPawn;                                                   // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Upawn*                                       _lastAiPawn;                                               // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MG8U[0x8];                                     // 0x03C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UObject*, float>                        _contextualPathSpeedFactors;                               // 0x03C8(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UObject*                                     _objOverridingDefaultNavigationFilter;                     // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _originalDefaultNavigationFilter;                          // 0x0420(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CWTB[0x18];                                    // 0x0428(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EPawnInputPressTypes, class UObject*> _inputLocks;                                               // 0x0440(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UObject*                                     _movementLock;                                             // 0x0490(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QIK8[0x8];                                     // 0x0498(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAIController");
		return ptr;
	}



	void WiggleRequest(class UObject* requester, float input);
	void UseItemRequest(class UObject* requester);
	void StruggleRequest(class UObject* requester, float input);
	bool SetCharacterMovement(DeadByDaylight_ECharacterMovementTypes movementTypes, class UObject* requester);
	void Server_SetAIPlayerRank(int playerRank);
	void SecondAttackRequest(class UObject* requester);
	void SecondaryActionRequest(class UObject* requester);
	void InteractRequestRelease(class UObject* requester);
	void InteractRequest(class UObject* requester);
	void Gesture04Request(class UObject* requester);
	void Gesture03Request(class UObject* requester);
	void Gesture02Request(class UObject* requester);
	void Gesture01Request(class UObject* requester);
	void FastInteractRequest(class UObject* requester);
	void EndUseItemRequest(class UObject* requester);
	void EndSecondAttackRequest(class UObject* requester);
	void EndInteractRequest(class UObject* requester);
	void EndFastInteractRequest(class UObject* requester);
	void EndDropItemRequest(class UObject* requester);
	void EndActionRequest(class UObject* requester);
	void DropItemRequest(class UObject* requester);
	void AttackRequest(class UObject* requester);
	void ActionRequest(class UObject* requester);
};

// Class DeadByDaylight.DBDAIUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDAIUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAIUtilities");
		return ptr;
	}



	void STATIC_SetCanEverAffectNavigation(class UactorComponent* component, bool affectNavigation);
	class UNavigationPath* STATIC_FindPathWithAgentRadiusToActorSynchronously(class UObject* worldContextObject, const struct Fvector& PathStart, class Uactor* goalActor, float agentRadius, float TetherDistance, class Uactor* PathfindingContext, class UClass* filterClass);
	bool STATIC_DrawDebugAIPerception();
	bool STATIC_DrawDebugAINavigationFilter();
	bool STATIC_DrawDebugAINavigation();
};

// Class DeadByDaylight.gameplayModifierContainer
// 0x00F0 (FullSize[0x01D0] - InheritedSize[0x00E0])
class UgameplayModifierContainer : public UBaseModifierContainer
{
public:
	bool                                               UseApplyFunction;                                          // 0x00E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_95U1[0x67];                                    // 0x00E1(0x0067) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UBaseModifierCondition*>              _conditionsInner;                                          // 0x0148(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               _tags;                                                     // 0x0158(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastStatusView;                                       // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9REH[0x3];                                     // 0x0169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       statusViewID;                                              // 0x016C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ODA8[0x48];                                    // 0x0178(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _activationTimer;                                          // 0x01C0(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YD6G[0x8];                                     // 0x01C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.gameplayModifierContainer");
		return ptr;
	}



	void UpdateIsApplicable();
	void UnlistenToGameEvent(DeadByDaylight_EDBDScoreTypes eventType);
	void UnlistenToDispatcherGameEvent(const struct FgameplayTag& eventType);
	void UnlistenToAllGameEvents();
	void UnlistenToAllDispatcherGameEvents();
	void SetStatusView(bool BroadcastStatusView, const struct FName& statusViewID);
	void SetModifierValue(const struct FgameplayTag& type, float GameplayModifierValue);
	void SetFlag(const struct FgameplayTag& flag, bool flagValue);
	void RemoveModifier(const struct FgameplayTag& type);
	void RemoveAllModifiers();
	void RemoveAllFlags();
	void OnRep_ConditionsInner();
	void OnRep_ActivationTimer();
	void OnListenedGameEvent(DeadByDaylight_EDBDScoreTypes eventType, float Amount, class Uactor* instigator, class Uactor* target);
	void OnLevelReadyToPlay();
	void OnInitialized_Internal();
	void OnInitialized();
	void OnGameplayEvent(DeadByDaylight_EDBDScoreTypes eventType, float Amount, class Uactor* instigator, class Uactor* target);
	void OnGameEventDispatched(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnApplyEnd();
	void OnApplyBegin();
	void ListenToGameEvent(DeadByDaylight_EDBDScoreTypes eventType);
	void ListenToDispatcherGameEvent(const struct FgameplayTag& eventType);
	bool IsStatusViewActive();
	bool IsActivationTimerDone();
	bool IsActivationTimerActive();
	void InstantiateGameplayModifierConditions();
	bool HasModifierOfType(const struct FgameplayTag& type);
	bool HasFlag(const struct FgameplayTag& flag);
	float GetRemainingLifetime();
	float GetPercentageFill();
	class UdbdPlayer* GetOwningPlayer();
	class UgameplayModifierContainer* GetOriginatingEffect();
	float GetModifierValue(const struct FgameplayTag& type);
	int GetLevelToDisplay();
	DeadByDaylight_EInventoryItemType GetInventoryItemType();
	int GetIconFilePathIndex();
	float GetActivationTimerRemainingTime();
	float GetActivationTimerPercentRemaining();
	float GetActivationTimerElapsedTimePercent();
	float GetActivationTimerElapsedTime();
	void FireActiveStatusViewEvent(const struct FName& statusViewID, const struct FName& uniqueSourceID, const struct FstatusViewSource& statusViewSource);
	void Authority_TriggerActivationTimer(float activationTime);
	void Authority_SetActivationTimerPaused(bool paused);
	void Authority_ClearActivationTimer();
	void Apply(float deltaTime);
	class UBaseModifierCondition* AddCondition(class UClass* conditionType);
};

// Class DeadByDaylight.statusEffect
// 0x00D8 (FullSize[0x02A8] - InheritedSize[0x01D0])
class UstatusEffect : public UgameplayModifierContainer
{
public:
	float                                              CustomParam;                                               // 0x01D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BM6Q[0x34];                                    // 0x01D4(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayModifierData                       ModifierData;                                              // 0x0208(0x0030) (Edit, Net, Protected, NativeAccessSpecifierProtected)
	bool                                               ShouldDisplay;                                             // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CTYU[0x7];                                     // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _originatingPlayer;                                        // 0x0240(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _removeOnRemainingLifetimeEnded;                           // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectWhenApplicable;                     // 0x0249(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectByActivationTimer;                  // 0x024A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectWhenLifeRemains;                    // 0x024B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectByFunction;                         // 0x024C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectAlways;                             // 0x024D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastOriginatorGameEventNotificationWhenFirstApplicable; // 0x024E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WSQ3[0x1];                                     // 0x024F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UgameplayModifierContainer*                  _originatingEffect;                                        // 0x0250(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_61W9[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _nonStackingEffects[0x10];                                 // 0x0258(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_RF8F[0x38];                                    // 0x0270(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.statusEffect");
		return ptr;
	}



	bool ShouldDisplayStatusEffectIcon();
	void SetStatusEffectIconPercentage(float Value);
	void SetShouldDisplay(bool on);
	void OnShouldDisplayChanged(bool currentValue);
	void OnRep_ShouldDisplay();
	void Multicast_SetRemainingLifetime(float lifeTime);
	void Multicast_InitializeStatusEffect(const struct FName& statusEffectID, class UdbdPlayer* originatingPlayer, float CustomParam, class UgameplayModifierContainer* originatingEffect, bool ShouldDisplay, float lifeTime);
	bool IsOriginatorHooked();
	bool IsOriginatorAlive();
	bool IsKillerInOriginatorRange(float AdditiveRangeModifier);
	bool IsInOriginatorRange();
	void InitializeLifetime(float lifeTime);
	float GetStatusEffectCooldownRate();
	bool GetShouldDisplay();
	class UdbdPlayer* GetOriginatingPlayer();
	float GetLifetimeDuration();
	void FireActiveStatusEffectEvent(float percentage, int levelToDisplay);
	void BroadcastOriginatorGameEventNotification();
	void BroadcastGameEventNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory);
	void Authority_SetRemainingLifetime(float lifeTime);
	void Authority_RemoveSelf();
	void Authority_EndSelf();
};

// Class DeadByDaylight.perk
// 0x0178 (FullSize[0x0348] - InheritedSize[0x01D0])
class Uperk : public UgameplayModifierContainer
{
public:
	unsigned char                                      UnknownData_736B[0x60];                                    // 0x01D0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayModifierData                       PerkLevelData[0x3];                                        // 0x0230(0x0090) (Edit, Net, EditFixedSize, Protected, NativeAccessSpecifierProtected)
	int                                                _perkLevel;                                                // 0x02C0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6GNR[0x34];                                    // 0x02C4(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PerkIconStrategyClass;                                     // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTokenCountChangedBP;                                     // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                               _isUsable;                                                 // 0x0310(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastWhenApplicable;                                   // 0x0311(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastOnTimer;                                          // 0x0312(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastCooldownTimer;                                    // 0x0313(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastInactiveCooldownTimer;                            // 0x0314(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastAlways;                                           // 0x0315(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YKR9[0x2];                                     // 0x0316(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBasePerkIconStrategy*                       _perkIconStrategy;                                         // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EInputInteractionType               _activatableInteractionInputType;                          // 0x0320(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SJ6U[0x3];                                     // 0x0321(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _tokenCount;                                               // 0x0324(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxTokenCount;                                            // 0x0328(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1X96[0x4];                                     // 0x032C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _cooldownTimer;                                            // 0x0330(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZFI5[0x8];                                     // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _hudIconTimer;                                             // 0x0340(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.perk");
		return ptr;
	}



	void SetIsUsable(bool Value);
	void OnRep_TokenCount(int oldCount);
	void OnRep_IsUsable();
	void OnRep_CooldownTimer();
	void Multicast_InitializePerk(const struct FName& perkID, int perkLevel, DeadByDaylight_EInputInteractionType activatableInteractionInputType);
	bool IsHudIconTimerDone();
	bool IsCooldownTimerDone();
	int GetTokenCount();
	int GetPerkLevel();
	int GetMaxTokenCount();
	bool GetIsUsable();
	float GetHudIconTimerElapsedTimePercent();
	class UTimerObject* GetCooldownTimer();
	void FireActivePerkEvent(float percentage, int chargeCount);
	void Authority_TriggerHudIconTimer(float duration);
	void Authority_TriggerCooldownTimer(float coolddownTime);
	void Authority_SetTokenCount(int Value);
	void Authority_SetMaxTokenCount(int Value);
	void Authority_SetIsUsable(bool Value);
	void Authority_IncrementToken();
	void Authority_DecrementToken();
};

// Class DeadByDaylight.GameplayModifierCondition
// 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
class UGameplayModifierCondition : public UBaseModifierCondition
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameplayModifierCondition");
		return ptr;
	}



	void SetOwningGameplayModifier(class UgameplayModifierContainer* OwningGameplayModifier);
	void OnOwningGameplayModifierSet();
	bool isApplicable();
	class UdbdPlayer* GetOwningPlayer();
	class UgameplayModifierContainer* GetOwningGameplayModifier();
};

// Class DeadByDaylight.ItemModifier
// 0x0030 (FullSize[0x0200] - InheritedSize[0x01D0])
class UItemModifier : public UgameplayModifierContainer
{
public:
	struct FGameplayModifierData                       ModifierData;                                              // 0x01D0(0x0030) (Edit, Net, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ItemModifier");
		return ptr;
	}



	void HandleIncreaseMaxCharge();
	void HandleIncreaseItemCount();
	void HandleIncreaseCharge();
	float GetItemMaxEnergy();
	float GetItemEnergy();
	int GetItemCount();
	class Ucollectable* GetBaseItem();
	void AuthoritySetItemMaxEnergy(float energy);
	void AuthoritySetItemEnergy(float energy);
	void AuthoritySetItemCount(int ItemCount);
};

// Class DeadByDaylight.ItemAddon
// 0x0018 (FullSize[0x0218] - InheritedSize[0x0200])
class UItemAddon : public UItemModifier
{
public:
	class UClass*                                      BaseItemType;                                              // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInventoryItemType                  InventoryItemType;                                         // 0x0208(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5WKO[0xF];                                     // 0x0209(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ItemAddon");
		return ptr;
	}



	void SetUpAddon();
	void OnPostItemAddonsCreation(class UdbdPlayer* player, class Ucollectable* Item);
	void Multicast_SetBaseItem(class Ucollectable* baseItem);
	void Multicast_InitializeItemAddon(const struct FName& addonID, DeadByDaylight_EInventoryItemType itemType);
	void Multicast_AddAddonToItem(class Ucollectable* Item);
	bool IsReadyForSetUp();
	void DebugPrintStats();
	void Authority_OnCollectablePickedUp(class UdbdPlayer* player);
	void Authority_OnCollectableDropped(class UdbdPlayer* player);
	void ApplyMetaModifiers();
};

// Class DeadByDaylight.DBDGameState
// 0x04C0 (FullSize[0x0768] - InheritedSize[0x02A8])
class UDBDGameState : public UgameState
{
public:
	unsigned char                                      UnknownData_JZRC[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEscapeDoorActivated;                                     // 0x02B0(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CTIG[0x90];                                    // 0x02C0(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLevelReadyToPlay;                                        // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIntroCompleted;                                          // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKillerIntroCompletePercentChanged;                       // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLightingGenerated;                                       // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GA9I[0x18];                                    // 0x0390(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    AuthorityOnAllPlayerLoaded;                                // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BS1Y[0x18];                                    // 0x03B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnActivatedGeneratorCountChangedDynamic;                   // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSlasherSet;                                              // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TYZ5[0x18];                                    // 0x03F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnObsessionChanged;                                        // 0x0408(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                CamperDeadCount;                                           // 0x0418(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CamperInMeatLockerCount;                                   // 0x041C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CamperEscaped;                                             // 0x0420(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WaitingForEscape;                                          // 0x0424(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CamperCount;                                               // 0x0428(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LeaveSpectateRequested;                                    // 0x042C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3F35[0x3];                                     // 0x042D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SecondsLeftInLobby;                                        // 0x0430(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YXRE[0x34];                                    // 0x0434(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UslasherPlayer*                              slasher;                                                   // 0x0468(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2LLX[0x10];                                    // 0x0470(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _camperHookedInBasementCount;                              // 0x0480(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0OYT[0x8];                                     // 0x0484(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _playersReadyToStart;                                      // 0x048C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8C61[0x3];                                     // 0x048D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBuiltLevelData                             _builtLevelData;                                           // 0x0490(0x0078) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FOfferingData                               _levelOfferings;                                           // 0x0508(0x0018) (Net, Transient, NativeAccessSpecifierPrivate)
	class UClipManager*                                _clipManager;                                              // 0x0520(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct Fguid                                       _sessionId;                                                // 0x0528(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct Fguid                                       _lobbyId;                                                  // 0x0538(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _activatedGeneratorCount;                                  // 0x0548(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _requiredActivatedGeneratorCount;                          // 0x054C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _escapeDoorActivated;                                      // 0x0550(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _escapeDoorOpened;                                         // 0x0551(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isHatchOpen;                                              // 0x0552(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _levelReadyToPlay;                                         // 0x0553(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _playerDistributionReady;                                  // 0x0554(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _usingWeakenedMechanic;                                    // 0x0555(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CVO0[0x2];                                     // 0x0556(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _survivorLeft;                                             // 0x0558(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QW6E[0x4];                                     // 0x055C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UMeatHook*>                           _meatHooks;                                                // 0x0560(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USearchable*>                         _searchables;                                              // 0x0570(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class Ugenerator*>                          _generators;                                               // 0x0580(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UEscapeDoor*>                         _escapeDoors;                                              // 0x0590(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UHatch*>                              _hatches;                                                  // 0x05A0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UReverseBearTrapRemover*>             _reverseBearTrapRemovers;                                  // 0x05B0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UBaseTrap*>                           _baseTraps;                                                // 0x05C0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class Upallet*>                             _pallets;                                                  // 0x05D0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UWindow*>                             _windows;                                                  // 0x05E0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ULocker*>                             _lockers;                                                  // 0x05F0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UBreakableBase*>                      _breakableWalls;                                           // 0x0600(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTotem*>                              _totems;                                                   // 0x0610(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZNVL[0x1C];                                    // 0x0620(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _camperEscapedThroughHatch;                                // 0x063C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UcamperPlayer*                               _obsessionTarget;                                          // 0x0640(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _cachedObsessionEscaped;                                   // 0x0648(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3N2D[0x7];                                     // 0x0649(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class Uinteractable*>                       _traps;                                                    // 0x0650(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5WOO[0x8];                                     // 0x0660(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FgamePresetData                             _gamePresetData;                                           // 0x0668(0x0078) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelLoaded;                                          // 0x06E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelCreated;                                         // 0x06E1(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelEnded;                                           // 0x06E2(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EEndGameReason                      _gameEndedReason;                                          // 0x06E3(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BEN5[0x4];                                     // 0x06E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEndGameStateComponent*                      _endGameState;                                             // 0x06E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URenderingFeaturesSequencer*                 _renderingSequencer;                                       // 0x06F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActorPairQueryEvaluatorComponent*           _actorPairQueryEvaluatorComponent;                         // 0x06F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZLRX[0x8];                                     // 0x0700(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterCollection*                        _characterCollection;                                      // 0x0708(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCollectableCollection*                      _collectableCollection;                                    // 0x0710(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UServerTimeProviderComponent*                _serverTimeProvider;                                       // 0x0718(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3I0Q[0x30];                                    // 0x0720(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isServerDedicated;                                        // 0x0750(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_273H[0x3];                                     // 0x0751(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxSurvivorCount;                                         // 0x0754(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _serverBuildVersion;                                       // 0x0758(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameState");
		return ptr;
	}



	void SortOfferings();
	void SetPlayersReadyToStart(bool playersReadyToStart);
	void SetKillerIntroCompletedNormalized(float completedAmount);
	void SetGameLevelEnded(DeadByDaylight_EEndGameReason endGameReason);
	void SetDisplayMapName(bool display);
	void SetBuiltLevelData(const struct FName& themeName, const struct FName& themeWeather, const struct FName& audioStateThemes, const struct FName& audioStateWeather, const struct FName& audioGameStartEvent, const struct FString& mapName, int tileCount, TArray<struct FDependency> LevelDependencies, const struct FName& specialEventId);
	void Server_UpdateGameRole();
	void ResetGameLevelStatus();
	void RemoveTrap(class Uinteractable* toRemove);
	void OnSlasherSetMultiDelegate__DelegateSignature(class UslasherPlayer* slasherPlayer);
	void OnRep_SurvivorLeft(int oldValue);
	void OnRep_SessionId();
	void OnRep_SecondsLeftInLobby(int oldValue);
	void OnRep_RequiredActivatedGeneratorCount(int oldRequiredActivatedGeneratorCount);
	void OnRep_PlayersReadyToStart(bool oldValue);
	void OnRep_OnLevelReadyToPlay(bool oldValue);
	void OnRep_OnGameLevelCreated();
	void OnRep_ObsessionTarget(class UcamperPlayer* previousObsessionTarget);
	void OnRep_LobbyId();
	void OnRep_HatchOpened(bool oldValue);
	void OnRep_GamePresetData();
	void OnRep_EscapeDoorActivated(bool oldValue);
	void OnRep_BuildLevelData();
	void OnRep_ActivatedGeneratorCount(int oldValue);
	void OnLevelReadyToPlayDelegate__DelegateSignature();
	void OnIntroCompleteDelegate__DelegateSignature();
	void Multicast_UpdateCharacterFromGamePreset(class UDBDPlayerState_Menu* playerState_Menu, const struct FgamePresetData& gamePresetData);
	void Multicast_SetServerLeftGame(bool hasServerLeftGame);
	void Multicast_SetLostServerConnection(bool hasLostServerConnection);
	void Multicast_SetGameLevelLoaded(bool gameLevelLoaded);
	void Multicast_SetGameLevelEnded(DeadByDaylight_EEndGameReason endGameReason);
	void Multicast_SetGameEnded(bool hasServerLeftGame);
	void Multicast_SetBuiltLevelData(const struct FName& themeName, const struct FName& themeWeather, const struct FName& audioStateThemes, const struct FName& audioStateWeather, const struct FName& audioGameStartEvent, const struct FString& mapName, int tileCount, TArray<struct FDependency> LevelDependencies, const struct FName& specialEventId);
	void Multicast_SendEnsureToClients(const struct FString& ensure);
	void Multicast_OnGameStarted();
	bool IsPlayerDistributionReady();
	bool IsOnePlayerLeft();
	bool IsOfferingReceived();
	bool IsObsessionTargetAliveInLevel();
	bool IsObsessionTargetAlive();
	bool IsLightingGenerated();
	bool IsLevelSetupDone();
	bool IsLevelReadyToPlay();
	bool IsIntroCompleted();
	bool IsHatchVisible();
	bool IsEscapeRequirementCompleted();
	bool IsEscapeDoorOpen();
	bool IsEscapeDoorActivated();
	void IntroCompleted();
	TArray<class Uinteractable*> GetTraps();
	int GetSurvivorLeft();
	TArray<struct FselectedOffering> GetSelectedOfferings();
	bool GetSelectedOffering(int index, struct FselectedOffering* selectedOffering);
	int GetRequiredActivatedGeneratorCount();
	int GetRemainingGeneratorsNeeded();
	class UDBDPlayerState* GetPlayerStateByMirrorsID(const struct FString& Id);
	class UDBDPlayerState* GetPlayerStateByIDString(const struct FString& Id);
	bool GetPlayersReadyToStart();
	void GetPlayerRoleCounts(int* survivorCount, int* killerCount, int* SpectatorCount);
	class UcamperPlayer* GetObsessionTarget();
	int GetNumberOfOtherActiveSurvivors(class UdbdPlayer* exception);
	int GetNumberOfActiveSurvivors();
	struct FName GetMapThemeName();
	class UDBDPlayerState* GetLocalPlayerState();
	class UdbdPlayer* GetLocalPlayerPawn();
	class Upawn* GetLocalPlayerBasePawn();
	struct FBuiltLevelData GetLevelData();
	float GetKillerIntroCompletedNormalized();
	class UslasherPlayer* GetKiller();
	bool GetIsGameEnded();
	TArray<class UWindow*> GetInGameWindows();
	TArray<class USearchable*> GetInGameSearchables();
	TArray<class UReverseBearTrapRemover*> GetInGameReverseBearTrapRemovers();
	TArray<class Upallet*> GetInGamePallets();
	TArray<class UMeatHook*> GetInGameMeatHooks();
	TArray<class UHatch*> GetInGameHatches();
	TArray<class Ugenerator*> GetInGameGenerators();
	TArray<class UEscapeDoor*> GetInGameEscapeDoors();
	TArray<class UBaseTrap*> GetInGameBaseTraps();
	bool GetGameLevelLoaded();
	class UEndGameStateComponent* GetEndGameStateComponent();
	class UCollectableCollection* GetCollectableCollection();
	class UCharacterCollection* GetCharacterCollection();
	void CallOnSlasherSet(const struct FScriptDelegate& CallBack);
	void CallOnLevelReadyToPlay(const struct FScriptDelegate& CallBack);
	void CallOnIntroComplete(const struct FScriptDelegate& CallBack);
	void BroadcastOnSetBuildLevelData();
	void Authority_SetSurvivorLeft(int survivorRemaining);
	void Authority_SetLevelReadyToPlay();
	void Authority_SetHatchOpen(bool Opened);
	void Authority_SetGameSelectedOffering(TArray<struct FselectedOffering> Offerings);
	void Authority_SetGameLevelLoaded();
	void Authority_SetGameLevelEnded(DeadByDaylight_EEndGameReason endGameReason);
	void Authority_SetGameLevelCreated();
	void Authority_SetEscapeDoorOpened(bool Opened);
	void Authority_SetAllPlayerLoaded();
	void Authority_EvaluateObsessionTarget(class UdbdPlayer* potentialTarget);
	void Authority_EscapeThroughHatch();
	void Authority_EnableObsession();
	void AddTrap(class Uinteractable* toAdd);
};

// Class DeadByDaylight.PresentationItemProgressComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UPresentationItemProgressComponent : public UactorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PresentationItemProgressComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEmblem
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UDBDEmblem : public UactorComponent
{
public:
	float                                              _points;                                                   // 0x00B8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VFY7[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FprogressionPoints>                  _progressionPoints;                                        // 0x00C0(0x0010) (Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                         _definition;                                               // 0x00D0(0x0018) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PFV3[0x20];                                    // 0x00E8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDEmblem");
		return ptr;
	}



	void Client_FinalizeReplication(float points, TArray<struct FprogressionPoints> progressionPoints);
};

// Class DeadByDaylight.AbstractGameFlowHandler
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAbstractGameFlowHandler : public UGameInstanceSubsystem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AbstractGameFlowHandler");
		return ptr;
	}



};

// Class DeadByDaylight.AchievementHandlerComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UAchievementHandlerComponent : public UactorComponent
{
public:
	class UNoPerkGeneratorRepairEscapeAchievement*     _noPerkGeneratorRepairEscapeAchievement;                   // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AchievementHandlerComponent");
		return ptr;
	}



	void ReceiveGameEvent(DeadByDaylight_EDBDScoreTypes ScoreType, float Amount, class Uactor* instigator, class Uactor* target);
	void OnGameEvent(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
};

// Class DeadByDaylight.ActionButton
// 0x01E0 (FullSize[0x04E0] - InheritedSize[0x0300])
class UActionButton : public UMobileBaseUserWidget
{
public:
	class Uimage*                                      IconImage;                                                 // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      ToggleSmokeImage;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Ubutton*                                     button;                                                    // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultOpacity;                                            // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ToggledOpacity;                                            // 0x031C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisabledOpacity;                                           // 0x0320(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LBAY[0x4];                                     // 0x0324(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 normal;                                                    // 0x0328(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Toggled;                                                   // 0x03B8(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 DISABLED;                                                  // 0x0448(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	DeadByDaylight_EActionButtonState                  _currentState;                                             // 0x04D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EActionButtonState                  _previousState;                                            // 0x04D9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JRPF[0x6];                                     // 0x04DA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActionButton");
		return ptr;
	}



	void SetState(DeadByDaylight_EActionButtonState state);
	void SetSlateBrush(const struct FSlateBrush& InBrush);
	void SetPreviousState();
};

// Class DeadByDaylight.BasePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBasePerkIconStrategy : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BasePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActivationTimerElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActivationTimerIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerRemainingCooldownElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActivationTimerRemainingCooldownElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerRemainingPercentIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerRemainingPercentIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActivationTimerRemainingPercentIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveOnTimerOrApplicablePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveOnTimerOrApplicablePerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActiveOnTimerOrApplicablePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveOnTimerPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveOnTimerPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActiveOnTimerPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveWhenApplicableAndNotCampingPerkIconStrategy
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UActiveWhenApplicableAndNotCampingPerkIconStrategy : public UBasePerkIconStrategy
{
public:
	unsigned char                                      UnknownData_GH5Z[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActiveWhenApplicableAndNotCampingPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveWhenApplicablePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveWhenApplicablePerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActiveWhenApplicablePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActorClipperComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UActorClipperComponent : public UactorComponent
{
public:
	class USphereComponent*                            Shape;                                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class Uactor*, struct FClippedActor>          _clippedActors;                                            // 0x00C0(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UPrimitiveCollection>         _clippables;                                               // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CIA4[0x10];                                    // 0x0118(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorClipperComponent");
		return ptr;
	}



	void SetPrimitiveCollection(class UPrimitiveCollection* clippables);
	void SetClippingEnabled(bool enabled);
	void OnOwnerLocallyObservedChanged(bool locallyObserved);
};

// Class DeadByDaylight.ActorComponentExt
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActorComponentExt : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorComponentExt");
		return ptr;
	}



	bool STATIC_isLocallyObserved(class UactorComponent* actorComponent, bool recursiveSearch);
	bool STATIC_IsLocallyControlled(class UactorComponent* actorComponent, bool recursiveSearch);
	bool STATIC_HasAuthority(class UactorComponent* actorComponent);
	class Uactor* STATIC_GetValidatedOwner(class UactorComponent* actorComponent);
	class UcamperPlayer* STATIC_GetOwningSurvivorChecked(class UactorComponent* actorComponent, bool recursiveSearch);
	class UcamperPlayer* STATIC_GetOwningSurvivor(class UactorComponent* actorComponent, bool recursiveSearch);
	class UdbdPlayer* STATIC_GetOwningPlayerInHierarchy(class UactorComponent* actorComponent);
	class UdbdPlayer* STATIC_GetOwningPlayerChecked(class UactorComponent* actorComponent, bool recursiveSearch);
	class UdbdPlayer* STATIC_GetOwningPlayer(class UactorComponent* actorComponent, bool recursiveSearch);
	class Upawn* STATIC_GetOwningPawnChecked(class UactorComponent* actorComponent, bool recursiveSearch);
	class Upawn* STATIC_GetOwningPawn(class UactorComponent* actorComponent, bool recursiveSearch);
	class UslasherPlayer* STATIC_GetOwningKiller(class UactorComponent* actorComponent, bool recursiveSearch);
	class Ucharacter* STATIC_GetOwningCharacterChecked(class UactorComponent* actorComponent, bool recursiveSearch);
	class Ucharacter* STATIC_GetOwningCharacter(class UactorComponent* actorComponent, bool recursiveSearch);
};

// Class DeadByDaylight.ActorDependency
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UActorDependency : public UactorComponent
{
public:
	TArray<struct FDependency>                         Dependencies;                                              // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorDependency");
		return ptr;
	}



};

// Class DeadByDaylight.ActorDetectorComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UActorDetectorComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnActorDetected;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              CollectedTypes;                                            // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UprimitiveComponent*                         _primitive;                                                // 0x00D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorDetectorComponent");
		return ptr;
	}



	void SetDetectionPrimitive(class UprimitiveComponent* primitive);
	void OnOverlapEnter(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
};

// Class DeadByDaylight.ActorKnowledgeCollection
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UActorKnowledgeCollection : public UactorComponent
{
public:
	TArray<class Uactor*>                              _actors;                                                   // 0x00B8(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _available;                                                // 0x00C8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2TA6[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Ucharacter*                                  _possessor;                                                // 0x00D0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EKnowledgeSharingType               _sharing;                                                  // 0x00D8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M6KQ[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorKnowledgeCollection");
		return ptr;
	}



	bool IsAvailable(class Ucharacter* character);
	bool Contains(class Uactor* actor);
	void Authority_SetSharingType(DeadByDaylight_EKnowledgeSharingType Value);
	void Authority_SetPossessor(class Ucharacter* possessor);
	void Authority_SetAvailable(bool Value);
	void Authority_Remove(class Uactor* actor);
	void Authority_Empty();
	void Authority_Append(TArray<class Uactor*> actors);
	bool Authority_Add(class Uactor* actor);
};

// Class DeadByDaylight.ActorSpawner
// 0x00B8 (FullSize[0x02C8] - InheritedSize[0x0210])
class UActorSpawner : public USceneComponent
{
public:
	unsigned char                                      UnknownData_08IB[0x10];                                    // 0x0210(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EGameplayElementType                type;                                                      // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_42LM[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      Visualization[0x30];                                       // 0x0221(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               ActivatedByDefault;                                        // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G4F1[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActorSpawnerProperties>             ActivatedSceneElement;                                     // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActorSpawnerProperties>             DeactivatedSceneElement;                                   // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Weight;                                                    // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnCountMax;                                             // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnPriorityTier;                                         // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XCG6[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAsyncActorSpawned;                                       // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TQCF[0x8];                                     // 0x02A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               WeightInfluenceable;                                       // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               WeightInfluencer;                                          // 0x02A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HHEG[0x2];                                     // 0x02AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Cost;                                                      // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _toSpawn;                                                  // 0x02B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_73WF[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class Uactor>                       _spawnedActorOnAuthority;                                  // 0x02C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorSpawner");
		return ptr;
	}



	bool UseActivatedElement();
	bool isEnabled();
	void EditorForceSpawnVisualization();
	void AuthoritySelect(bool selected);
	class Uactor* AuthorityGetSpawnedActor();
	void Authority_SpawnActorAsyncEvent();
};

// Class DeadByDaylight.ObjectRandomizer
// 0x0018 (FullSize[0x0228] - InheritedSize[0x0210])
class UObjectRandomizer : public USceneComponent
{
public:
	TArray<class UActorSpawner*>                       spawners;                                                  // 0x0210(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinPopulation;                                             // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPopulation;                                             // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ObjectRandomizer");
		return ptr;
	}



};

// Class DeadByDaylight.ActorSpawnerRandomizer
// 0x0028 (FullSize[0x0250] - InheritedSize[0x0228])
class UActorSpawnerRandomizer : public UObjectRandomizer
{
public:
	TArray<struct FSpawnerElement>                     ActivatedSpawnerContentLists;                              // 0x0228(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpawnerElement>                     DeactivatedSpawnerContentLists;                            // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JVRR[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorSpawnerRandomizer");
		return ptr;
	}



};

// Class DeadByDaylight.ActorVariationSpawner
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UActorVariationSpawner : public USceneComponent
{
public:
	unsigned char                                      Visualization[0x30];                                       // 0x0210(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FActorVariationElements>             Variations;                                                // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5S0E[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _toSpawn;                                                  // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K5F9[0x10];                                    // 0x0260(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ActorVariationSpawner");
		return ptr;
	}



};

// Class DeadByDaylight.AIBotsManager
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UAIBotsManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_TW07[0x20];                                    // 0x0038(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AIBotsManager");
		return ptr;
	}



};

// Class DeadByDaylight.AICharacterBehaviourData
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAICharacterBehaviourData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AICharacterBehaviourData");
		return ptr;
	}



};

// Class DeadByDaylight.AICharacterBehaviour
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UAICharacterBehaviour : public UObject
{
public:
	unsigned char                                      UnknownData_6NQW[0x28];                                    // 0x0030(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AICharacterBehaviour");
		return ptr;
	}



	void Update();
	void stop();
	void SetEnable(bool Enable);
	void Resume();
	void Pause();
	bool isEnabled();
};

// Class DeadByDaylight.CharacterEvasionBehaviourData
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UCharacterEvasionBehaviourData : public UAICharacterBehaviourData
{
public:
	class Uactor*                                      _hunter;                                                   // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class Uactor*>                              _escapePoints;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minEscapeDist;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RJBL[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterEvasionBehaviourData");
		return ptr;
	}



	void Init(class Uactor* hunter, TArray<class Uactor*> escapePoints, float minEscapeDist);
};

// Class DeadByDaylight.AICharacterEvasionBehaviour
// 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
class UAICharacterEvasionBehaviour : public UAICharacterBehaviour
{
public:
	class UdbdPlayer*                                  _prey;                                                     // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAIPlayerController*                      _preyAIController;                                         // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uactor*                                      _currentEscapePoint;                                       // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterEvasionBehaviourData*              _characterEvasionData;                                     // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_47PE[0x8];                                     // 0x0078(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AICharacterEvasionBehaviour");
		return ptr;
	}



	void EscapeDestinationReached(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> result);
};

// Class DeadByDaylight.AimableInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAimableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AimableInterface");
		return ptr;
	}



};

// Class DeadByDaylight.AimAssistComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UAimAssistComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_CUBE[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AimAssistComponent");
		return ptr;
	}



};

// Class DeadByDaylight.AIMoveToInteractData
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UAIMoveToInteractData : public UAICharacterBehaviourData
{
public:
	class Uactor*                                      _interactActor;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uactor*                                      _targetPositionActor;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_ECharacterMovementTypes             _characterMovementTypes;                                   // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4THL[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AIMoveToInteractData");
		return ptr;
	}



	void Init(class Uactor* interactActor, DeadByDaylight_ECharacterMovementTypes characterMovementTypes, class Uactor* targetPositionActor);
};

// Class DeadByDaylight.AIMoveToInteract
// 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
class UAIMoveToInteract : public UAICharacterBehaviour
{
public:
	class UAIMoveToInteractData*                       _aiMoveToInteractData;                                     // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAIPlayerController*                      _aiController;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MYPK[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AIMoveToInteract");
		return ptr;
	}



	void InteractionPointReached(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> result);
	void Init(class UdbdPlayer* character, class UAICharacterBehaviourData* behaviourData);
};

// Class DeadByDaylight.AIPointOfInterestTargetInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAIPointOfInterestTargetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AIPointOfInterestTargetInterface");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseConfig_PointOfInterest
// 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
class UAISenseConfig_PointOfInterest : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinGeneratorRepairSoundRange;                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxGeneratorRepairSoundRange;                              // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISenseConfig_PointOfInterest");
		return ptr;
	}



};

// Class DeadByDaylight.AISense_PointOfInterest
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UAISense_PointOfInterest : public UAISense
{
public:
	TArray<class Uactor*>                              _sources;                                                  // 0x0090(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISense_PointOfInterest");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseConfig_Terror
// 0x0068 (FullSize[0x00B8] - InheritedSize[0x0050])
class UAISenseConfig_Terror : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxBreathingSoundRange;                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2S1I[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EAITerrorLevel, float>         TerrorRanges;                                              // 0x0060(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter                   DetectionByAffiliation;                                    // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MDTF[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISenseConfig_Terror");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseEvent_Terror
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UAISenseEvent_Terror : public UAISenseEvent
{
public:
	struct FAITerrorEvent                              event;                                                     // 0x0030(0x0028) (Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISenseEvent_Terror");
		return ptr;
	}



};

// Class DeadByDaylight.AISense_Terror
// 0x0060 (FullSize[0x00F0] - InheritedSize[0x0090])
class UAISense_Terror : public UAISense
{
public:
	TArray<struct FAITerrorEvent>                      _events;                                                   // 0x0090(0x0010) (ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FAR0[0x50];                                    // 0x00A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISense_Terror");
		return ptr;
	}



	void STATIC_ReportTerrorEvent(class UObject* worldContextObj, const struct Fvector& location, class Uactor* instigator, class UTerrorRadiusEmitterComponent* terrorEmitter);
};

// Class DeadByDaylight.AISenseConfig_Trail
// 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
class UAISenseConfig_Trail : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRange;                                                  // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PeripheralVisionAngleDegrees;                              // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter                   DetectionByAffiliation;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X34J[0x4];                                     // 0x0064(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISenseConfig_Trail");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseEvent_Trail
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UAISenseEvent_Trail : public UAISenseEvent
{
public:
	struct FAITrailEvent                               event;                                                     // 0x0030(0x0030) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISenseEvent_Trail");
		return ptr;
	}



};

// Class DeadByDaylight.AISense_Trail
// 0x0060 (FullSize[0x00F0] - InheritedSize[0x0090])
class UAISense_Trail : public UAISense
{
public:
	TArray<struct FAITrailEvent>                       Events;                                                    // 0x0090(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FL52[0x50];                                    // 0x00A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AISense_Trail");
		return ptr;
	}



	void STATIC_ReportTrailEvent(class UObject* worldContextObj, const struct Fvector& location, class Uactor* instigator, const struct FgameplayTag& ignoreOnPerkTag, float lifeTime);
};

// Class DeadByDaylight.ScreenBase
// 0x00F0 (FullSize[0x0120] - InheritedSize[0x0030])
class UScreenBase : public UObject
{
public:
	bool                                               IsAnimationDone;                                           // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YT0K[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGFxObject*                                  screenObject;                                              // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScreenController*                           _screenController;                                         // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QN71[0xD8];                                    // 0x0048(0x00D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ScreenBase");
		return ptr;
	}



	void SetFadesOut(bool fadesOut);
	void OnTextInputMouseClicked(bool isPassword);
	void OnStart();
	void OnNavKey(const struct FString& navKey);
	void OnHideVirtualKeyboardRequested();
	void OnEscape();
	void OnBack();
	void OnAtlantaBack();
	void OnAnyKey(float Code);
	void OnAnimationUpdate(int IsAnimationDone);
	void BroadcastOnHighlightedElementClickedEvent(const struct FName& OnBoardingId);
};

// Class DeadByDaylight.AlertsScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UAlertsScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AlertsScreen");
		return ptr;
	}



};

// Class DeadByDaylight.AlwaysVisiblePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAlwaysVisiblePerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AlwaysVisiblePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.Gate
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class UGate : public Uactor
{
public:
	TArray<float>                                      InteractionInputs;                                         // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractionOutput;                                         // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KBWR[0x4];                                     // 0x0244(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Gate");
		return ptr;
	}



};

// Class DeadByDaylight.AndGate
// 0x0000 (FullSize[0x0248] - InheritedSize[0x0248])
class UAndGate : public UGate
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AndGate");
		return ptr;
	}



};

// Class DeadByDaylight.AnimationMontageSlave
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UAnimationMontageSlave : public UactorComponent
{
public:
	unsigned char                                      UnknownData_JM5R[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AnimationMontageSlave");
		return ptr;
	}



	void SetLeader(class UMontagePlayer* leader);
	void OnMontageStopped(const struct FAnimationMontageDescriptor& Id);
	void OnMontageStarted(const struct FAnimationMontageDescriptor& Id, float rate);
};

// Class DeadByDaylight.AnimNotifyState_HideCustomizationAttachments
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotifyState_HideCustomizationAttachments : public UAnimNotifyState
{
public:
	DeadByDaylight_ECustomizationCategory              category;                                                  // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_94U8[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AnimNotifyState_HideCustomizationAttachments");
		return ptr;
	}



};

// Class DeadByDaylight.AnimTagProvider
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAnimTagProvider : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AnimTagProvider");
		return ptr;
	}



};

// Class DeadByDaylight.ApplicableActivationTimerRemainingCooldownElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UApplicableActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ApplicableActivationTimerRemainingCooldownElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveBaseScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class UArchiveBaseScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_782Y[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveBaseScreen");
		return ptr;
	}



	void OnTabSelected(int index);
};

// Class DeadByDaylight.ArchiveIntroScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UArchiveIntroScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveIntroScreen");
		return ptr;
	}



};

// Class DeadByDaylight.BasePopupScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UBasePopupScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BasePopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.GenericPopupScreen
// 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
class UGenericPopupScreen : public UBasePopupScreen
{
public:
	class UUMGGenericPopup*                            _popup;                                                    // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6CD3[0x18];                                    // 0x0128(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GenericPopupScreen");
		return ptr;
	}



	void OnChoiceSelected(int selectedButtonType);
};

// Class DeadByDaylight.ArchivePassPurchasePopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UArchivePassPurchasePopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchivePassPurchasePopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.ArchivePastStoriesScreen
// 0x0018 (FullSize[0x0150] - InheritedSize[0x0138])
class UArchivePastStoriesScreen : public UArchiveBaseScreen
{
public:
	unsigned char                                      UnknownData_WKKB[0x18];                                    // 0x0138(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchivePastStoriesScreen");
		return ptr;
	}



	void OnStorySelected(const struct FString& storyId);
};

// Class DeadByDaylight.ArchiveRewardsScreen
// 0x0078 (FullSize[0x01B0] - InheritedSize[0x0138])
class UArchiveRewardsScreen : public UArchiveBaseScreen
{
public:
	unsigned char                                      UnknownData_JWHP[0x78];                                    // 0x0138(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveRewardsScreen");
		return ptr;
	}



	void OnRotateCharacter(float mouseDistanceChange);
	void OnRewardItemClicked(const struct FString& itemId);
	void OnRewardCurrencyClicked(int currencyType);
	void OnPurchaseTier();
	void OnPurchasePremiumPass();
};

// Class DeadByDaylight.ArchivesHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UArchivesHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchivesHelper");
		return ptr;
	}



};

// Class DeadByDaylight.ArchivesManager
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UArchivesManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_ICSW[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UArchiveStoriesContainer*                    _storiesContainer;                                         // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArchiveVignettesContainer*                  _vignettesContainer;                                       // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URewardTrackContainer*                       _rewardTrackcontainer;                                     // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchivesManager");
		return ptr;
	}



};

// Class DeadByDaylight.ArchivesSpecialBehavioursHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UArchivesSpecialBehavioursHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchivesSpecialBehavioursHelper");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveStoriesContainer
// 0x0268 (FullSize[0x0298] - InheritedSize[0x0030])
class UArchiveStoriesContainer : public UObject
{
public:
	unsigned char                                      UnknownData_6JBD[0x198];                                   // 0x0030(0x0198) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URewardTrackContainer*                       _rewardTrackcontainer;                                     // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RP1L[0xB8];                                    // 0x01D0(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWalletHandler*                              _wallet;                                                   // 0x0288(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArchiveVignettesContainer*                  _vignettesContainer;                                       // 0x0290(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveStoriesContainer");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveStoryScreen
// 0x0130 (FullSize[0x0268] - InheritedSize[0x0138])
class UArchiveStoryScreen : public UArchiveBaseScreen
{
public:
	unsigned char                                      UnknownData_6CNS[0x130];                                   // 0x0138(0x0130) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveStoryScreen");
		return ptr;
	}



	void OnVignetteSelected(const struct FString& vignetteId);
	void OnStoryMapCreated();
	void OnStoryLevelCompletedOrMasteredAnimationDone(bool wasJustCompleted);
	void OnReceiveNodeCoordinates(const struct FString& NodeID, int posX, int PosY);
	void OnReceiveNeighbor(const struct FString& NodeID, const struct FString& neighborId);
	void OnQuestsSelected();
	void OnPlayVoiceOver(bool startPlaying, int EntryIndex);
	void OnPlayCinematic(int index);
	void OnNodeSelected(const struct FString& NodeID);
	void OnLevelSelected(int LevelIndex);
	void OnJournalSelected();
	void OnEntrySelected(int index);
	void OnAutoplayChanged(bool autoplayActive, int EntryIndex);
	void OnAllNodesReceived();
};

// Class DeadByDaylight.ArchiveTierPurchasePopupScreen
// 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
class UArchiveTierPurchasePopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_M0XT[0x18];                                    // 0x0140(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveTierPurchasePopupScreen");
		return ptr;
	}



	void OnConfirmPurchase(int tiersToPurchaseNumber);
};

// Class DeadByDaylight.ArchiveVignettesContainer
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UArchiveVignettesContainer : public UObject
{
public:
	unsigned char                                      UnknownData_936H[0xC0];                                    // 0x0030(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveVignettesContainer");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveWidgetScreen
// 0x0030 (FullSize[0x0150] - InheritedSize[0x0120])
class UArchiveWidgetScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_8359[0x30];                                    // 0x0120(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ArchiveWidgetScreen");
		return ptr;
	}



	void OnRewardsButtonClick();
	void OnQuestsButtonClick();
};

// Class DeadByDaylight.AssetLibrary
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UAssetLibrary : public UObject
{
public:
	unsigned char                                      UnknownData_WE05[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectLibrary*                              _objectLibrary;                                            // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QF1S[0x64];                                    // 0x0040(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondsDelayBetweenBatch;                                  // 0x00A4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4W1R[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.AssetLibraryManager
// 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
class UAssetLibraryManager : public UObject
{
public:
	unsigned char                                      UnknownData_6LCJ[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     _worldContextObject;                                       // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int, class UCharacterItemsAssetLibrary*>      _characterItemsAssetLibrary;                               // 0x0048(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UIniAssetLibrary*                            _globalAssetLibrary;                                       // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMenuAssetLibrary*                           _menuAssetLibrary;                                         // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameAssetLibrary*                           _gameAssetLibrary;                                         // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTutorialAssetLibrary*                       _tutorialAssetLibrary;                                     // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RYE3[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UShopManager*                                _shopManager;                                              // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UEK7[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAssetLibraryLoader>                 _loadingList;                                              // 0x00D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CharacterItemsAssetLoadCountPerChunk;                      // 0x00E8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                BlindPackAssetLoadCountPerChunk;                           // 0x00EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MenuAssetLoadCountPerChunk;                                // 0x00F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                GlobalAssetLoadCountPerChunk;                              // 0x00F4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                GameAssetLoadCountPerChunk;                                // 0x00F8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CFIP[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AssetLibraryManager");
		return ptr;
	}



};

// Class DeadByDaylight.AssetUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAssetUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AssetUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaCamperInitializer
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UAtlantaCamperInitializer : public UactorComponent
{
public:
	struct Fvector                                     HeartbeatOffset;                                           // 0x00B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_82SQ[0xC];                                     // 0x00C4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaCamperInitializer");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaFriendsListScreenUMG
// 0x0080 (FullSize[0x01A0] - InheritedSize[0x0120])
class UAtlantaFriendsListScreenUMG : public UScreenBase
{
public:
	unsigned char                                      UnknownData_90E9[0x78];                                    // 0x0120(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGAtlantaFriendListScreen*                 _atlantaFriendListScreen;                                  // 0x0198(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaFriendsListScreenUMG");
		return ptr;
	}



	void HandleResearchButtonClicked(const struct FText& searchInput);
	void HandleClosedButtonClicked();
};

// Class DeadByDaylight.AtlantaHeartbeatActor
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class UAtlantaHeartbeatActor : public Uactor
{
public:
	bool                                               IsHeartbeatShown;                                          // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_27ZK[0x1F];                                    // 0x0231(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaHeartbeatActor");
		return ptr;
	}



	void ShowHeartbeat();
	void SetHeartbeatIntensity(float heartbeatIntensity);
	void SetHeartbeatAnimationSpeedRate(float speedRate);
	void HideHeartbeat();
};

// Class DeadByDaylight.AtlantaHudDirectionalStick
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UAtlantaHudDirectionalStick : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                ContainerToRotate;                                         // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ArrowsContainer;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaHudDirectionalStick");
		return ptr;
	}



	void SetArrowsActive(bool Value);
};

// Class DeadByDaylight.LobbyLevel
// 0x0060 (FullSize[0x0298] - InheritedSize[0x0238])
class ULobbyLevel : public ULevelScriptActor
{
public:
	unsigned char                                      UnknownData_HU9T[0x48];                                    // 0x0238(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDisplayStand*>                       _registeredDisplayStands;                                  // 0x0280(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EWorldFlowEvent                     LobbyLoadedEvent;                                          // 0x0290(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_980A[0x7];                                     // 0x0291(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LobbyLevel");
		return ptr;
	}



	void OnShopSubLevelLoaded();
	void OnLobbySubLevelLoaded();
};

// Class DeadByDaylight.AtlantaLobbyLevel
// 0x0060 (FullSize[0x02F8] - InheritedSize[0x0298])
class UAtlantaLobbyLevel : public ULobbyLevel
{
public:
	unsigned char                                      UnknownData_GY28[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FlightingChannels                           ForefrontLightingChannel;                                  // 0x02A0(0x0001) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FlightingChannels                           BackgroundLightingChannel;                                 // 0x02A1(0x0001) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B9LJ[0x2];                                     // 0x02A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UDBDMenuPlayer>               _backgroundPawn;                                           // 0x02A4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B0Z3[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAtlantaOfflineLobbyCamera*                  _offlineLobbyCamera;                                       // 0x02B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uactor*                                      _roleSelectionLobbyCameraPosition;                         // 0x02B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uactor*                                      _characterSelectionLobbyCameraPosition;                    // 0x02C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerStart*                                _frontKillerStart;                                         // 0x02C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerStart*                                _backKillerStart;                                          // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerStart*                                _frontSurvivorStart;                                       // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerStart*                                _backSurvivorStart;                                        // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B158[0x10];                                    // 0x02E8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaLobbyLevel");
		return ptr;
	}



	void FrontMenuPlayerSpawnedHandle(class UDBDMenuPlayer* forefrontPawn);
};

// Class DeadByDaylight.AtlantaNavigationScreen
// 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
class UAtlantaNavigationScreen : public UScreenBase
{
public:
	class UUMGAtlantaNavigationScreen*                 _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaNavigationScreen");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaObjectiveWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UAtlantaObjectiveWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  ObjectiveLabel;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J2VD[0x54];                                    // 0x0308(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _totalFadeOutTime;                                         // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _polynomialOrder;                                          // 0x0360(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CNOW[0x4];                                     // 0x0364(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaObjectiveWidget");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaOfflineLobbyCamera
// 0x0010 (FullSize[0x07B0] - InheritedSize[0x07A0])
class UAtlantaOfflineLobbyCamera : public UCameraActor
{
public:
	float                                              ZCameraPositionOffsetMultiplier;                           // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZGJQ[0x4];                                     // 0x07A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _kDefaultAspectRatio;                                      // 0x07A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9KW4[0x4];                                     // 0x07AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaOfflineLobbyCamera");
		return ptr;
	}



	void SetCameraRotation(const struct FRotator& rotationVector);
	void SetCameraPosition(const struct Fvector& positionVector);
};

// Class DeadByDaylight.AtlantaPartyFlowHandler
// 0x01B8 (FullSize[0x01E8] - InheritedSize[0x0030])
class UAtlantaPartyFlowHandler : public UObject
{
public:
	unsigned char                                      UnknownData_OPT6[0x1B8];                                   // 0x0030(0x01B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaPartyFlowHandler");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaInstalledContent
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UAtlantaInstalledContent : public UObject
{
public:
	unsigned char                                      UnknownData_C07R[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaInstalledContent");
		return ptr;
	}



	bool Mount(int PakOrder, const struct FString& MountPoint);
	float GetInstalledContentSize();
	float GetFreeDiskSpace();
};

// Class DeadByDaylight.AtlantaPendingContent
// 0x0040 (FullSize[0x0090] - InheritedSize[0x0050])
class UAtlantaPendingContent : public UAtlantaInstalledContent
{
public:
	unsigned char                                      UnknownData_PTYR[0x40];                                    // 0x0050(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaPendingContent");
		return ptr;
	}



	void StartInstall(const struct FScriptDelegate& OnSucceeded, const struct FScriptDelegate& OnFailed);
	float GetTotalDownloadedSize();
	float GetRequiredDiskSpace();
	bool GetIsDownloading();
	float GetInstallProgress();
	struct FText GetDownloadStatusText();
	float GetDownloadSpeed();
	float GetDownloadSize();
};

// Class DeadByDaylight.AtlantaPatchingLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaPatchingLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaPatchingLibrary");
		return ptr;
	}



	void STATIC_RequestContent(const struct FString& RemoteManifestURL, const struct FString& CloudURL, const struct FString& InstallDirectory, const struct FScriptDelegate& OnSucceeded, const struct FScriptDelegate& OnFailed);
	void STATIC_PrintPakLocations();
	bool STATIC_HasActiveWiFiConnection();
	TArray<struct FString> STATIC_GetSupportedPlatformNames();
	class UAtlantaInstalledContent* STATIC_GetInstalledContent(const struct FString& InstallDirectory, const struct FString& ManifestFilename);
	struct FString STATIC_GetActiveDeviceProfileName();
};

// Class DeadByDaylight.AtlantaPromptWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UAtlantaPromptWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PromptLabel;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F1S7[0x10];                                    // 0x0308(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaPromptWidget");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaRitualsScreen
// 0x0068 (FullSize[0x0188] - InheritedSize[0x0120])
class UAtlantaRitualsScreen : public UScreenBase
{
public:
	class UUMGAtlantaRitualsScreen*                    _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JD2L[0x60];                                    // 0x0128(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaRitualsScreen");
		return ptr;
	}



	void OnRefreshRitual();
	void OnExitRequested();
	void OnClaimRewards(int RitualId);
};

// Class DeadByDaylight.AtlantaRoleSelectionScreen
// 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
class UAtlantaRoleSelectionScreen : public UScreenBase
{
public:
	class UUMGRoleSelectionScreen*                     _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaRoleSelectionScreen");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaSkillCheckWidget
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UAtlantaSkillCheckWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                SkillCheckArea;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      HitArea;                                                   // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      BonusArea;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HitAreaContainer;                                          // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                BonusAreaContainer;                                        // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HitAreaStartMarkerContainer;                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HitAreaEndMarkerContainer;                                 // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                MarkerContainer;                                           // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PathCoveredAngle;                                          // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NBVQ[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaSkillCheckWidget");
		return ptr;
	}



	void SetActive(bool active);
	void OnIsActiveChanged(bool isActive);
	bool isActive();
};

// Class DeadByDaylight.TutorialLevel
// 0x0040 (FullSize[0x0278] - InheritedSize[0x0238])
class UTutorialLevel : public ULevelScriptActor
{
public:
	bool                                               _tutorialStarted;                                          // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_38UG[0x3F];                                    // 0x0239(0x003F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialLevel");
		return ptr;
	}



	void SetHandledTutorialStep(DeadByDaylight_ETutorialStep tutorialStep);
	void RemoveObjective(const struct FName& objectiveId);
	void OnTutorialStepUpdated(DeadByDaylight_ETutorialStep tutorialStep);
	void OnNotificationDismissed(const struct FName& NotificationId);
	void HandleTutorialStepReached();
	void HandleNotificationDismissed(const struct FName& NotificationId);
	void DisplayNotification(const struct FName& NotificationId, float time);
	void DisplayBlockingNotification(const struct FName& NotificationId);
	void CompleteObjective(const struct FName& objectiveId);
	void AddObjective(const struct FName& objectiveId);
};

// Class DeadByDaylight.AtlantaTutorialLevel
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UAtlantaTutorialLevel : public UTutorialLevel
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaTutorialLevel");
		return ptr;
	}



	bool IsActorInLineOfSight(class UDBDAIPlayerController* aiPlayerController, class UplayerController* playerController);
};

// Class DeadByDaylight.AtlantaTutorialObjectiveManager
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UAtlantaTutorialObjectiveManager : public UObject
{
public:
	TArray<class UAtlantaObjectiveWidget*>             _objectivesList;                                           // 0x0030(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _objectivesContainer;                                      // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G5WO[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaTutorialObjectiveManager");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaTutorialWidget
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UAtlantaTutorialWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_YNJ7[0x30];                                    // 0x0300(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaTutorialWidget");
		return ptr;
	}



	void TutorialEndReached(const struct FTutorialTallyData& data);
	void NextTutorial();
	void LeaveTutorial();
};

// Class DeadByDaylight.AtlantaUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlantaUtilities");
		return ptr;
	}



	bool STATIC_ShouldUseAtlantaUI();
	bool STATIC_ShouldUseAtlantaRituals();
	bool STATIC_ShouldUseAtlantaQualitySettings();
	bool STATIC_ShouldUseAtlantaOutlines();
	bool STATIC_ShouldUseAtlantaMatchmaking();
	bool STATIC_ShouldUseAtlantaLighting();
	bool STATIC_ShouldUseAtlantaKrakenContentVersion();
	bool STATIC_ShouldUseAtlantaFixedMaps();
	bool STATIC_ShouldUseAtlantaEntity();
	bool STATIC_ShouldUseAtlantaDreamworldFX();
	bool STATIC_ShouldUseAtlantaContent();
	bool STATIC_ShouldUseAtlantaCharacterProgression();
	bool STATIC_ShouldUseAtlantaCDNPatching();
	bool STATIC_ShouldUseAtlantaCDNBucketChangelist();
	bool STATIC_ShouldUseAtlantaCatalog();
	bool STATIC_ShouldUseAtlantaBloodweb();
	bool STATIC_ShouldSupportMultipleActiveActivatablePerks();
	void STATIC_SetImageSlateBrush(class Uimage* image, const struct FSlateBrush& brush);
	void STATIC_SetImageBrushFromPath(class Uimage* image, const struct FString& path);
	void STATIC_SetImageBrush(class Uimage* image, class UTexture2D* asset);
	void STATIC_SetButtonStyle(class Ubutton* button, class UTexture2D* texture);
	struct FString STATIC_SecondsToStringWithoutDecimals(int seconds);
	class UTexture2D* STATIC_LoadTextureByAsset(const struct FString& path);
	struct Fcolor STATIC_GetPaintColorByRarity(DBDSharedTypes_EItemRarity rarity);
	struct FText STATIC_GetItemRarityText(DBDSharedTypes_EItemRarity rarity);
	class UTexture2D* STATIC_GetIconImageByPath(const struct FString& iconPath);
	class UinteractionDefinition* STATIC_GetCurrentOrAvailableInteractionOfType(class UdbdPlayer* player, DeadByDaylight_EInputInteractionType InteractionInputType);
	class UinteractionDefinition* STATIC_GetCurrentInteractionOfType(class UdbdPlayer* player, DeadByDaylight_EInputInteractionType InteractionInputType);
	class UinteractionDefinition* STATIC_GetCurrentInteraction(class UdbdPlayer* player);
	float STATIC_GetControlsTunableByRole(DBDSharedTypes_EPlayerRole playerRole, const struct FName& TunableValueName);
	float STATIC_GetControlsTunable(const struct FName& TunableValueName);
	struct Fcolor STATIC_GetBackgroundColorByRarity(DBDSharedTypes_EItemRarity rarity);
	class UinteractionDefinition* STATIC_GetAvailableInteractionOfType(class UdbdPlayer* player, DeadByDaylight_EInputInteractionType InteractionInputType);
};

// Class DeadByDaylight.AtlCookedMaps
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UAtlCookedMaps : public UPrimaryDataAsset
{
public:
	TArray<struct FAtlCookedMapDescription>            Descriptions;                                              // 0x0038(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AtlCookedMaps");
		return ptr;
	}



};

// Class DeadByDaylight.AttackTypeEventComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UAttackTypeEventComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_3JNO[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AttackTypeEventComponent");
		return ptr;
	}



};

// Class DeadByDaylight.AudioFXComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UAudioFXComponent : public UactorComponent
{
public:
	class UprimitiveComponent*                         _audioAmbientDetector;                                     // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_69EF[0x58];                                    // 0x00C0(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AudioFXComponent");
		return ptr;
	}



	void SetAudioAmbientDetector(class UprimitiveComponent* audioAmbientDetector);
	void OnLocallyObservedChanged(bool locallyObserved);
	void OnDeafenCompleted();
	void Deafen(float duration);
};

// Class DeadByDaylight.AuthoritativeMovementComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UAuthoritativeMovementComponent : public UactorComponent
{
public:
	TArray<class UdbdPlayer*>                          _playersToPush;                                            // 0x00B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _stopIgnorePlayerOnEndOverlap;                             // 0x00C8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _ignorePlayers;                                            // 0x00D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SIVL[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           _pawnDetector;                                             // 0x00F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _authoritativeIgnoreOverlapPlayers;                        // 0x00F8(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _previousAuthoritativeIgnoreOverlapPlayers;                // 0x0108(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AuthoritativeMovementComponent");
		return ptr;
	}



	void SetPawnDetector(class UCapsuleComponent* PawnDetector);
	void OnRep_AuthoritativeIgnoreOverlapPlayers();
	void OnPawnDetectorOverlapExit(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void OnPawnDetectorOverlapEnter(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
};

// Class DeadByDaylight.AutomaticLeanComponent
// 0x02A8 (FullSize[0x0360] - InheritedSize[0x00B8])
class UAutomaticLeanComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnLeanStateChanged;                                        // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCanInitiateLeanChanged;                                  // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSocketOrBoneCache                          _cameraIdleLocation;                                       // 0x00D8(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraLeftLeanLocation;                                   // 0x0138(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraRightLeanLocation;                                  // 0x0198(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraCrouchLocation;                                     // 0x01F8(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraCrouchLeftLeanLocation;                             // 0x0258(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraCrouchRightLeanLocation;                            // 0x02B8(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	float                                              _middleSphereTraceLength;                                  // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sideSphereTraceLength;                                    // 0x031C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sphereTraceRadius;                                        // 0x0320(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _standingTraceHeightOffset;                                // 0x0324(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _crouchingTraceHeightOffset;                               // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sideTraceOffset;                                          // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxMovementDistance;                                      // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxCameraAngle;                                           // 0x0334(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _debugMode;                                                // 0x0338(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DBDSharedTypes_ELeanState                          _leanState;                                                // 0x0339(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M35I[0x26];                                    // 0x033A(0x0026) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AutomaticLeanComponent");
		return ptr;
	}



	void Server_SetLeanState(DBDSharedTypes_ELeanState leanState);
	void OnRep_LeanState();
	void OnLeanStateChanged__DelegateSignature(DBDSharedTypes_ELeanState leanState);
	void OnCanInitiateLeanChanged__DelegateSignature(bool canInitiate);
	void Local_Unlean();
	void Local_Lean();
	bool IsLeaning();
	DBDSharedTypes_ELeanState GetPotentialLeanState();
	DBDSharedTypes_ELeanState GetLeanState();
	float GetAvailableDistanceInFrontOfCamera();
	bool CanInitiateLean();
};

// Class DeadByDaylight.AutoQualityAdjuster
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class UAutoQualityAdjuster : public Uactor
{
public:
	float                                              TargetResolutionScale;                                     // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumMS;                                                 // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumMS;                                                 // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleIncreaseRate;                                         // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleDecreaseRate;                                         // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumAllowableScale;                                     // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PRHO[0x10];                                    // 0x0248(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AutoQualityAdjuster");
		return ptr;
	}



};

// Class DeadByDaylight.BannerDataProcessor
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UBannerDataProcessor : public UObject
{
public:
	unsigned char                                      UnknownData_8PFB[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BannerDataProcessor");
		return ptr;
	}



};

// Class DeadByDaylight.BaseCameraTargetingStrategy
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UBaseCameraTargetingStrategy : public UObject
{
public:
	unsigned char                                      UnknownData_V4KH[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxFreeAngle;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _maxInputRotation;                                         // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _interpolationSpeed;                                       // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _interpolationSpeedOutsideFreeMoveZone;                    // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uactor*                                      _target;                                                   // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BaseCameraTargetingStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.BaseHitValidationConfigurator
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UBaseHitValidationConfigurator : public UactorComponent
{
public:
	unsigned char                                      UnknownData_0S2Z[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BaseHitValidationConfigurator");
		return ptr;
	}



};

// Class DeadByDaylight.BaseIndicatorWidget
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UBaseIndicatorWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                _safeZonePanel;                                            // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanelSlot*                            _canvasPanelSlot;                                          // 0x0308(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RadiusMultiplier;                                          // 0x0310(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G7U2[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                IndicatorPanel;                                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                Indicator;                                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ArrowImage;                                                // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BaseIndicatorWidget");
		return ptr;
	}



};

// Class DeadByDaylight.KillerProjectile
// 0x0068 (FullSize[0x02F0] - InheritedSize[0x0288])
class UKillerProjectile : public UPhysicsBasedProjectile
{
public:
	unsigned char                                      UnknownData_Q414[0x48];                                    // 0x0288(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FgameplayTag                                _killerProjectileAttemptGameEventTag;                      // 0x02D0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JCUV[0x4];                                     // 0x02DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UHitValidatorConfigurator*                   _hitValidatorConfigurator;                                 // 0x02E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitValidatorComponent*                      _hitValidator;                                             // 0x02E8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerProjectile");
		return ptr;
	}



	class UprimitiveComponent* GetPlayerPrimitiveComponent();
	class UslasherPlayer* GetLaunchingKiller();
};

// Class DeadByDaylight.BaseLinkedVomitProjectile
// 0x0060 (FullSize[0x0350] - InheritedSize[0x02F0])
class UBaseLinkedVomitProjectile : public UKillerProjectile
{
public:
	bool                                               _useSplashDamage;                                          // 0x02F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _passThroughSurvivors;                                     // 0x02F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_05AU[0x6];                                     // 0x02F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPoolableProjectileComponent*                _poolableProjectile;                                       // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    _vomitTrail;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineMeshComponent*                        _splineMesh;                                               // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                            _splashDamageSphere;                                       // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _akAudioVomitProjectile;                                   // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UparticleSystem*                             _vomitSplashCamper;                                        // 0x0320(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UparticleSystem*                             _vomitSplash;                                              // 0x0328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _akAudioEventAudioEventVomitSplash;                        // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   _minDecalSize;                                             // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   _maxDecalSize;                                             // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSuperVomit;                                             // 0x0348(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W2OA[0x7];                                     // 0x0349(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BaseLinkedVomitProjectile");
		return ptr;
	}



	void OnAffectSurvivor(class UcamperPlayer* camperPlayer);
	void OnAffectInteractable(class Uinteractable* interactable, class USceneComponent* hitComponent);
	void NativeExplode(const struct FimpactInfo& impactInfo);
};

// Class DeadByDaylight.BaseSky
// 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
class UBaseSky : public Uactor
{
public:
	unsigned char                                      UnknownData_CQZO[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               AdjustCullDistance;                                        // 0x0238(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               EnableIBL;                                                 // 0x0239(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H9GO[0x6];                                     // 0x023A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BaseSky");
		return ptr;
	}



	void ToggleDreamworldLighting(bool toggleOn);
	void SetCullDistance(float newCullDistance);
	void OnFadeEnd(class Uactor* other);
	void OnFadeBegin(class Uactor* other);
	void OnAlphaChanged(float newAlpha, class Uactor* other);
	class UPostProcessComponent* GetPostprocessComponent();
};

// Class DeadByDaylight.BaseTrap
// 0x0008 (FullSize[0x0428] - InheritedSize[0x0420])
class UBaseTrap : public Ucollectable
{
public:
	bool                                               _isTrapSet;                                                // 0x0420(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IDO6[0x7];                                     // 0x0421(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BaseTrap");
		return ptr;
	}



	void SetIsTrapSet(bool Value);
	bool isTrapSet();
};

// Class DeadByDaylight.OutlineUpdateStrategy
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UOutlineUpdateStrategy : public UactorComponent
{
public:
	class UDBDOutlineComponent*                        _outlineComponent;                                         // 0x00B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.BearTrapOutlineUpdateStrategy
// 0x0038 (FullSize[0x00F8] - InheritedSize[0x00C0])
class UBearTrapOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                UnrevealedColor;                                           // 0x00C0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                RevealedColorToSurvivor;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveLinearColor*                           KillerOutlineFadeCurve;                                    // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0W7E[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UmapActorComponent*                          _owningBearTrapMapActorComponent;                          // 0x00F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BearTrapOutlineUpdateStrategy");
		return ptr;
	}



	void SetOwningBearTrapMapActorComponent(class UmapActorComponent* mapActorComponent);
	void SetOwningBearTrapIsBroken(bool isBroken);
};

// Class DeadByDaylight.BlindableComponent
// 0x0190 (FullSize[0x0248] - InheritedSize[0x00B8])
class UBlindableComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_8H8L[0x60];                                    // 0x00B8(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UchargeableComponent*                        _chargeableComponent;                                      // 0x0118(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class Uactor*, TScriptInterface<class UBlindingEffectorInterface>> _blindingEffectors;                                        // 0x0120(0x0050) (Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_69FA[0x3C];                                    // 0x0170(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isBlinded;                                                // 0x01AC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E0TA[0x33];                                    // 0x01AD(0x0033) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTagStateBool                               _isBeingBlinded;                                           // 0x01E0(0x0030) (Net, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E39R[0x38];                                    // 0x0210(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlindableComponent");
		return ptr;
	}



	void SetChargeable(class UchargeableComponent* Value);
	void OnRep_IsBlinded();
	void OnChargeableCompletionPercentChanged(class UchargeableComponent* chargeableComponent, float totalPercentComplete);
	bool IsBlinded();
	void Authority_RemoveBlindingEffector(const TScriptInterface<class UBlindingEffectorInterface>& Effector);
	void Authority_Blinded(DBDSharedTypes_EBlindType blindType, float blindnessDuration, class Uactor* effectorActor);
	void Authority_AddBlindingEffector(const TScriptInterface<class UBlindingEffectorInterface>& Effector);
};

// Class DeadByDaylight.BlindingEffectorInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBlindingEffectorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlindingEffectorInterface");
		return ptr;
	}



};

// Class DeadByDaylight.BlindingFXComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UBlindingFXComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_76OX[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _blindnessIntensityParameter;                              // 0x00C8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IY7W[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _blindnessMaterialCurve;                                   // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _blindnessCurve;                                           // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPostProcessComponent*                       _postProcess;                                              // 0x00E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    _postProcessMaterial;                                      // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D79M[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlindingFXComponent");
		return ptr;
	}



	void SetPostProcessMaterial(class UMaterialInstanceDynamic* Value);
	void SetPostProcess(class UPostProcessComponent* Value);
};

// Class DeadByDaylight.BlinkComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UBlinkComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBlinkStateChangedDelegate;                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               _isInBlinkingState;                                        // 0x00C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VR2Q[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlinkComponent");
		return ptr;
	}



	bool IsOwnerInBlinkingState();
};

// Class DeadByDaylight.BlinkerComponent
// 0x00C8 (FullSize[0x0180] - InheritedSize[0x00B8])
class UBlinkerComponent : public UactorComponent
{
public:
	float                                              _rayCastZOffet;                                            // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _rayCastLength;                                            // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _minimumIndicatorVelocity;                                 // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _IndicatorVelocityEasingFactor;                            // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _lineOfSightBlinkOffset;                                   // 0x00C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6BYE[0xC];                                     // 0x00D4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDTimerComponent*                          _blinkChainTimer;                                          // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VH32[0x98];                                    // 0x00E8(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlinkerComponent");
		return ptr;
	}



	struct Fvector UpdateTargetLocation(class UdbdPlayer* player, float blinkDistance, TArray<float> scanPercentLocations);
	bool ShouldInterpolateIndicatorPosition();
	void SetChainedBlinkCount(int blinkCount);
	void SetBlinkerState(DeadByDaylight_EBlinkerState blinkerState);
	struct Fvector LocalAddRandomToTargetLocation(class UdbdPlayer* player, const struct Fvector& TargetLocation, float distance);
	bool isReady();
	void IncrementChainedBlinkCount();
	struct Fvector GetInterpolatedIndicatorPosition(const struct Fvector& blinkTarget, const struct Fvector& indicatorPosition, float deltaTime);
	float GetFatigueDuration(class UdbdPlayer* player, bool attacked, int blinkCount);
	int GetChainedBlinkCount();
	DeadByDaylight_EBlinkerState GetBlinkerState();
	class UDBDTimerComponent* GetBlinkChainTimer();
	float GetAutomaticBlinkDelay(int chainBlinkCount);
};

// Class DeadByDaylight.BlockElement
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UBlockElement : public UObject
{
public:
	TWeakObjectPtr<class UObject>                      _source;                                                   // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _affectedPlayers[0x50];                                    // 0x0038(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_CGXG[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlockElement");
		return ptr;
	}



};

// Class DeadByDaylight.BlockableComponent
// 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
class UBlockableComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_131U[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBlockableReplicatedDatum                   _replicatedDatum;                                          // 0x00D0(0x0020) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      _blockElements[0x50];                                      // 0x00F0(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlockableComponent");
		return ptr;
	}



	void OnRep_ReplicatedDatum();
	void Authority_RemoveBlock(class UObject* source);
	void Authority_AddTimedBlock(class UObject* source, float duration);
};

// Class DeadByDaylight.BloodDecalEffectIntensity
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UBloodDecalEffectIntensity : public UDataAsset
{
public:
	struct Fcolor                                      IntensifyBloodColor;                                       // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fcolor                                      IntensifyBloodColor2;                                      // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fcolor                                      IntensifyBloodColorEmissive;                               // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntensifyBloodColorEmissiveMinimumIntensity;               // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntensifyBloodColorEmissiveMaximumIntensity;               // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_V3TA[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodDecalEffectIntensity");
		return ptr;
	}



};

// Class DeadByDaylight.BloodDecalEffect
// 0x0168 (FullSize[0x03A0] - InheritedSize[0x0238])
class UBloodDecalEffect : public UDecalActor
{
public:
	class UCurveFloat*                                 AnimationTimelineCurve;                                    // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 DestroyTimelineCurve;                                      // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTexture2D*>                          Textures;                                                  // 0x0248(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTexture2D*>                          Normals;                                                   // 0x0258(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodDecalEffectIntensity*                  BloodDecalEffectIntensity;                                 // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ColorInterpolationSpeed;                                   // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CZQM[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    DynamicDecalMaterial;                                      // 0x0278(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MOLO[0x120];                                   // 0x0280(0x0120) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodDecalEffect");
		return ptr;
	}



};

// Class DeadByDaylight.Bloodlust
// 0x00E8 (FullSize[0x0390] - InheritedSize[0x02A8])
class UBloodlust : public UstatusEffect
{
public:
	class UCurveFloat*                                 BloodlustCurve;                                            // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2EME[0x20];                                    // 0x02B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _bloodlustTime;                                            // 0x02D0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MCX5[0x2C];                                    // 0x02D4(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UslasherPlayer*                              _owningKiller;                                             // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QXE2[0x88];                                    // 0x0308(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Bloodlust");
		return ptr;
	}



	void Server_Debug_SetBloodlust(int Amount, bool enableDecay);
	void OnRep_BloodlustTime(float oldBloodlustTime);
	void OnChaseStartedEvent(class UdbdPlayer* chasedPlayer);
	void OnAllChaseEndedEvent();
	void Multicast_ResetBloodlust();
	float GetBloodlustTime();
	void DBD_SetBloodlust(int Amount, bool enableDecay);
};

// Class DeadByDaylight.BloodwebDistribution
// 0x02F8 (FullSize[0x0328] - InheritedSize[0x0030])
class UBloodwebDistribution : public UObject
{
public:
	unsigned char                                      UnknownData_CBQ6[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDDesignTunables*                          _designTunables;                                           // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0WR9[0x2D8];                                   // 0x0050(0x02D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodwebDistribution");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebEntity
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UBloodwebEntity : public UObject
{
public:
	unsigned char                                      UnknownData_HLKI[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class UDBDBloodwebDefinitionBase> _bloodWebDefinition;                                       // 0x0048(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UTX8[0x20];                                    // 0x0058(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodwebEntity");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebGenerator
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UBloodwebGenerator : public UObject
{
public:
	unsigned char                                      UnknownData_OPPH[0xC];                                     // 0x0030(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRandomStream                               _randomizationStream;                                      // 0x003C(0x0008) (ZeroConstructor, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PORY[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             _selectedNodes;                                            // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               _selectedContent;                                          // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N9SA[0x48];                                    // 0x0068(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TScriptInterface<class UDBDBloodwebDefinitionBase> _bloodWebDefinition;                                       // 0x00B0(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UDBDDesignTunables*                          _designTunables;                                           // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _alternativePathOccurenceFactor;                           // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y7MC[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBloodwebDistribution*                       _dataDistribution;                                         // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebSettings*                           _bloodwebSettings;                                         // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9IAG[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodwebGenerator");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebManager
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UBloodwebManager : public UObject
{
public:
	unsigned char                                      UnknownData_BL80[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _bloodwebBuilderClass;                                     // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDDesignTunables*                          _designTunables;                                           // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class UDBDBloodwebDefinitionBase> _bloodWebDefinition;                                       // 0x0080(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UBloodwebGenerator*                          _bloodwebBuilder;                                          // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebEntity*                             _entity;                                                   // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FOAV[0x38];                                    // 0x00A0(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodwebManager");
		return ptr;
	}



	void Init(class UDBDGameInstance* gameInstance, class UDBDDesignTunables* tunables);
};

// Class DeadByDaylight.BloodwebSettings
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBloodwebSettings : public UDataAsset
{
public:
	TArray<struct FName>                               _duplicableItems;                                          // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodwebSettings");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebTester
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class UBloodwebTester : public Uactor
{
public:
	class UDBDDesignTunables*                          _designTunables;                                           // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDBloodWebDefinition*                      _bloodWebDefinition;                                       // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebGenerator*                          _bloodwebBuilder;                                          // 0x0240(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodwebTester");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebTunables
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UBloodwebTunables : public UObject
{
public:
	unsigned char                                      UnknownData_74EW[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodwebTunables");
		return ptr;
	}



};

// Class DeadByDaylight.BlueprintDebugUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBlueprintDebugUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlueprintDebugUtilities");
		return ptr;
	}



	void STATIC_EnsureOnConditionWithMessage(bool condition, const struct FString& ensureMessage);
	void STATIC_EnsureFalseWithMessage(const struct FString& ensureMessage);
};

// Class DeadByDaylight.BlueprintPlatformUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBlueprintPlatformUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BlueprintPlatformUtilities");
		return ptr;
	}



	int STATIC_ToInteger(const struct FDBDPerPlatformInt& perPlatformInt, class UObject* objectInWorld);
	float STATIC_ToFloat(const struct FDBDPerPlatformFloat& perPlatformFloat, class UObject* objectInWorld);
};

// Class DeadByDaylight.BonusPointEventsManager
// 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
class UBonusPointEventsManager : public UObject
{
public:
	unsigned char                                      UnknownData_IR1V[0xB8];                                    // 0x0030(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BonusPointEventsManager");
		return ptr;
	}



};

// Class DeadByDaylight.Tile
// 0x0110 (FullSize[0x0340] - InheritedSize[0x0230])
class UTile : public Uactor
{
public:
	int                                                MinimumSpacing;                                            // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaximumSpacing;                                            // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DiagonalSpacing;                                           // 0x0238(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TypeSpacing;                                               // 0x0239(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2AJ5[0x2];                                     // 0x023A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaximumCount;                                              // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   Dimension;                                                 // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<DeadByDaylight_EscapeStrategyType>          AvailableEscapeTypes;                                      // 0x0248(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ETileType                           type;                                                      // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EDensity                            Density;                                                   // 0x0259(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EPathType                           path;                                                      // 0x025A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MFHU[0x1];                                     // 0x025B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Number;                                                    // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PlaceHolder;                                               // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B9H2[0x3];                                     // 0x0261(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SpawnPriorityTier;                                         // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Weight;                                                    // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   Coord;                                                     // 0x026C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EQuadrantSpawnType                  QuadrantSpawnType;                                         // 0x0274(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EBasementType                       BasementType;                                              // 0x0275(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KMAL[0x2];                                     // 0x0276(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UtileSpawnPoint*>                     SpawnPointsCache;                                          // 0x0278(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObjectRandomizer*>                   ObjectRandomizersCache;                                    // 0x0288(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorSpawner*>                       ActorSpawnersCache;                                        // 0x0298(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorVariationSpawner*>              ActorVariationSpawnersCache;                               // 0x02A8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_30IO[0x7C];                                    // 0x02B8(0x007C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRandomStream                               SharedTileRandomizer;                                      // 0x0334(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               _initialized;                                              // 0x033C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_668U[0x3];                                     // 0x033D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Tile");
		return ptr;
	}



	void OnSetSpawnObject(class UtileSpawnPoint* tileSpawnPoint, class Uactor* SpawnedObject);
	void OnRep_Initialized(bool oldValue);
	void OnAllTileSpawned();
	void InitOnSpawned();
};

// Class DeadByDaylight.BorderTile
// 0x0020 (FullSize[0x0360] - InheritedSize[0x0340])
class UBorderTile : public UTile
{
public:
	TArray<struct FBorderElements>                     Borders;                                                   // 0x0340(0x0010) (Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMapData*                                    _map;                                                      // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QRA1[0x8];                                     // 0x0358(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BorderTile");
		return ptr;
	}



};

// Class DeadByDaylight.BreakableBase
// 0x0028 (FullSize[0x0300] - InheritedSize[0x02D8])
class UBreakableBase : public Uinteractable
{
public:
	class UBoxComponent*                               _breakableCollision;                                       // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EBreakableState                     _state;                                                    // 0x02E0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MV4U[0x7];                                     // 0x02E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkComponent*                                _akAudioBreakable;                                         // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _akAudioBreakEvent;                                        // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _rootComponent;                                            // 0x02F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BreakableBase");
		return ptr;
	}



	void PlayAudioBreakable();
	bool IsUnbroken();
	void ExplodeVfxSfx(const struct Fvector& impulseDir);
	void explode(class UdbdPlayer* player);
};

// Class DeadByDaylight.SourceBasedOutlineUpdateStrategy
// 0x0070 (FullSize[0x0130] - InheritedSize[0x00C0])
class USourceBasedOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _defaultColorForSurvivor;                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _defaultColorForSlasher;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3UF6[0x50];                                    // 0x00E0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SourceBasedOutlineUpdateStrategy");
		return ptr;
	}



	void ResetReveal();
	void RemoveRevealSource(class UObject* source);
	void ChangeDefaultColorForSurvivor(const struct FLinearColor& newColor);
	void ChangeDefaultColorForSlasher(const struct FLinearColor& newColor);
	void AddTimedReveal(class UObject* source, const struct FLinearColor& highlightColor, int priority, TArray<class UdbdPlayer*> affectedCharacters, float duration);
	void AddTimedAndRangedReveal(class UObject* source, class Uactor* sourceActor, const struct FLinearColor& highlightColor, int priority, TArray<class UdbdPlayer*> affectedCharacters, float duration, float range);
	void AddReveal(class UObject* source, const struct FLinearColor& highlightColor, int priority, TArray<class UdbdPlayer*> affectedCharacters);
};

// Class DeadByDaylight.BreakableWallOutlineUpdateStrategy
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UBreakableWallOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BreakableWallOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.CameraAttachmentComponent
// 0x00B0 (FullSize[0x0168] - InheritedSize[0x00B8])
class UCameraAttachmentComponent : public UactorComponent
{
public:
	class USceneComponent*                             _anchor;                                                   // 0x00B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YZYP[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCameraAttachment                           _defaultCameraAttachment;                                  // 0x00D0(0x0018) (Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FCameraAttachment                           _currentCameraAttachment;                                  // 0x00E8(0x0018) (Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YI1O[0x68];                                    // 0x0100(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CameraAttachmentComponent");
		return ptr;
	}



	void reset();
	bool IsAttached();
	void Detach();
};

// Class DeadByDaylight.CameraHandlerComponent
// 0x00D0 (FullSize[0x0188] - InheritedSize[0x00B8])
class UCameraHandlerComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSocketChanged;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G7OT[0x8];                                     // 0x00C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EDBDCameraSocketID, class Uactor*> _cameraMap;                                                // 0x00D0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	DeadByDaylight_EDBDCameraSocketID                  _delayedSocketID;                                          // 0x0120(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EDBDCameraSocketID                  _currentSocketID;                                          // 0x0121(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1EDZ[0x52];                                    // 0x0122(0x0052) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _cameraAttachmentSocket;                                   // 0x0174(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _cameraAttachmentComponent;                                // 0x0180(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CameraHandlerComponent");
		return ptr;
	}



	void SetSocketID(DeadByDaylight_EDBDCameraSocketID mode);
	void SetAttachmentComponent(class USceneComponent* attachmentComponent);
	void PlayVFXOnCurrentCamera(class UParticleSystemComponent* component);
	DeadByDaylight_EDBDCameraSocketID GetSocketID();
	class Uactor* GetCurrentCamera();
	void AddCameraToSocket(DeadByDaylight_EDBDCameraSocketID mode, class Uactor* camera);
};

// Class DeadByDaylight.CamperAnimInstance
// 0x01B0 (FullSize[0x0420] - InheritedSize[0x0270])
class UCamperAnimInstance : public UanimInstance
{
public:
	class UcamperPlayer*                               camperPlayer;                                              // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MyDeltaTime;                                               // 0x0278(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHooked;                                                  // 0x027C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSacrificeStruggling;                                     // 0x027D(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0TV2[0x2];                                     // 0x027E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                MontageMadnessTierUp;                                      // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimCompositeBase*>                  ArrayCarryAttackMontage;                                   // 0x0288(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isFrightScreaming;                                        // 0x0298(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               isBeingCarried;                                            // 0x0299(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingPutOnHook;                                          // 0x029A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsCrouched;                                                // 0x029B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_ECamperGuidedAction                 GuidedAction;                                              // 0x029C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsTrapped;                                                 // 0x029D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsCrawling;                                                // 0x029E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               isDead;                                                    // 0x029F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeed;                                                  // 0x02A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInsideCloset;                                            // 0x02A4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MYWK[0x3];                                     // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsPlayingMadnessTierUpWeight;                              // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsTotallyInsane;                                           // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingKilled;                                             // 0x02AD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsCarryAttackSucess;                                       // 0x02AE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldLookSleepy;                                          // 0x02AF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUsingAimItem;                                            // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingAimItem;                                          // 0x02B1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowLookAt;                                               // 0x02B2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YZFI[0x1];                                     // 0x02B3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DropStaggerTimeLeft;                                       // 0x02B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftArmIKAlpha;                                            // 0x02B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightArmIKAlpha;                                           // 0x02BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftForeArmIKAlpha;                                        // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightForeArmIKAlpha;                                       // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0V49[0x8];                                     // 0x02C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  LeftHandIKTransform;                                       // 0x02D0(0x0030) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                                  RightHandIKTransform;                                      // 0x0300(0x0030) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               Strafe;                                                    // 0x0330(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               isInteracting;                                             // 0x0331(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Injured;                                                   // 0x0332(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EInteractionAnimation               InteractionType;                                           // 0x0333(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EInteractionAnimation               PreviousInteractionType;                                   // 0x0334(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSlasherInFPV;                                            // 0x0335(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CJYN[0x2];                                     // 0x0336(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CarriedAlpha;                                              // 0x0338(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingHandleItem;                                       // 0x033C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingSmallItem;                                        // 0x033D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingFirecracker;                                      // 0x033E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0APS[0x1];                                     // 0x033F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Turning;                                                   // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LD5C[0xC];                                     // 0x0344(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               InAir;                                                     // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8494[0x3];                                     // 0x0351(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              speed;                                                     // 0x0354(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              direction;                                                 // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Pitch;                                                     // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Yaw;                                                       // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     RightFootEffectorLocation;                                 // 0x0364(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     LeftFootEffectorLocation;                                  // 0x0370(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Idle;                                                      // 0x037C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4FSZ[0x3];                                     // 0x037D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MyTime;                                                    // 0x0380(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SkillCheckFailed;                                          // 0x0384(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsGassed;                                                  // 0x0385(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasAnyMontagePlaying;                                      // 0x0386(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NILE[0x1];                                     // 0x0387(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentlyPlayerMontageId;                                  // 0x0388(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheSpirit;                                 // 0x0394(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheNightmare;                              // 0x0395(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByThePig;                                    // 0x0396(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheHag;                                    // 0x0397(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheLegion;                                 // 0x0398(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheGhostFace;                              // 0x0399(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUsingDeadHard;                                           // 0x039A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsPlayingWakeUpOther;                                      // 0x039B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsPlayingFreddyMori;                                       // 0x039C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSpooked;                                                 // 0x039D(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               isHealingKOCamper;                                         // 0x039E(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsChainLinked;                                             // 0x039F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingReeled;                                             // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               TriggerHarpoonHitAnim;                                     // 0x03A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               WasRecentlyHitByVomit;                                     // 0x03A2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OXGN[0x1];                                     // 0x03A3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HarpoonHitTurnAnimNormalizedStartTime;                     // 0x03A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HarpoonHitAnimTurnRight;                                   // 0x03A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ChainBreakTrigger;                                         // 0x03A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasLinkInput;                                              // 0x03AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BIGQ[0x1];                                     // 0x03AB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LinkInputX;                                                // 0x03AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LinkInputY;                                                // 0x03B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LinkedMaxSpeed;                                            // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USurvivorPlagueEffect*                       _cachedSurvivorPlagueEffect;                               // 0x03B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7RI1[0x60];                                    // 0x03C0(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperAnimInstance");
		return ptr;
	}



	void SetIsSacrificeStruggling(bool Value);
	void SetIsGassed(bool Value);
	void SetAudioRummageAkEvent(const struct FName& distance);
	void OnInfectiousFrightScream();
	bool IsPlayingMontageByName(const struct FName& montageID);
	void AddAudioRepairRateRadius(int distance);
};

// Class DeadByDaylight.BloodTrailSettings
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UBloodTrailSettings : public UDataAsset
{
public:
	float                                              _initialDelay;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                _numBloodDropsPerBloodPool;                                // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _bloodDropsInterval;                                       // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _randomlyRotateBloodDrops;                                 // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7T8C[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _bloodDropsRandomScatter;                                  // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ETraceTypeQuery>                _bloodTraceChannel;                                        // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3CJY[0x3];                                     // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _bloodDropClass;                                           // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BloodTrailSettings");
		return ptr;
	}



};

// Class DeadByDaylight.CamperBloodTrailComponent
// 0x00A8 (FullSize[0x0160] - InheritedSize[0x00B8])
class UCamperBloodTrailComponent : public UactorComponent
{
public:
	class UPerkManager*                                _camperPerkManager;                                        // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodTrailSettings*                         _bloodTrailSettings;                                       // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MUAZ[0x98];                                    // 0x00C8(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperBloodTrailComponent");
		return ptr;
	}



	void OnDamageStateChanged(DeadByDaylight_ECamperDamageState oldDamageState, DeadByDaylight_ECamperDamageState currentDamageState);
	void ConditionalStartBleeding();
};

// Class DeadByDaylight.CharacterDreamworldComponent
// 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
class UCharacterDreamworldComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    DreamStateChanged;                                         // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      _mobileDreamworldPostProcessClass;                         // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _isInDreamworld;                                           // 0x00D0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YS7M[0x7];                                     // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uactor*                                      _mobileDreamworldPostProcess;                              // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULightingHelper*                             _dreamworldLightingHelper;                                 // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_60DR[0x28];                                    // 0x00E8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterDreamworldComponent");
		return ptr;
	}



	bool ShouldShowVignette();
	void OnRep_IsInDreamworld(bool previous);
	bool isInDreamworld();
	class UdbdPlayer* STATIC_GetLocallyObservedOrLocalCharacter(class UObject* worldContextObject);
	void FireWakeUpScoreEvent(class UdbdPlayer* instigator);
	void Authority_SetIsInDreamworld(bool newValue, bool isScripted);
};

// Class DeadByDaylight.CamperDreamworldComponent
// 0x00E8 (FullSize[0x01F8] - InheritedSize[0x0110])
class UCamperDreamworldComponent : public UCharacterDreamworldComponent
{
public:
	struct FScriptMulticastDelegate                    OnCamperTriggeredDreamTrap;                                // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSurvivorSleepiness                         _survivorSleepiness;                                       // 0x0120(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _sleepGainPerSecond;                                       // 0x0128(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9S30[0x8];                                     // 0x012C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _wakeUpByOtherCount;                                       // 0x0134(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _showKiller;                                               // 0x0138(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2S5Z[0x7];                                     // 0x0139(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFastTimer                                  _killerGlimpseDurationTimer;                               // 0x0140(0x0030) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_THJO[0x10];                                    // 0x0170(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFastTimer                                  _killerGlimpseCooldownTimer;                               // 0x0180(0x0030) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N7CZ[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _glimpseMinDistance;                                       // 0x01C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _glimpseMaxDistance;                                       // 0x01C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _killerGlimpseCooldown;                                    // 0x01C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _killerGlimpseDuration;                                    // 0x01CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _wakeUpBySkillCheckCount;                                  // 0x01D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _fellAsleepCount;                                          // 0x01D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _forcedAsleep;                                             // 0x01D8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4LJX[0x7];                                     // 0x01D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWakerObject*                                _linkedWaker;                                              // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useScriptedKillerVisibility;                              // 0x01E8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F4I6[0x7];                                     // 0x01E9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _showKillerInstantly;                                      // 0x01F0(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1T6C[0x7];                                     // 0x01F1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperDreamworldComponent");
		return ptr;
	}



	bool ShouldLookSleepyToLocalPlayer();
	void SetScriptedKillerVisibility(bool useScriptedKillerVisibility);
	void OnRep_ShowKiller();
	void Local_SetShowKiller(bool showKiller, bool instantly);
	void InitializeTunableValues(class UslasherPlayer* Killer);
	void HandleShowKillerChanged(bool showKiller, bool instantly);
	int GetWakeUpByOtherCount();
	bool CanWakeUpBySkillCheck();
	bool CanWakeUp();
	void BroadcastCamperTriggeredDreamTrap(class Uactor* dreamObject);
	void Authority_WakeUpByWakerObject();
	void Authority_WakeUpByOther(class UdbdPlayer* instigator);
	void Authority_WakeUpByHook();
	void Authority_SpawnDreamworldStatusEffect();
	void Authority_PutAsleep();
	void Authority_OnAttacked();
	void Authority_HandleSkillCheckFailure(bool wakeUpEveryoneInteracting, class UdbdPlayer* instigator);
	int Authority_GetWakeUpBySkillCheckCount();
	int Authority_GetFellAsleepCount();
};

// Class DeadByDaylight.CamperEndGameComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UCamperEndGameComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_K78J[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _endGameEntityClass;                                       // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V284[0x4];                                     // 0x0108(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _delayBeforeSacrifice;                                     // 0x010C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _readyToBeSacrificed;                                      // 0x0110(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EDEY[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperEndGameComponent");
		return ptr;
	}



	void OnEndGameSacrificeEnd();
	void OnDelayBeforeSacrificeEnd();
	bool GetSacrificedByEndGame();
};

// Class DeadByDaylight.CamperExposerInstance
// 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
class UCamperExposerInstance : public Uactor
{
public:
	bool                                               IsInterior;                                                // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P81C[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     _audioAgravationLevelRtpc;                                 // 0x0238(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_96RY[0x18];                                    // 0x0248(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperExposerInstance");
		return ptr;
	}



	void StartSpawnSequence(bool withRandomDelay);
	void StartExitSequence(bool withRandomDelay);
	void SetIsInteriorBP(bool interior);
	void ExitSequenceComplete();
};

// Class DeadByDaylight.CamperHealthComponent
// 0x0170 (FullSize[0x0228] - InheritedSize[0x00B8])
class UCamperHealthComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnHealedDelegate;                                          // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutStarted;                                  // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutEnded;                                    // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutKO;                                       // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TGVL[0x18];                                    // 0x00F8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDamageStateChanged;                                      // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamageStateChangedCosmetic;                              // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDBDTunableRowHandle                        _bleedoutBaseDuration;                                     // 0x0130(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTagStateBool                               _inInjuredBleedOut;                                        // 0x0158(0x0030) (Net, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTimer                                   _bleedOutTimer;                                            // 0x0188(0x0028) (Net, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TJS7[0x4];                                     // 0x01B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _currentHealthStateCount;                                  // 0x01B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TN3B[0x4];                                     // 0x01B8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numHealthyHeals;                                          // 0x01BC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTimer                                   _dyingTimer;                                               // 0x01C0(0x0028) (Net, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2C0N[0x8];                                     // 0x01E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UchargeableComponent*                        _healFromDyingChargeable;                                  // 0x01F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _healFromInjuredChargeable;                                // 0x01F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _mendChargeable;                                           // 0x0200(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _injuredBleedoutInstigator;                                // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SK3J[0x18];                                    // 0x0210(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperHealthComponent");
		return ptr;
	}



	void OnRep_InInjuredBleedOut();
	void OnMendChargeCompletionStateChanged(bool Complete, TArray<class Uactor*> instigators);
	void OnImmobilizedStateChanged(DeadByDaylight_ECamperImmobilizeState oldImmobilizeState, DeadByDaylight_ECamperImmobilizeState newImmobilizeState);
	void OnHealthBarCharged(bool Complete, TArray<class Uactor*> instigators);
	void OnDamageStateChangedCosmetic__DelegateSignature();
	void Multicast_SetHealthStateFromDamageState(DeadByDaylight_ECamperDamageState DamageState, bool fireScoreEvent);
	void Multicast_SetDead(bool isDead, bool isSacrificed, bool isLeaving);
	void Multicast_SetDamageState(DeadByDaylight_ECamperDamageState DamageState, bool fireScoreEvent, bool sacrificed);
	void Multicast_SetCurrentHealthStateCount(int newHealth, bool fireScoreEvent);
	void Multicast_OnInjuredBleedoutKO(class UdbdPlayer* injuredBleedoutInstigator);
	void Multicast_OnHealed(const struct FCamperHealResult& healResult);
	bool IsKO();
	bool IsInjuredBleedoutTimerExpired();
	bool IsInjured();
	bool IsInInjuredBleedout();
	bool IsHealthy();
	bool IsDyingTimerExpired();
	bool isDead();
	void IncreaseHPSlotSize(float Percent);
	float GetPercentInjuredBleedoutTimer();
	float GetPercentDyingTimer();
	DeadByDaylight_ECamperDamageState GetDamageState();
	float GetCurrentTotalHealthBarPercent();
	class UchargeableComponent* GetCurrentHPSlot();
	bool CanHealSelf();
	bool CanBeHealedFromInjured();
	bool CanBeHealed();
	bool CanBecomeHealthy();
	void Authority_TryGrantScoresOnChargeApplied(float IndividualChargeAmount, float TotalChargeAmount, class Uactor* ChargeInstigator, bool WasCoop, float deltaTime);
	void Authority_SetDamageState(DeadByDaylight_ECamperDamageState DamageState, bool fireScoreEvent, bool sacrificed);
	void Authority_EndInjuredBleedout();
	void Authority_ApplyDoubleDamage(class Uactor* DamageSource);
	void Authority_ApplyDamage(class Uactor* DamageSource);
	void ApplyHeal(int healAmount, TArray<class UdbdPlayer*> healers);
};

// Class DeadByDaylight.PlayerInteractable
// 0x0000 (FullSize[0x02D8] - InheritedSize[0x02D8])
class UPlayerInteractable : public Uinteractable
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerInteractable");
		return ptr;
	}



	void InitInteractable(class UdbdPlayer* player);
};

// Class DeadByDaylight.CamperInteractable
// 0x00B8 (FullSize[0x0390] - InheritedSize[0x02D8])
class UCamperInteractable : public UPlayerInteractable
{
public:
	unsigned char                                      UnknownData_E0K6[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class Uinteractor*>                         HealingInteractors;                                        // 0x02E0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UchargeableComponent*                        _killCharge;                                               // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _snapOutOfItCharge;                                        // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _wakeUpCharge;                                             // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActivatorComponent*                         _activator;                                                // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GDGP[0x68];                                    // 0x0310(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uinteractor*                                 _killInteractor;                                           // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _killInteractionZone;                                      // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                            _killHealthyInteractionZone;                               // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperInteractable");
		return ptr;
	}



	void SetKillInteraction(class UinteractionDefinition* killInteraction);
	void ServerMoveOut();
	class Uinteractor* GetSlasherInteractor();
	class UcamperPlayer* GetOwningSurvivor();
};

// Class DeadByDaylight.DBDCharacterMovementComponent
// 0x0290 (FullSize[0x08C0] - InheritedSize[0x0630])
class UDBDCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	float                                              ProjectedWallSlidingFactor;                                // 0x0630(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomInputFrontMultiplier;                                // 0x0634(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomInputSideMultiplier;                                 // 0x0638(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomInputBackMultiplier;                                 // 0x063C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_37T1[0x88];                                    // 0x0640(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _forceUseDropStaggerFix;                                   // 0x06C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L7TD[0x1B7];                                   // 0x06C9(0x01B7) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBaseCharacterVelocityAdditiveStrategy*      _velocityAdditiveStrategy;                                 // 0x0880(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBaseInputAccelerationConstraintStrategy*    _inputAccelerationConstraintStrategy;                      // 0x0888(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uactor*                                      _lookAtTarget;                                             // 0x0890(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KSUF[0x28];                                    // 0x0898(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDCharacterMovementComponent");
		return ptr;
	}



	void SetRandomInputAmplitude(float Value);
	void Server_StopMontage(float timestamp, const struct FmontageStopDefinition& montageStopDefinition);
	void Server_StartSnapping(float timestamp, const struct FSnappingData& data);
	void Server_SetStopSnapping(float timestamp, bool snapToFinalDestination);
	void Server_SetMaxSpeedMultiplierScalar(float timestamp, float Value);
	void Server_SetMaxAccelerationMultiplierScalar(float timestamp, float Value);
	void Server_SetGroundFriction(float timestamp, float Value);
	void Server_SetAdditiveMaxSpeedScalar(float timestamp, float Value);
	void Server_ReplicateControlRotation(unsigned char clientRoll, uint32_t view);
	void Server_RemoveMaxSpeedMovementCurve(float timestamp, uint32_t curveNetId, DeadByDaylight_EMovementCurveType movementCurveType);
	void Server_PlayMontage(float timestamp, const struct FmontagePlaybackDefinition& montagePlaybackDefinition);
	void Server_Launch(float timestamp, const struct Fvector& launchVelocity);
	void Server_AddMaxSpeedMovementCurve(float timestamp, uint32_t curveNetId, float duration, DeadByDaylight_EMovementCurveType movementCurveType);
	void OnPreMontageStop(const struct FmontageStopDefinition& montageDefinition, class UAnimMontage* montage);
	void OnMontageStarted(const struct FmontagePlaybackDefinition& montageDefinition, class UAnimMontage* montage);
	void Local_AddMaxSpeedMultiplierCurve(class UCurveFloat* curve, float duration, bool autoRemove);
	bool IsSnappingRotation();
	bool IsSnappingPosition();
	bool IsSnapping();
	bool IsApplyingRandomInput();
	struct Fvector GetCurrentSnapPosition();
	void Client_TeleportTo(const struct FVector_NetQuantize100& location, const struct FYawAndPitchRotator_NetQuantize32& rotation);
	void Client_Stop();
	void Client_PreventMovement(bool Value);
};

// Class DeadByDaylight.CamperMovementComponent
// 0x0030 (FullSize[0x08F0] - InheritedSize[0x08C0])
class UCamperMovementComponent : public UDBDCharacterMovementComponent
{
public:
	float                                              MaxCrawlSpeed;                                             // 0x08C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRunSpeed;                                               // 0x08C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDashAcceleration;                                       // 0x08C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    _defaultRotationRate;                                      // 0x08CC(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _rotationRateWhileCrawling;                                // 0x08D8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZA4E[0xC];                                     // 0x08E4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperMovementComponent");
		return ptr;
	}



	void OnCamperHealthStateChanged(DeadByDaylight_ECamperDamageState oldDamageState, DeadByDaylight_ECamperDamageState currentDamageState);
	struct FRotator GetRotationRateWhileCrawling();
	struct FRotator GetDefaultRotationRate();
};

// Class DeadByDaylight.DBDBasePlayer
// 0x0070 (FullSize[0x0540] - InheritedSize[0x04D0])
class UDBDBasePlayer : public Ucharacter
{
public:
	struct FScriptMulticastDelegate                    OnCustomizationChanged;                                    // 0x04D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       _semanticGameplayTags;                                     // 0x04E0(0x0020) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UBaseGroundDetectorComponent*                _leftFootGroundDetector;                                   // 0x0500(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBaseGroundDetectorComponent*                _rightFootGroundDetector;                                  // 0x0508(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JE6E[0x8];                                     // 0x0510(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _characterIndex;                                           // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OY3A[0x24];                                    // 0x051C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDBasePlayer");
		return ptr;
	}



	bool TeleportWithClothHandling(const struct Fvector& location, const struct FRotator& rotation, bool checkCollisions);
	void Server_SwapCosmetics(const struct FName& cosmeticId);
	void Multicast_SwapCosmetics(const struct FName& cosmeticId);
	bool GetShowBlindDebugInfo();
	struct FGameplayTagContainer GetSemanticTag();
	TEnumAsByte<Engine_EPhysicalSurface> GetRightFootSurfaceType();
	struct FString GetRightFootAudioSurfaceName();
	TEnumAsByte<Engine_EPhysicalSurface> GetLeftFootSurfaceType();
	struct FString GetLeftFootAudioSurfaceName();
	class UCustomizedAudioComponent* GetCustomizedAudio();
	struct FName GetCharacterName();
	int GetCharacterIndex();
	class UAkComponent* GetAudioComponent();
	void DBD_SwapCosmetics(const struct FName& cosmeticId);
};

// Class DeadByDaylight.dbdPlayer
// 0x0AB8 (FullSize[0x0FF8] - InheritedSize[0x0540])
class UdbdPlayer : public UDBDBasePlayer
{
public:
	unsigned char                                      UnknownData_SCS9[0x30];                                    // 0x0540(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               AllowInterrupting;                                         // 0x0570(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E35E[0x3];                                     // 0x0571(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinFallHeight;                                             // 0x0574(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInterruptable;                                           // 0x0578(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigationInput;                                      // 0x0579(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigationBackwardInput;                              // 0x057A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowTurningInput;                                         // 0x057B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowPitchInput;                                           // 0x057C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowStrafeInput;                                          // 0x057D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInInteractionUpdate;                                     // 0x057E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInteractionChargeCompleted;                              // 0x057F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchLimitLower;                                           // 0x0580(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchLimitUpper;                                           // 0x0584(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fvector                                     StrafingOffset;                                            // 0x0588(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PelvisHeight;                                              // 0x0594(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PelvisHeightForPounceOnStandingCamper;                     // 0x0598(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PelvisHeightForPounceOnCrouchingCamper;                    // 0x059C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ARQC[0x40];                                    // 0x05A0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    Authority_OnAttackedDelegate;                              // 0x05E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamageTargetDelegate;                                    // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSensed;                                                  // 0x0600(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAnimNotify_Pickup;                                       // 0x0610(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAnimNotify_Release;                                      // 0x0620(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Authority_OnSecondaryActionInput;                          // 0x0630(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFirstPersonModeChanged;                                  // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDreamworldComponentSet;                                  // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USpringArmComponent*                         CameraBoom;                                                // 0x0660(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0KK6[0x30];                                    // 0x0668(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               ForceSkillChecks;                                          // 0x0698(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MW8M[0x7];                                     // 0x0699(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  IKLeftHandTransform;                                       // 0x06A0(0x0030) (BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  IKRightHandTransform;                                      // 0x06D0(0x0030) (BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              CameraResetSpeed;                                          // 0x0700(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QD17[0x14];                                    // 0x0704(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 BlinkFOVCurve;                                             // 0x0718(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentBlinkDistance;                                      // 0x0720(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentBlinkChargePercent;                                 // 0x0724(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AverageSpeedBufferTime;                                    // 0x0728(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlmostCurrentSpeedBufferTime;                              // 0x072C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadYawCurve;                                           // 0x0730(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadPitchCurve;                                         // 0x0738(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadSettingToYawRateCurve;                              // 0x0740(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadSettingToPitchRateCurve;                            // 0x0748(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 JoyconSettingToYawRateCurve;                               // 0x0750(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 JoyconSettingToPitchRateCurve;                             // 0x0758(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsCrouchedChanged;                                       // 0x0760(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRunningAndMovingChanged;                                 // 0x0770(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_89V7[0x8];                                     // 0x0780(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLocallyObservedChangedForPlayer;                         // 0x0788(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCameraComponent*                            camera;                                                    // 0x0798(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialHelper*                             MaterialHelper;                                            // 0x07A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IU3X[0x30];                                    // 0x07A8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      interactable;                                              // 0x07D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterInventoryComponent*                _characterInventoryComponent;                              // 0x07E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CarryJointName;                                            // 0x07E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _pitchOffsetForInteractionPriority;                        // 0x07F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxOcclusionQueryComponent*                 _renderedPixelCounter;                                     // 0x07F8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               _standingOcclusionBox;                                     // 0x0800(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               _crouchingOcclusionBox;                                    // 0x0808(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActivatorComponent*                         _activator;                                                // 0x0810(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               isInteracting;                                             // 0x0818(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2WZD[0x3];                                     // 0x0819(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _aiCanBeSeenTestCrouchScale;                               // 0x081C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _aiCanBeSeenTestRightOffset;                               // 0x0820(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _aiCanBeSeenTestHighOffset;                                // 0x0824(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _aiCanBeSeenTestLowOffset;                                 // 0x0828(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClearPathTestRadiusMultiplier;                             // 0x082C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClearPathTestHeightMultiplier;                             // 0x0830(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocationClearTestRadiusMultiplier;                         // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocationClearTestHeightMultiplier;                         // 0x0838(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_34EI[0x14];                                    // 0x083C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ClearPathTestStepHeight;                                   // 0x0850(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseTurnSpeedMultiplier;                                  // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseLookUpSpeedMultiplier;                                // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2WXR[0x4];                                     // 0x085C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   DeathSound;                                                // 0x0860(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_ECamperState                        CurrentCamperState;                                        // 0x0868(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5TSQ[0x3];                                     // 0x0869(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CollectableAttachPoint;                                    // 0x086C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct Foffering>                           _offerings;                                                // 0x0878(0x0010) (Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStateMachine*                               _stateMachine;                                             // 0x0888(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerInteractionHandler*                   _interactionHandler;                                       // 0x0890(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x0898(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkManager*                                _perkManager;                                              // 0x08A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDPlayerData*                              _playerData;                                               // 0x08A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAxisFlickMasher*                            _wiggleAxisFlickMasher;                                    // 0x08B0(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputMasher*                                _interactInputMasher;                                      // 0x08B8(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerInteractable*                         _interactable;                                             // 0x08C0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VYKM[0x50];                                    // 0x08C8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UdbdPlayer*>                          _overlappingPlayers;                                       // 0x0918(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UdbdPlayer*                                  _guidingPlayer;                                            // 0x0928(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9JGB[0x8];                                     // 0x0930(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _interactingPlayer;                                        // 0x0938(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5SS0[0x2C];                                    // 0x0940(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EAttackSubstate                     _nextAttackSubstate;                                       // 0x096C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0UX1[0x3];                                     // 0x096D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UdbdPlayer*>                          _hitTargets;                                               // 0x0970(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterDreamworldComponent*               _dreamworldComponent;                                      // 0x0980(0x0008) (Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterChaseVisualComponent*              _characterChaseVisualComponent;                            // 0x0988(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraHandlerComponent*                     _cameraHandlerComponent;                                   // 0x0990(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpecialEventSpawnerComponent*               _specialEventSpawnerComponent;                             // 0x0998(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _itemDropOffPosition;                                      // 0x09A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x09A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class Uactor*>                              _ignoreActors;                                             // 0x09B0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class Uactor*>                              _ignoreBelowActors;                                        // 0x09C0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class Uactor*>                              _overlappingActors;                                        // 0x09D0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEffectCameraTypeSettings>           EffectCameraTypeSettings;                                  // 0x09E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3LU8[0x28];                                    // 0x09F0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UchargeableComponent*                        _blindingChargeableComponent;                              // 0x0A18(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PX0V[0x90];                                    // 0x0A20(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldUpdateStateMachineDriverOnPossessed;                // 0x0AB0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8SEM[0x7];                                     // 0x0AB1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlindableComponent*                         _blindableComponent;                                       // 0x0AB8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LDBA[0x8];                                     // 0x0AC0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPollableEventListener*                      _eventListener;                                            // 0x0AC8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RDDU[0x8];                                     // 0x0AD0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChaseComponent*                             _chaseComponent;                                           // 0x0AD8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UZoneDetectorComponent*                      _meatHookZoneDetector;                                     // 0x0AE0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UZoneDetectorComponent*                      _basementZoneDetector;                                     // 0x0AE8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KRXT[0x98];                                    // 0x0AF0(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UinteractionDefinition*                      _bookmarkedInteraction;                                    // 0x0B88(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<DBDSharedTypes_EDetectionZone, class UprimitiveComponent*> _detectionZoneMap;                                         // 0x0B90(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QYHK[0x60];                                    // 0x0BE0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAuthoritativeMovementComponent*             _authoritativeMovementComponent;                           // 0x0C40(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MNSI[0x2C0];                                   // 0x0C48(0x02C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _screenAspectRatio;                                        // 0x0F08(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_85XU[0x2C];                                    // 0x0F0C(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameplayTagContainerComponent*              _objectState;                                              // 0x0F38(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioFXComponent*                           _audioFXComponent;                                         // 0x0F40(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerPerspectiveComponent*                 _playerPerspectiveComponent;                               // 0x0F48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9UB8[0x8];                                     // 0x0F50(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterSightComponent*                    _characterSightComponent;                                  // 0x0F58(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7ZNR[0x8];                                     // 0x0F60(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterSightableComponent*                _characterSightableComponent;                              // 0x0F68(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E4Z2[0x10];                                    // 0x0F70(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractionDetectorComponent*               _interactionDetectorComponent;                             // 0x0F80(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitivesRegistererComponent*              _clippablePrimitivesRegistererComponent;                   // 0x0F88(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClippableProviderComponent*                 _clippableProviderComponent;                               // 0x0F90(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicCapsuleResizerComponent*             _dynCapsuleResizer;                                        // 0x0F98(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerGameRelevancyComponent*               _playerGameRelevancyComponent;                             // 0x0FA0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UContextualQuestComponent*                   _contextualQuestComponent;                                 // 0x0FA8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QSJX[0x20];                                    // 0x0FB0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UactorComponent*                             _questEventHandler;                                        // 0x0FD0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableProgressProviderComponent*        _presentationChargeableProgressComponent;                  // 0x0FD8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _currentGamepadYawCurve;                                   // 0x0FE0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _currentGamepadPitchCurve;                                 // 0x0FE8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDPlayerState*                             _associatedPlayerStateCache;                               // 0x0FF0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.dbdPlayer");
		return ptr;
	}



	void UpdateLoadoutFromInventory();
	bool TryInteractionType(DeadByDaylight_EInputInteractionType InteractionInputType, class UdbdPlayer* requester, bool usingInputPersistence);
	bool TryInteraction(class UinteractionDefinition* interaction, class UdbdPlayer* requester, bool Force, bool usingInputPersistence);
	bool TryFireScoreEvent(DeadByDaylight_EDBDScoreTypes ScoreType, float percentToAward);
	void TriggerTrapImmunity(float duration);
	void TriggerAnimNotify(DBDSharedTypes_EAnimNotifyType animNotifyType);
	void ToggleGhost();
	bool TeleportToBP(const struct Fvector& DestLocation, const struct FRotator& DestRotation, bool bIsATest, bool bNoCheck);
	void StopSnap(bool snap);
	void StopMontage();
	void StopAllMovement();
	void SnapCharacter(bool SnapPosition, const struct Fvector& position, float stopSnapDistance, bool SnapRotation, const struct FRotator& rotation, float time, bool UseZCoord, bool SweepOnFinalSnap, bool snapRoll);
	bool shouldPlayCarryAnim();
	bool ShouldFall();
	void SetWorldCollisionResponse(TEnumAsByte<Engine_ECollisionResponse> Response);
	void SetShouldPlayCarryAnim(bool shouldPlayCarryAnim);
	void SetReverseMontage(bool reverse);
	void SetQuestEventHandlerComponent(class UactorComponent* component);
	void SetPlayerDirection(const struct FRotator& rotation);
	void SetPawnAuthoritativeMovement(bool authoritative);
	void SetMouseYawScale(float yawScale, float adjustTime);
	void SetMousePitchScale(float pitchScale, float adjustTime);
	void SetItemUseAsToggle(bool Value);
	void SetIsCloaked(bool isCloaked, bool forced);
	void SetInParadise(bool inParadise);
	void SetIgnoreActorCollision(class Uactor* ActorToIgnore, bool ignore);
	void SetGuidingPlayer(class UdbdPlayer* guidingPlayer);
	void SetGamepadYawScale(float yawScale, float adjustTime);
	void SetGamepadPitchScale(float pitchScale, float adjustTime);
	void SetForceDisableSkillChecks(bool isEnabled);
	void SetFirstPersonVfxsVisibility(bool IsFirstPerson);
	void SetFirstPersonModelEnabled(bool enabled, bool Force);
	void SetFirstPersonMeshVisibility(bool IsFirstPerson);
	void SetFeetOnGround(bool feetOnGround);
	void SetEmulateGamepadForMouseYaw(bool emulate);
	void SetEmulateGamepadForMousePitch(bool emulate);
	void SetDetectionZoneEnabled(DBDSharedTypes_EDetectionZone detectionZoneID, bool enabled);
	void SetCurrentInteractionAnimation(DBDSharedTypes_EInteractionAnimation animation);
	void SetAuthoritativeMovementFlag(DeadByDaylight_EAuthoritativeMovementFlag flagIndex, bool enabled);
	void SetAnimationCrouchState(bool crouched);
	void SetAllowNavigation(bool Enable);
	void SetAllDetectionZonesEnabled(bool enabled);
	void ServerResetMeshRelativeOffSet();
	void Server_UpdateScreenAspectRatio(float Value);
	void Server_SetForceAuthoritativeMovement(bool Value);
	void Server_SetDebugPrintAvailableInteractions(bool enabled);
	void Server_SetCustomization(TArray<struct FName> customizationParts, TArray<struct FCharmIdSlot> CustomizationCharms);
	void Server_SetContinuousPrintDebug(bool enabled);
	void Server_SendSecondaryActionPressed();
	void Server_SendItemUseInput(bool pressed);
	void Server_SendItemUse(bool use);
	void Server_SendItemDropInput(bool pressed);
	void Server_SendInteractionInput(bool pressed);
	void Server_SendFastInteractionInput(bool pressed);
	void Server_SendAbilityInput(bool pressed);
	void Server_PlayerReady();
	void Server_OnInsaneSkillCheck();
	void Server_FailInterruption(class UdbdPlayer* Interruptee);
	void Server_Drop(class Ucollectable* Item, const struct Fvector& location, const struct FRotator& rotation, bool onDeath);
	void Server_Cheat();
	void SecondaryActionInputPressed();
	void ResetYawScale(float adjustTime);
	void ResetPitchScale(float adjustTime);
	void ResetMeshRelativeRotation();
	void ResetMeshRelativePosition();
	void ResetCamera();
	void RemoveStatusEffect(class UstatusEffect* statusEffect);
	void Remotely_HandleScoreEvent(const struct FgameplayTag& ScoreTypeTag, const struct FscoreEventData& scoreEventData);
	class UAnimMontage* PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float playRate, bool isFollower);
	void OnRep_Interactable();
	void OnRep_DreamworldComponent();
	void OnPickupStart(class UdbdPlayer* target);
	void OnPickupEnd(class UdbdPlayer* target);
	void OnPawnDetectorOverlapExit(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void OnPawnDetectorOverlapEnter(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
	void OnLocallyObservedChanged();
	void OnLevelReadyToPlay();
	void OnIsCrouchedChanged__DelegateSignature(bool IsCrouched);
	void OnIntroCompletedNative();
	void OnIntroCompleted();
	void OnInterruptedStart();
	void OnInsaneSkillCheck();
	void OnHeadHidden(bool hidden);
	struct FString OnGetCharacterName();
	void OnEscapeDoorActivated();
	void OnCurrentMontageComplete(class UAnimMontage* MontageAsset, bool interrupted);
	void OnCurrentMontageBlendingOut(class UAnimMontage* MontageAsset, bool interrupted);
	void OnClientRestart();
	void OnBlindChargeEmptied();
	void OnAnimInstanceChanged();
	void OnAllPlayerLoaded();
	void Multicast_SetRunVaultEnabled(bool enabled);
	void Multicast_SetReverseTraverseEnabled(bool enabled);
	void Multicast_SetMaxWalkSpeed(float maxWalkSpeed);
	void Multicast_SetInteractingPlayer(class UdbdPlayer* interactingPlayer);
	void Multicast_SetForceAuthoritativeMovement(bool Value);
	void Multicast_SetEnableCapsuleDynamicResize(bool enabled);
	void Multicast_SetDebugSnapPoint(bool enabled);
	void Multicast_SetDebugPrintAvailableInteractions(bool enabled);
	void Multicast_SetDebugCarry(bool enabled);
	void Multicast_SetCustomization(TArray<struct FName> customizationParts, TArray<struct FCharmIdSlot> CustomizationCharms);
	void Multicast_SetContinuousPrintDebug(bool enabled);
	void Multicast_SetAuthoritativeMovement(bool enabled);
	void Multicast_ServerResetMeshRelativeOffSet();
	void Multicast_ReplicateController(class Ucontroller* newController);
	void Multicast_PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float playRate);
	void Multicast_OnInsaneSkillCheck();
	void Multicast_LeaveGame(const struct Fguid& uniqueLeavingPlayerId);
	void Multicast_InteractionRollResult(bool rollResult);
	void Multicast_ConfirmItemDrop(bool pressed);
	void Local_RequestBlink(const struct FTransform& Destination);
	void Local_NotifyMatchEnded();
	bool Local_IsInteractionInputPressed(DeadByDaylight_EInputInteractionType InteractionType);
	bool K2_SetActorLocationByBottomCapsule(const struct Fvector& NewLocation, bool bSweep, struct FhitResult* SweepHitResult);
	void ItemUseReleased();
	void ItemUsePressed();
	void ItemDropReleased();
	void ItemDropPressed();
	bool IsStrafing();
	bool IsSnappingRotation();
	bool IsSnappingPosition();
	bool IsSnapping();
	bool isRunningAndMoving();
	bool IsRunning();
	bool IsPlayingMontage(const struct FAnimationMontageDescriptor& animMontageID);
	bool IsPlayingAnyMontage();
	bool IsMoving();
	bool IsLocationClear(const struct Fvector& TargetPosition);
	bool isLocallyObserved();
	bool IsInTerrorRadius();
	bool IsInteractionInputPressed(DeadByDaylight_EInputInteractionType InteractionType);
	bool isInStalkMode();
	bool IsInsideCloset();
	bool IsInParadise();
	bool IsInMeathookZone();
	bool IsIncapacitated();
	bool IsInBasement();
	bool IsHeadHidden();
	bool IsFacing(const struct Fvector& direction);
	bool IsExhausted();
	bool IsCrouchPressed();
	bool IsCrouching();
	bool isCloaked();
	bool IsBeingInterrupted();
	bool IsAllowedNavigation();
	bool IsAIControlled();
	void InteractionInputReleased();
	void InteractionInputPressed();
	void Input_ToggleCrouch();
	void HideHead(bool Hide);
	bool HasTrapImmunity();
	bool HasMoveInput();
	bool HasDamageImmunity();
	bool HasClearPathToTargetWithIgnore(const struct Fvector& TargetPosition, TArray<class Uactor*> IgnoreActors);
	bool HasClearPathToTarget(const struct Fvector& TargetPosition);
	bool HasClearPathToItemDropOffPosition();
	bool HasAnimMontageEnded();
	float GetTunableValue(const struct FName& key, float DefaultValue, bool warnIfRowMissing);
	class USpecialEventSpawnerComponent* GetSpecialEventSpawnerComponent();
	class UDBDPlayerController* GetSharedPlayerController();
	bool GetRunVaultEnabled();
	bool GetReverseTraverseEnabled();
	struct FRotator GetRepControlRotation();
	float GetRemainingTrapImmunityDuration();
	float GetProgressToEscapeCarry(class UdbdPlayer* player);
	DBDSharedTypes_EPlayerTeam GetPlayerTeam();
	DBDSharedTypes_EPlayerRole GetPlayerRole();
	class UPlayerInteractionHandler* GetPlayerInteractionHandler();
	struct FRotator GetPlayerDirection();
	class UDBDPlayerController* GetPlayerController();
	class UCameraComponent* GetPlayerCamera();
	class UBoxOcclusionQueryComponent* GetPixelCounter();
	class UPerkManager* GetPerkManager();
	float GetPercentPixelsVisible();
	float GetPercentMovementSpeed();
	DBDSharedTypes_EPawnType GetPawnType();
	class UGameplayTagContainerComponent* GetObjectState();
	bool GetNearbyGroundLocation(struct Fvector* groundLocation);
	struct FString GetNameDebugString();
	class UMontagePlayer* GetMontagePlayer();
	struct FmontagePlaybackDefinition GetMontagePlaybackDefinition(const struct FAnimationMontageDescriptor& animMontageID, float playRate, bool isFollower);
	float GetMontageLength(const struct FAnimationMontageDescriptor& animMontageID);
	class UAnimMontage* GetMontage(const struct FAnimationMontageDescriptor& animMontageID);
	struct Fvector GetMeshFeetPosition();
	float GetMaxSpeed();
	float GetLuck();
	struct Fvector GetLastSafeLocation();
	TArray<class UItemModifier*> GetItemModifiers();
	class USceneComponent* GetItemDropOffTransform();
	TArray<class UItemAddon*> GetItemAddons();
	bool GetIsInterrupting();
	bool GetIsInteracting();
	bool GetIsInFirstPerson();
	bool GetIsBeyondCrouchWalkSpeed();
	bool GetInteractionRollResult();
	struct FInteractionPlayerProperties GetInteractionPlayerProperties();
	class UInteractionDetectorComponent* GetInteractionDetectorComponent();
	class Uinteractable* GetInteractable();
	class UdbdPlayer* GetGuidingPlayer();
	float GetGrassEffectRadiusMultiplier();
	bool GetForceDisableSkillChecks();
	class UactorComponent* GetFirstComponentByClass(class UClass* ComponentClass);
	struct Fvector GetFeetPositionAtTargetLocation(const struct Fvector& location);
	struct Fvector GetFeetPosition();
	bool GetFeetOnGround();
	class UCharacterDreamworldComponent* GetDreamworldComponent();
	class UprimitiveComponent* GetDetectionZone(DBDSharedTypes_EDetectionZone detectionZoneID);
	bool GetDebugPrintAvailableInteractions();
	bool GetDebugFailAllInteractions();
	class UDBDPlayerState* GetDBDPlayerState();
	class UCustomizedSkeletalMesh* GetCustomizedSkeletalMesh();
	DBDSharedTypes_EInteractionAnimation GetCurrentInteractionAnimation();
	class UinteractionDefinition* GetCurrentInteraction();
	bool GetContinuousPrintDebug();
	class UChaseComponent* GetChaseComponent();
	class UCharacterInventoryComponent* GetCharacterInventoryComponent();
	struct Fvector GetCapsuleTopPosition();
	struct Fvector GetCapsuleBottomPosition();
	class UDBDPlayerCameraManager* GetCameraManager();
	float GetCameraCharacterYawDiff();
	struct Fvector GetBoneRelativeLocation(const struct FName& TargetBone, const struct FName& relativeBone);
	struct Fvector GetBoneLocation(const struct FName& name, TEnumAsByte<Engine_EBoneSpaces> Space);
	float GetBlinkTime();
	class UBlindableComponent* GetBlindableComponent();
	float GetBaseFOV();
	struct Fvector GetAverageVelocity();
	class UAuthoritativeMovementComponent* GetAuthoritativeMovementComponent();
	class USceneComponent* GetAttachPoint(const struct FName& AttachPointName);
	class UplayerState* GetAssociatedPlayerState();
	void GetAnimTags(TArray<struct FName>* outTags);
	class UanimInstance* GetAnimInstance();
	struct FAnimData GetAnimData();
	struct Fvector GetAlmostCurrentVelocity();
	struct Fvector GetActorLocationFromFeetLocation(const struct Fvector& FeetLocation);
	struct Fvector FindFurthestClearLocationBetweenPoints(const struct Fvector& StartPosition, const struct Fvector& TargetPosition);
	class UdbdPlayer* FindClosestSlashablePlayerInDetectionZone(DBDSharedTypes_EDetectionZone detectionZoneID);
	void FastInteractionInputReleased();
	void FastInteractionInputPressed();
	void dissolve(bool dissolve);
	void DetachInteractor();
	void DebugPrint(const struct FString& InString);
	void DeactivateSkillChecks();
	void DBDUnCrouch();
	void DBDLog(const struct FString& logText);
	void DBDCrouch();
	void DBD_ToggleForceAuthoritativeMovement();
	void DBD_ToggleDebugInteractionInZone();
	void DBD_SetMouseTurnSpeedMultiplier(float Value);
	void DBD_SetMouseLookUpSpeedMultiplier(float Value);
	void DBD_DebugStartInteraction();
	void Client_TryInteractionType(DeadByDaylight_EInputInteractionType InteractionType, class UdbdPlayer* requester);
	void Client_SendCancelInteraction(class UinteractionDefinition* interactionDefinition);
	void Client_QueueInteraction(DeadByDaylight_EInputInteractionType InteractionType, class UdbdPlayer* requester, float queuedTimer);
	void Client_ClearInteractionQueue();
	bool CanInterrupt_BP();
	bool CanInteractWithItems();
	bool CanInteract();
	void CancelCarry(bool alsoCancelForOtherPlayer);
	bool CanBeBlinded();
	void CameraUpdated();
	void Broadcast_PlayMontage_Server(const struct FAnimationMontageDescriptor& animMontageID, float playRate);
	void Broadcast_PlayMontage_Multicast(const struct FAnimationMontageDescriptor& animMontageID, float playRate);
	void Broadcast_Multicast_BlinkDestination(const struct Fvector& position, const struct FRotator& rotation);
	void Broadcast_BlinkDestination(const struct Fvector& position, const struct FRotator& rotation);
	bool Authority_TryForceEndOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes ScoreType);
	bool Authority_TryForceCancelOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes ScoreType);
	void Authority_SetDreamworldComponent(class UCharacterDreamworldComponent* component);
	void Authority_RequestStun(DBDSharedTypes_EStunType stunType, class UdbdPlayer* stunner);
	void Authority_RemoveStatusEffectByID(const struct FName& statusEffectID, bool bRemoveAllWithID);
	class UstatusEffect* Authority_ImposeStatusEffect(const struct FName& statusEffectID, class UdbdPlayer* originatingPlayer, float CustomParam, class UgameplayModifierContainer* originatingEffect, bool ShouldDisplay, float lifeTime);
	class UstatusEffect* Authority_ImposeDynamicStatusEffect(const struct FName& statusEffectID, class UdbdPlayer* originatingPlayer, float CustomParam, class UgameplayModifierContainer* originatingEffect);
	void Authority_HandleScoreEvent(const struct FgameplayTag& ScoreTypeTag, const struct FscoreEventData& scoreEventData);
	void Authority_EvaluateIfPlayerCanSee();
	void Authority_EndStatusEffectByID(const struct FName& statusEffectID, bool bRemoveAllWithID);
	void Authority_EndOngoingScoreEvent(const struct FgameplayTag& ScoreTypeTag);
	void Authority_CancelOngoingScoreEvent(const struct FgameplayTag& ScoreTypeTag);
	void Authority_ActivateAuthoritativeMovementOnDropped();
	void AttachInteractor(class Uinteractor* interactor);
	void AddDetectionZone(DBDSharedTypes_EDetectionZone detectionZoneID, class UprimitiveComponent* zone);
	void AbilityInputReleased();
	void AbilityInputPressed();
};

// Class DeadByDaylight.camperPlayer
// 0x04E8 (FullSize[0x14E0] - InheritedSize[0x0FF8])
class UcamperPlayer : public UdbdPlayer
{
public:
	unsigned char                                      UnknownData_4BFX[0x8];                                     // 0x0FF8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_CQX9[0x10];                                    // 0x1000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHookedStateChanged;                                      // 0x1010(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGuidedStateChanged;                                      // 0x1020(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPickedUpDelegate;                                        // 0x1030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPickedUpEndDelegate;                                     // 0x1040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHPSlotChanged;                                           // 0x1050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VPE0[0x28];                                    // 0x1060(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnImmobilizeStateChanged;                                  // 0x1088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XH7K[0x30];                                    // 0x1098(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHookEscapeFailedCosmetic;                                // 0x10C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              InputMashCount;                                            // 0x10D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputMashDecayTime;                                        // 0x10DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ReverseBearTrapAttachSocket;                               // 0x10E0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StruggleMashDelay;                                         // 0x10EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               isBeingDissolved;                                          // 0x10F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsWiggleProgressionAllowed;                                // 0x10F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IAYM[0x2];                                     // 0x10F2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WiggleMashDelay;                                           // 0x10F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootprintAudibleRange;                                     // 0x10F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BDNW[0x4];                                     // 0x10FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStalkedComponent*                           StalkedComponent;                                          // 0x1100(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraResetToleranceYaw;                                   // 0x1108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraResetTolerancePitch;                                 // 0x110C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraRecenterOffsetYaw;                                   // 0x1110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraRecenterOffsetPitch;                                 // 0x1114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EGender                             Gender;                                                    // 0x1118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X5GX[0x7];                                     // 0x1119(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 DropStaggerDuration;                                       // 0x1120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DropStaggerMaxSpeed;                                       // 0x1128(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeforDeathWhileCrawling;                                 // 0x1130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeforDeathWhileHooked;                                   // 0x1134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondsUntilFootprintTrigger;                              // 0x1138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerAfflictionHUDIntro;                                 // 0x113C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R9RU[0x7B];                                    // 0x113D(0x007B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperStillnessTrackerComponent*            _stillnessTracker;                                         // 0x11B8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PartiallyHiddenStillnessThreshold;                         // 0x11C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MDSX[0x4];                                     // 0x11C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uactor*                                      _escape;                                                   // 0x11C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uactor*                                      _overlappingEscape;                                        // 0x11D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpherePlayerOverlapComponent*               ProximityZone;                                             // 0x11D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MO6S[0x18];                                    // 0x11E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTimer                                   _dropStaggerTimer;                                         // 0x11F8(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W57K[0x8];                                     // 0x1220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           SlashableZone;                                             // 0x1228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           HookSlashableZone;                                         // 0x1230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTerrorRadiusReceiverComponent*              _terrorRadiusReceiverComponent;                            // 0x1238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchCapsuleHalfHeight;                                   // 0x1240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IKOffsetRightFoot;                                         // 0x1244(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IKOffsetLeftFoot;                                          // 0x1248(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0C8T[0x34];                                    // 0x124C(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDPawnSensingComponent*                    _camperSensor;                                             // 0x1280(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USurviveTimerScoreEventComponent*            _surviveTimerScoreComponent;                               // 0x1288(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CQOY[0x18];                                    // 0x1290(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UdbdPlayer*>                          _foundCampers;                                             // 0x12A8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _potentialSaviors;                                         // 0x12B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4JAK[0x8];                                     // 0x12C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperHealthComponent*                      _healthComponent;                                          // 0x12D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _hpSlot01;                                                 // 0x12D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _hpSlot02;                                                 // 0x12E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _mendChargeable;                                           // 0x12E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodTrailSettings*                         _bloodTrailSettings;                                       // 0x12F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCamperBloodTrailComponent*                  _bloodTrailComponent;                                      // 0x12F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UchargeableComponent*                        _carryEscapeProgress;                                      // 0x1300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKillerInstinctComponent*                    _killerInstinctComponent;                                  // 0x1308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraAttachmentComponent*                  _cameraAttachment;                                         // 0x1310(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharmSpawnerComponent*                      _charmSpawnerComponent;                                    // 0x1318(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHookableComponent*                          _hookableComponent;                                        // 0x1320(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStruggleComponent*                          _struggleComponent;                                        // 0x1328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProtectionHitComponent*                     _protectionHitComponent;                                   // 0x1330(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScreamComponent*                            _screamComponent;                                          // 0x1338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterPositionRecorderComponent*         _positionRecorder;                                         // 0x1340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DF0G[0xB4];                                    // 0x1348(0x00B4) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _runInputPressed;                                          // 0x13FC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7XUB[0x24];                                    // 0x13FD(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _trapIndicatorActive;                                      // 0x1421(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U3ZC[0x2];                                     // 0x1422(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UcamperPlayer>                _revealedSurvivor;                                         // 0x1424(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DIIL[0x4];                                     // 0x142C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperEndGameComponent*                     _camperEndGameComponent;                                   // 0x1430(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _noOcclusionAkComponent;                                   // 0x1438(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _injuredGruntDistance;                                     // 0x1440(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _crawlingGruntDistance;                                    // 0x1444(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _trappedGruntDistance;                                     // 0x1448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _runningGruntDistance;                                     // 0x144C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fallingGruntDistance;                                     // 0x1450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _guidedGruntDistance;                                      // 0x1454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _hookedGruntDistance;                                      // 0x1458(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isHealingKOCamper;                                        // 0x145C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSkillCheckFailed;                                       // 0x145D(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBeingSacrificed;                                        // 0x145E(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OKMF[0x71];                                    // 0x145F(0x0071) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMoveComponentToComponent*                   _meshMover;                                                // 0x14D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YO42[0x8];                                     // 0x14D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.camperPlayer");
		return ptr;
	}



	void UpdateKillerDistanceEvent(float deltaSeconds);
	void UpdateHealingTimer(float deltaTime);
	void TriggerWiggleSkillCheck();
	void TriggerPutDownAnimation();
	void TriggerPickUpAnimation();
	void TriggerAfflictionHUDFeedback();
	void StopHealingTimer();
	void StartHealingTimer(float time);
	void SetVignetteVisible(bool Visible);
	void SetUseCrouchSlashableCapsule(bool useCrouchCapsule);
	void SetRevealedSurvivor(class UcamperPlayer* Survivor);
	void SetPlayerExposedVFX();
	void SetIsSkillCheckFailed(bool isSkillCheckFailed);
	void SetIsHealingKOCamper(bool isHealingKOCamper);
	void SetImmobilized(DeadByDaylight_ECamperImmobilizeState state);
	void SetGuidedActionLocal(DeadByDaylight_ECamperGuidedAction Action);
	void SetGuidedAction(DeadByDaylight_ECamperGuidedAction Action);
	void SetEnableHookSlashableZone(bool Enable);
	void SetBeingCarried(bool isBeingCarried, class UdbdPlayer* carrier);
	void SetAutoInteractionMashEnabled(bool enabled);
	void Server_SetOverlappingEscape(class Uactor* escape);
	void Server_SetImmobilized(DeadByDaylight_ECamperImmobilizeState state);
	void Server_SendRunInput(bool pressed);
	void Server_SendLeftRightMashedInput(bool pressed);
	void Server_SendInteractMashedInput(bool pressed);
	void Server_CheatEscaped();
	void ResetPotentialSaviors();
	void ResetCameraAttach();
	void RemoveReverseBearTrap();
	void OnUnhooked();
	void OnProximityEntered(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
	void OnPlayScream(class UAkAudioEvent* AudioEvent, bool fireSoundEvent);
	void OnPickUpEnter(class UdbdPlayer* picker, float transitionTime);
	void OnPickUpDenied();
	void OnPawnSensed(class Upawn* pawn);
	void OnObsessionChanged(class UcamperPlayer* newObsession, class UcamperPlayer* previousObsession);
	void OnHpSlotSkillCheckResponseAesthetic(bool Success, bool bonus, class UdbdPlayer* player, bool triggerLoudNoise, bool HadInput, DBDSharedTypes_ESkillCheckCustomType type, float chargeChange);
	void OnHookedStateChangedCosmetic();
	void OnHooked();
	void OnHealthStateChanged(DeadByDaylight_ECamperDamageState oldDamageState, DeadByDaylight_ECamperDamageState currentDamageState);
	void OnFinishedPlaying();
	void OnDroppedStart();
	void OnDroppedEnd(bool clearLeader);
	void OnDroppedByBearTrap();
	void OnDamageHit(const struct FhitResult& hit, bool causedKo);
	void Multicast_SetOverlappingEscape(class Uactor* escape);
	void Multicast_SetImmobilized(DeadByDaylight_ECamperImmobilizeState state);
	void Multicast_SetGuidedAction(DeadByDaylight_ECamperGuidedAction Action);
	void Multicast_SetEnableHookSlashableZone(bool enabled);
	void Multicast_SetAuthoritativeMovementFlag(DeadByDaylight_EAuthoritativeMovementFlag flag, bool Value);
	void Multicast_RemoveReverseBearTrap();
	void Multicast_OnFailedStruggling(class UinteractionDefinition* interaction);
	void Multicast_ApplySprintEffect();
	void MoveToOwnerCarryJoint();
	void MakeCamperDisappearBleedOut();
	void MakeCamperDisappear();
	void Local_SetImmobilized(DeadByDaylight_ECamperImmobilizeState state);
	void Kill(bool sacrificed, bool left);
	bool IsVaulting();
	bool IsUnintentionallyImmobilized();
	bool IsUnhookingSelf();
	bool IsTrapped();
	bool isSacrificed();
	bool IsRunLocked();
	bool IsOnHitSprintEffectActive();
	bool IsObsessionTarget();
	bool IsMovementGuided();
	bool IsInNeed();
	bool IsInDeathBed();
	bool IsImmobilized();
	bool IsHooked();
	bool IsHealingTimerExpired();
	bool IsGuidedBySlasher();
	bool IsEscaped();
	bool IsDeadOrInParadise();
	bool IsCrawling();
	bool IsBeingUnhooked();
	bool IsBeingPutOnHook();
	bool IsBeingPutDown();
	bool IsBeingPulledFromCloset();
	bool IsBeingPickedUp();
	bool IsBeingMended();
	bool IsBeingKilled();
	bool IsBeingInteractedWith();
	bool IsBeingHealed();
	bool isBeingCarried();
	void Input_Wiggle(float input);
	void Input_ToggleRun();
	void Input_Struggle(float input);
	void HatchEscapeZoneEntered(class Uactor* escape);
	bool HasReverseBearTrap();
	bool HasHitEvents();
	bool HasGuidedAction();
	float GetWiggleFreeChargePercent();
	struct FRotator GetToAimPointRotation();
	class UTerrorRadiusReceiverComponent* GetTerrorRadiusReceiverComponent();
	float GetStillness();
	class UScreamComponent* GetScreamComponent();
	class UReverseBearTrap* GetReverseBearTrap();
	class UcamperPlayer* GetRevealedSurvivor();
	float GetPercentHealingTimer();
	class Uactor* GetOverlappingEscape();
	float GetObsessionTargetWeight();
	int GetNumberOfEntityRenderRegions();
	class UAkComponent* GetNoOcclusionAudioComponent();
	class UAnimationMontageSlave* GetMontageFollower();
	class UMoveComponentToComponent* GetMeshMover();
	float GetMaxGruntDistance(bool isLocalPlayerKiller);
	bool GetIsSkillCheckFailed();
	bool GetIsHealingKOCamper();
	bool GetIsBeingDissolved();
	DeadByDaylight_ECamperImmobilizeState GetImmobilizedState();
	class UHookableComponent* GetHookableComponent();
	class UCamperHealthComponent* GetHealthComponent();
	DeadByDaylight_ECamperGuidedAction GetGuidedAction();
	class UDBDClipRegionComponent* GetEntityRenderRegionAtIndex(int InIndex);
	float GetDropStaggerTimeLeft();
	float GetDropStaggerPercentTimeElapsed();
	class UChaseeCharacterComponent* GetChaseeCharacterComponent();
	class UCamperStillnessTrackerComponent* GetCamperStillnessComponent();
	class UDBDCamperData* GetCamperData();
	class UCamperAnimInstance* GetCamperAnimInstance();
	class UCameraAttachmentComponent* GetCameraAttachmentComponent();
	class UCamperBloodTrailComponent* GetBloodTrailComponent();
	TArray<class UDBDClipRegionComponent*> GetAllEntityRenderRegions();
	struct Fvector GetAimPoint();
	void EventOnDeath();
	void EscapeTutorial();
	void escape(class Uactor* escape, DeadByDaylight_EEscapeType escapeType);
	void DoSacrificialDissolve();
	void DetachFromGuidingPlayer();
	void DecalBlood_Puddles();
	void DBD_SetSurvivorCameraArmLength(float cameraArmLength);
	void DBD_RunLocked(bool lock);
	void DBD_LeaveParadise();
	void DBD_ForceRun(bool forced);
	void DBD_CheatEscaped();
	void DBD_AutoLeftRightMash(bool enabled);
	void DBD_AutoInteractionMash(bool enabled);
	bool ComputeHookEscapeResult();
	bool ComputeBeartrapEscapeResult();
	void Client_OnSlashedOutOfTrap(class UdbdPlayer* requester);
	bool CanStruggle();
	bool CanRushQuietly();
	bool CanBeShocked();
	bool CanBePickedUp();
	bool CanBeKilled();
	void CallOnDroppedByBearTrap();
	void Authority_ResetWiggleFreeCharge();
	void Authority_OnSlashed(class UdbdPlayer* attacker);
	void Authority_OnFailedStruggling(class UinteractionDefinition* interaction);
	void Authority_DropItemAtLastSafePosition();
	void Authority_AddWiggleFreeChargePercentNoModifiers(float chargePercent);
	void Authority_AddWiggleFreeCharge(float charge);
	void AttachToGuidingPlayer();
	void AddBloodDropsToRightHand();
	void AddBloodDropsToLeftHand();
	void AddBloodDrippingToGK_Mori();
	void AddBloodDecalToGK_Mori();
	void ActivatePlayerExposedVFX();
	void ActivateLocalPlayerExposedVFX();
	void ActionInputReleased();
	void ActionInputPressed();
};

// Class DeadByDaylight.StateMachine
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UStateMachine : public UactorComponent
{
public:
	unsigned char                                      UnknownData_R87L[0x60];                                    // 0x00B8(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<uint16_t>                                   _netStateIDStackInitial;                                   // 0x0118(0x0010) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_53XR[0x8];                                     // 0x0128(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StateMachine");
		return ptr;
	}



	void Server_SetStateStack(TArray<uint16_t> netStateIDStack);
	void NetIDStackChanged();
	void Multicast_SetStateStack(TArray<uint16_t> netStateIDStack);
};

// Class DeadByDaylight.PlayerStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UPlayerStateMachine : public UStateMachine
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.CamperStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UCamperStateMachine : public UPlayerStateMachine
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.StillnessTrackerComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UStillnessTrackerComponent : public UactorComponent
{
public:
	float                                              SpeedThreshold;                                            // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceThreshold;                                         // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceDecay;                                             // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DecayWhileMoving;                                          // 0x00C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CZ9B[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StillnessThreshhold;                                       // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StillnessTimerLimit;                                       // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DecaySpeedMultiplier;                                      // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JDG4[0x8];                                     // 0x00D4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UdbdPlayer>                   _trackedPlayer;                                            // 0x00DC(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J08Z[0xC];                                     // 0x00E4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StillnessTrackerComponent");
		return ptr;
	}



	void StartTracking();
};

// Class DeadByDaylight.CamperStillnessTrackerComponent
// 0x0060 (FullSize[0x0150] - InheritedSize[0x00F0])
class UCamperStillnessTrackerComponent : public UStillnessTrackerComponent
{
public:
	float                                              ChickenShitModifier;                                       // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoudNoiseTime;                                             // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1VDE[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ExposerSpawnTimes;                                         // 0x0108(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      ExposerDespawnTimes;                                       // 0x0118(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _exposerInstanceToSpawn;                                   // 0x0128(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCamperExposerInstance*>              _exposerInstances;                                         // 0x0130(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExposerInteriorZoneComponent*               _interiorZone;                                             // 0x0140(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MRW2[0x8];                                     // 0x0148(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CamperStillnessTrackerComponent");
		return ptr;
	}



	void OnOverlapExit(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void OnOverlapEnter(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
	void OnLevelReadyToPlay();
	void ExitInteriorZone(class UExposerInteriorZoneComponent* zone);
	void EnterInteriorZone(class UExposerInteriorZoneComponent* zone);
};

// Class DeadByDaylight.CartersSparkComponent
// 0x00C8 (FullSize[0x0180] - InheritedSize[0x00B8])
class UCartersSparkComponent : public UactorComponent
{
public:
	bool                                               _staticBlastEnabled;                                       // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JQUI[0x8F];                                    // 0x00B9(0x008F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UdbdPlayer*>                          _totallyInsanePlayers;                                     // 0x0148(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _owningPlayer;                                             // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VEBE[0x20];                                    // 0x0160(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CartersSparkComponent");
		return ptr;
	}



	void TriggerStaticBlastCooldown();
	void TriggerShockTherapyCooldown();
	void Server_OnShockTherapyCooldownCheatEntered();
	void OnRequestAndBeginInteraction(class UinteractionDefinition* interaction);
	void Multicast_OnShockTherapyCooldownCheatEntered();
	void Local_OnShockTherapyCooldownCheatEntered();
	bool IsStaticBlastOnCooldown();
	bool IsShockTherapyOnCooldown();
	float GetStaticBlastCooldownPercentElapsed();
	void Authority_RegisterToGameEvents();
	void Authority_AddTotallyInsaneSurvivor(class UdbdPlayer* insaneSurvivor);
};

// Class DeadByDaylight.CDNPatchManager
// 0x0218 (FullSize[0x0248] - InheritedSize[0x0030])
class UCDNPatchManager : public UObject
{
public:
	struct FString                                     InstallDirectory;                                          // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PakOrder;                                                  // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D3TY[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PakMountPoint;                                             // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AT70[0x48];                                    // 0x0058(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UgameInstance>                _gameInstance;                                             // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9ITJ[0xF0];                                    // 0x00A8(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAtlantaPendingContent*                      _currentContentToInstall;                                  // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             _remainingManifestsToInstall;                              // 0x01A0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UAtlantaPendingContent*> _contentToInstall;                                         // 0x01B0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_70PT[0x48];                                    // 0x0200(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CDNPatchManager");
		return ptr;
	}



	void OnRequestSucceeded(class UAtlantaPendingContent* pendingContent);
	void OnRequestFailed(const struct FText& errorText, int errorCode);
	void OnInstallSucceeded();
	void OnInstallFailed(const struct FText& errorText, int errorCode);
};

// Class DeadByDaylight.CharacterChaseVisualComponent
// 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
class UCharacterChaseVisualComponent : public UactorComponent
{
public:
	class UMaterialHelperUnaffectedStaticMeshComp*     _vignetteMeshComp;                                         // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct Fvector                                     _relativeLocation;                                         // 0x00C0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct Fvector                                     _relativeScale;                                            // 0x00CC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _relativeRotation;                                         // 0x00D8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _fovModifyFactor;                                          // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B7AS[0x28];                                    // 0x00E8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterChaseVisualComponent");
		return ptr;
	}



	void OnObservedCharacterChange(class UdbdPlayer* player);
};

// Class DeadByDaylight.CharacterCollection
// 0x0188 (FullSize[0x0240] - InheritedSize[0x00B8])
class UCharacterCollection : public UactorComponent
{
public:
	unsigned char                                      UnknownData_882Q[0x90];                                    // 0x00B8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _characters[0x50];                                         // 0x00B8(0x0050) UNKNOWN PROPERTY: SetProperty
	class UslasherPlayer*                              _killer;                                                   // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _survivors[0x50];                                          // 0x01A0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _otherCharacters[0x50];                                    // 0x01F0(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterCollection");
		return ptr;
	}



	void GetSurvivors();
	class UslasherPlayer* GetKiller();
	void GetCharacters();
	TArray<class UdbdPlayer*> GetAllCharacters();
};

// Class DeadByDaylight.CharacterCollectionUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharacterCollectionUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterCollectionUtilities");
		return ptr;
	}



	int STATIC_GetNumberOfInjuredHookedOrDyingSurvivors(class UObject* worldContextObject);
	class UslasherPlayer* STATIC_GetKiller(class UObject* worldContextObject);
	void STATIC_GetInGameSurvivorsByRef(class UObject* worldContextObject);
	TArray<class UdbdPlayer*> STATIC_GetInGameSurvivorsAsPlayers(class UObject* worldContextObject);
	TArray<class UcamperPlayer*> STATIC_GetInGameSurvivors(class UObject* worldContextObject);
	TArray<class UdbdPlayer*> STATIC_GetInGamePlayers(class UObject* worldContextObject);
	TArray<class UdbdPlayer*> STATIC_GetCharactersByPlayerTeam(DBDSharedTypes_EPlayerTeam playerTeam, class UObject* worldContextObject);
};

// Class DeadByDaylight.CharacterHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharacterHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterHelper");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterInfoScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class UCharacterInfoScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_9EHR[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterInfoScreen");
		return ptr;
	}



	void OnBackButtonClick();
};

// Class DeadByDaylight.CharacterInventoryComponent
// 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
class UCharacterInventoryComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_993E[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class Ucollectable*>                        _inventory;                                                // 0x0100(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UItemAddon*>                          _generalAddons;                                            // 0x0110(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class Ucollectable*>                        _backpackInventory;                                        // 0x0120(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UItemAddon*>                          _allAddons;                                                // 0x0130(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterInventoryComponent");
		return ptr;
	}



	void StoreItem();
	void StartDrop(class Ucollectable* Item);
	class Ucollectable* SpawnCollectedItem(const struct FName& itemId);
	void RemoveFromInventory(class Ucollectable* Item);
	void OnRep_Inventory();
	void OnRep_GeneralAddons();
	void OnRep_BackpackInventory();
	void Multicast_RemoveFromInventory(class Ucollectable* Item);
	void Multicast_ClearAndDestroyInventory();
	void Multicast_AddToInventory(class Ucollectable* Item, DeadByDaylight_EInventoryType inventoryType);
	bool IsUsingAimItem();
	bool HasMaximumItemCount(class Ucollectable* Item);
	bool HasItem();
	bool HasInInventory(class UClass* Item, DeadByDaylight_EInventoryType inventoryType);
	bool HasEquippedItem();
	struct FName GetItemID();
	int GetItemCountByID(const struct FName& itemId);
	int GetItemCount();
	class Ucollectable* GetItem();
	class Ucollectable* GetFirstItemFromInventory(class UClass* Item, DeadByDaylight_EInventoryType inventoryType);
	TArray<class UItemAddon*> GetAddons();
	void EquipItem();
	void Drop(class Ucollectable* Item, const struct Fvector& location, const struct FRotator& rotation, bool onDeath, bool adjustToGround, bool dropInChest);
	void Debug_Server_RemoveAndDestroyFromInventory(class Ucollectable* Item);
	void Collect(class Ucollectable* Item, DeadByDaylight_EInventoryType inventoryType);
	void ClearAndDestroyInventory();
	void Authority_UseInventoryItem();
	void AddToInventory(class Ucollectable* Item, DeadByDaylight_EInventoryType inventoryType);
};

// Class DeadByDaylight.ItemsAssetLibrary
// 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
class UItemsAssetLibrary : public UAssetLibrary
{
public:
	unsigned char                                      UnknownData_906H[0x70];                                    // 0x00B0(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ItemsAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterItemsAssetLibrary
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class UCharacterItemsAssetLibrary : public UItemsAssetLibrary
{
public:
	unsigned char                                      UnknownData_PGFU[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterItemsAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterPositionRecorderConfigurator
// 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
class UCharacterPositionRecorderConfigurator : public UBaseHitValidationConfigurator
{
public:
	unsigned char                                      UnknownData_X9NB[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterPositionRecorderConfigurator");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterProgressionManager
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UCharacterProgressionManager : public UObject
{
public:
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterProgressionManager");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterStatsHandlerComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UCharacterStatsHandlerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_D5QH[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterStatsHandlerComponent");
		return ptr;
	}



	void ReceiveGameEvent(DeadByDaylight_EDBDScoreTypes ScoreType, float Amount, class Uactor* instigator, class Uactor* target);
	void OnGameEvent(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void InitializePreMatchStats();
};

// Class DeadByDaylight.CharacterStatsUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharacterStatsUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterStatsUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterTool
// 0x0108 (FullSize[0x0338] - InheritedSize[0x0230])
class UCharacterTool : public Uactor
{
public:
	TArray<class UTargetPoint*>                        SpawnLocations;                                            // 0x0230(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCharacterToolData                          _customizationData;                                        // 0x0240(0x0070) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UClass*                                      _animInstanceClass;                                        // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _animated;                                                 // 0x02B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseInGameSkeleton;                                         // 0x02B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _showPower;                                                // 0x02BA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useMasterPoseForItems;                                    // 0x02BB(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _powerSocket;                                              // 0x02BC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Engine_EAttachmentRule                             _powerAttachmentRule;                                      // 0x02C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y3OO[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _overallLightingClass[0x30];                               // 0x02C9(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FNamedButton                                _showHelp;                                                 // 0x0300(0x0018) (Edit, NativeAccessSpecifierPrivate)
	TArray<class UDBDMenuPlayer*>                      _characters;                                               // 0x0318(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uactor*                                      _lighting;                                                 // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PNA9[0x8];                                     // 0x0330(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterTool");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterToolPlayMode
// 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
class UCharacterToolPlayMode : public UCharacterTool
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterToolPlayMode");
		return ptr;
	}



	TArray<class UanimInstance*> GetAnimationInstances();
};

// Class DeadByDaylight.CharacterXPManager
// 0x00E0 (FullSize[0x0110] - InheritedSize[0x0030])
class UCharacterXPManager : public UObject
{
public:
	unsigned char                                      UnknownData_0EN3[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CCEE[0xC0];                                    // 0x0050(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharacterXPManager");
		return ptr;
	}



};

// Class DeadByDaylight.chargeableComponent
// 0x01D8 (FullSize[0x0290] - InheritedSize[0x00B8])
class UchargeableComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnInteractionEmptiedEvent;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FZ6B[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    SkillCheckResponseAestheticDelegate;                       // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SkillCheckResponseAuthorityDelegate;                       // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ChargeAppliedAuthorityDelegate;                            // 0x00F8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ChargeableCompletionPercentChangeAuthorityDelegate;        // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ChargeableCompletionPercentChangeCosmeticDelegate;         // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    DechargeBeginDelegate;                                     // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    DechargeEndDelegate;                                       // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               AllowSkillChecksAtFullCharge;                              // 0x0148(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NNF0[0x7];                                     // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ChargeableComponentID;                                     // 0x0150(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DechargeDelay;                                             // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AA27[0x4];                                     // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSpeedBasedNetSyncedValue                   _currentCharge;                                            // 0x0168(0x0038) (Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MG03[0x8];                                     // 0x01A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTimer                                   _skillCheckFailurePenaltyTimer;                            // 0x01A8(0x0028) (Transient, NativeAccessSpecifierPrivate)
	struct FDBDTimer                                   _dechargeTimer;                                            // 0x01D0(0x0028) (Transient, NativeAccessSpecifierPrivate)
	TArray<struct FChargeData>                         _chargesThisFrame;                                         // 0x01F8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class Uactor*>                              _instigatorsSinceEmpty;                                    // 0x0208(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FName, float>                          _tunableValueMap;                                          // 0x0218(0x0050) (Transient, NativeAccessSpecifierPrivate)
	bool                                               _isCharging;                                               // 0x0268(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X9NC[0x7];                                     // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        _playersWhoDidSkillCheck;                                  // 0x0270(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _startingChargePercent;                                    // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _dechargeRate;                                             // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDecharging;                                             // 0x0288(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stopDechargingWhenComplete;                               // 0x0289(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FEA0[0x6];                                     // 0x028A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.chargeableComponent");
		return ptr;
	}



	void SetSecondsToCharge(float secondsToCharge);
	void SetDechargeRate(float dechargeRate);
	void reset();
	void OnRep_CurrentCharge();
	void OnCurrentChargeChanged(float Value);
	void Multicast_OnEmptied();
	void Multicast_OnCompleteChanged(bool Completed);
	bool IsSkillCheckTimePenaltyActive();
	bool IsChargeComplete();
	void IncreaseMaxChargeAdditive(float secondsToAdd);
	void IncreaseMaxCharge(float Percent);
	bool HasPlayerDoneSkillCheck(int playerId);
	float GetTunableValue(const struct FName& TunableValueID);
	float GetPlayerCountPenaltyModifier(int playerCount);
	float GetPercentComplete();
	float GetMaxCharge();
	float GetCurrentCharge();
	float GetChargeRemaining();
	void AddChargePercent(float chargePercent, class Uactor* instigator);
	void AddCharge(float chargeAmount, class Uactor* instigator, bool bypassSkillCheckFail);
};

// Class DeadByDaylight.ChargeableProgressProviderComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UChargeableProgressProviderComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_WKCI[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChargeableProgressProviderComponent");
		return ptr;
	}



};

// Class DeadByDaylight.ChargedAttackStateComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UChargedAttackStateComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_FP1J[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChargedAttackStateComponent");
		return ptr;
	}



	void SetIsCharging(bool isCharging);
	void SetChargingPercent(float chargePercent);
	bool GetIsCharging();
	float GetChargingPercent();
};

// Class DeadByDaylight.ChargerComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UChargerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_8DCX[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ChargerComponentID;                                        // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChargeStateChange;                                       // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChargePercentChange;                                     // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GR59[0x18];                                    // 0x00F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EEnergyTypeEnum                     EnergyType;                                                // 0x0108(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I8JX[0x3];                                     // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _currentEnergyLevel;                                       // 0x010C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEnergyLevel;                                           // 0x0110(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HWGC[0x4];                                     // 0x0114(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChargerComponent");
		return ptr;
	}



	void UseEnergy(float seconds, float energyUseModifier);
	void SetNormalizedEnergyLevel(float energyLevel);
	void SetMaxEnergyLevel(float energyLevel);
	void SetEnergyLevel(float energyLevel);
	void reset();
	void OnRep_EnergyLevel(float previousEnergyLevel);
	bool HasCharge();
	float GetNormalizedEnergyLevel();
	float GetMaxEnergyLevel();
	float GetEnergyLevel();
};

// Class DeadByDaylight.Charm
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class UCharm : public Uactor
{
public:
	unsigned char                                      UnknownData_ZKKB[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UskeletalMeshComponent*                      _skeletalMeshComponent;                                    // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZG2V[0x8];                                     // 0x0240(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Charm");
		return ptr;
	}



	void BeginDestroySequence_Internal();
};

// Class DeadByDaylight.CharmAttachable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharmAttachable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharmAttachable");
		return ptr;
	}



};

// Class DeadByDaylight.CharmAttacher
// 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
class UCharmAttacher : public Uactor
{
public:
	struct FScriptMulticastDelegate                    OnAttachedOnActor;                                         // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharmAnimationTagsChanged;                               // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UskeletalMeshComponent*                      _chain;                                                    // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharm*                                      _attachedCharm;                                            // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharmAttacher");
		return ptr;
	}



	class UskeletalMeshComponent* GetSkeletalMeshComponentAttachedOn();
	class UCharm* GetAttachedCharm();
	struct FCharmAttacherAnimationTweak GetAnimationTweak();
	class Uactor* GetActorAttachedOn();
	void DispatchOnCharmAnimationTagsChanged();
	void BindOnCharmAnimationTagsChanged();
};

// Class DeadByDaylight.CharmSpawnerComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UCharmSpawnerComponent : public UactorComponent
{
public:
	struct FName                                       SocketRootName;                                            // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_76D1[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCharmSlot>                          CharmSlots;                                                // 0x00C8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fvector                                     ScaleCharm;                                                // 0x00D8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OCEL[0x4];                                     // 0x00E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CharmSpawnerComponent");
		return ptr;
	}



};

// Class DeadByDaylight.ChaseComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UChaseComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnChaseStarted;                                            // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChaseEnded;                                              // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAllChaseEnded;                                           // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTagStateBool                               _isInChase;                                                // 0x00E8(0x0030) (Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChaseComponent");
		return ptr;
	}



	void OnRep_IsInChase();
	bool IsInChase();
};

// Class DeadByDaylight.ChaseeCharacterComponent
// 0x0060 (FullSize[0x0178] - InheritedSize[0x0118])
class UChaseeCharacterComponent : public UChaseComponent
{
public:
	unsigned char                                      UnknownData_MXPZ[0x60];                                    // 0x0118(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChaseeCharacterComponent");
		return ptr;
	}



	void Authority_OnLevelReadyToPlay();
	void Authority_OnGeneratorPercentChanged(class UchargeableComponent* chargeableComponent, float percentCompletionChange, float totalPercentComplete);
};

// Class DeadByDaylight.ChaserCharacterComponent
// 0x00D8 (FullSize[0x01F0] - InheritedSize[0x0118])
class UChaserCharacterComponent : public UChaseComponent
{
public:
	unsigned char                                      UnknownData_91MX[0x10];                                    // 0x0118(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDPawnSensingComponent*                    _camperSensor;                                             // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UdbdPlayer*, struct FchaseUpdateInfo>   _chaseUpdateInfo;                                          // 0x0130(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _chasedPlayers;                                            // 0x0180(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _authority_survivorsWhoStunnedKillerByPalletDuringChase;   // 0x0190(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ET22[0x30];                                    // 0x01A0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _preventChaseTags;                                         // 0x01D0(0x0020) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChaserCharacterComponent");
		return ptr;
	}



	void OnKillerLocallyObservedChanged(bool locallyObserved);
	void Multicast_OnChaseStart(class UcamperPlayer* Survivor);
	void Multicast_OnChaseEnd(class UcamperPlayer* Survivor, const struct FchaseUpdateInfo& chaseUpdateInfo);
	void Multicast_OnAllChaseEnd();
	void Authority_OnChaseTargetFound(class Upawn* pawn);
};

// Class DeadByDaylight.ChatManager
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class UChatManager : public Uactor
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QJY7[0x18];                                    // 0x0238(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChatManager");
		return ptr;
	}



	void Multicast_DisplayMessage(int playerIndex, const struct FString& playerName, const struct FString& mirrorsId, const struct FString& msg);
};

// Class DeadByDaylight.CheatUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCheatUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CheatUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.ChunkingManager
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UChunkingManager : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6M3T[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChunkingManager");
		return ptr;
	}



};

// Class DeadByDaylight.CinematicManager
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UCinematicManager : public UObject
{
public:
	unsigned char                                      UnknownData_4HEG[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct Fcinematic>                          _cinematicQueue;                                           // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CinematicManager");
		return ptr;
	}



	void PlaySingle(const struct Fcinematic& cinematic);
	void PlayMultiple(TArray<struct Fcinematic> cinematics);
	bool HasCinematicToPlay();
	struct Fcinematic GetNextCinematicToPlay();
	void CancelAllCinematicToPlay();
};

// Class DeadByDaylight.CinematicScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UCinematicScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CinematicScreen");
		return ptr;
	}



};

// Class DeadByDaylight.ClientStartupInitializerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UClientStartupInitializerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ClientStartupInitializerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.ClipManager
// 0x0118 (FullSize[0x0348] - InheritedSize[0x0230])
class UClipManager : public Uactor
{
public:
	TArray<class UDBDClipRegionComponent*>             _clippingZones;                                            // 0x0230(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _meshComponents[0x50];                                     // 0x0240(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FMaterialOriginalState>              _dissolvedMeshes;                                          // 0x0290(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UmaterialInterface*, class UmaterialInterface*> _normal2dissolve;                                          // 0x02A0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<class UmaterialInterface*, class UmaterialInterface*> _dissolve2normal;                                          // 0x02F0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UDataTable*                                  _sphericalDissolveMaterials;                               // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ClipManager");
		return ptr;
	}



	void SphericalDissolveAt(const struct Fvector& location, float radius);
	void RemoveDissolveMaterials();
};

// Class DeadByDaylight.CollectableCollection
// 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
class UCollectableCollection : public UactorComponent
{
public:
	TArray<class Ucollectable*>                        _collectables;                                             // 0x00B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AZ6M[0x38];                                    // 0x00C8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CollectableCollection");
		return ptr;
	}



};

// Class DeadByDaylight.CombinedPartyFriendFacade
// 0x0138 (FullSize[0x0168] - InheritedSize[0x0030])
class UCombinedPartyFriendFacade : public UObject
{
public:
	unsigned char                                      UnknownData_VLKR[0x138];                                   // 0x0030(0x0138) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CombinedPartyFriendFacade");
		return ptr;
	}



};

// Class DeadByDaylight.CombinedSpecialEventDataUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCombinedSpecialEventDataUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CombinedSpecialEventDataUtilities");
		return ptr;
	}



	struct FName STATIC_GetSpecialMusicState(const struct FCombinedSpecialEventData& data);
	struct Fcolor STATIC_GetObjectOutlineColour(const struct FCombinedSpecialEventData& data);
};

// Class DeadByDaylight.ConsentManager
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UConsentManager : public UObject
{
public:
	unsigned char                                      UnknownData_CL8V[0x70];                                    // 0x0030(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ConsentManager");
		return ptr;
	}



};

// Class DeadByDaylight.ContentScheduleManager
// 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
class UContentScheduleManager : public UObject
{
public:
	unsigned char                                      UnknownData_VRZZ[0x108];                                   // 0x0030(0x0108) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectLibrary*                              _availableMapLibrary;                                      // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ContentScheduleManager");
		return ptr;
	}



};

// Class DeadByDaylight.ContextualQuestComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UContextualQuestComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_6I62[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSpecialBehaviourObjectsInfo>        _specialBehaviourObjectsInfo;                              // 0x00E0(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInitialized;                                            // 0x00F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0E5T[0x7];                                     // 0x00F1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ContextualQuestComponent");
		return ptr;
	}



	void OnSpecialBehaviourSet__DelegateSignature(class UdbdPlayer* dbdPlayer);
	void OnRep_SpecialBehaviourObjectsInfo();
};

// Class DeadByDaylight.ControllerPairingManager
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UControllerPairingManager : public UObject
{
public:
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MAHX[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ControllerPairingManager");
		return ptr;
	}



};

// Class DeadByDaylight.CooldownTimerPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CooldownTimerPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.CoreCursor
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UCoreCursor : public UUserWidget
{
public:
	class UScaleBox*                                   CursorScaleBox;                                            // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CoreCursor");
		return ptr;
	}



};

// Class DeadByDaylight.CoreHudRootWidget
// 0x0118 (FullSize[0x0378] - InheritedSize[0x0260])
class UCoreHudRootWidget : public UUserWidget
{
public:
	class UOverlay*                                    WidgetContainer;                                           // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                                    OuterContainer;                                            // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                                    SpectateContainer;                                         // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScaleBox*                                   ScaleHud;                                                  // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnfocusedOpacity;                                          // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PRPF[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 Test4kDpiScalingCurve;                                     // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Test4kDpiCurveClass;                                       // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 Test4kDpiCurveWidget;                                      // 0x0298(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EndGameCollapseBarWidgetClass;                             // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      EquippedItemWidgetClass;                                   // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      EquippedPowerWidgetClass;                                  // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ExternalEffectsWidgetClass;                                // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      HudAlertWidgetClass;                                       // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      HudObjectiveWidgetClass;                                   // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      InteractionProgressWidgetClass;                            // 0x02D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      InteractionPromptsContainerWidgetClass;                    // 0x02D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ItemInteractionWidgetClass;                                // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      LeaningArrowsWidgetClass;                                  // 0x02E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      MatchResultWidgetClass;                                    // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      OfferingInteractionWidgetClass;                            // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      PerksContainerWidgetClass;                                 // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      PingStatusWidgetClass;                                     // 0x0308(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      PlayerStatusesWidgetClass;                                 // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ScreenIndicatorWidgetClass;                                // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      SpectateBarWidgetClass;                                    // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      StartSequenceWidgetClass;                                  // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      StatusEffectWidgetClass;                                   // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TestBuildFlagWidgetClass;                                  // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TutorialMysteryNoteWidgetClass;                            // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TutorialObjectivesWidgetClass;                             // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TutorialPopupWidgetClass;                                  // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UCoreBaseViewInterface>> _coreBaseViewInterfaces;                                   // 0x0358(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    HUDWidgetsFadeOutCompletedDelegate;                        // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CoreHudRootWidget");
		return ptr;
	}



	void SetWidgetsVisibility(bool Visible);
	void SetSpectateVisibility(bool Visible);
	void FadeOutWidgets();
	void FadeInWidgets();
};

// Class DeadByDaylight.CreditsScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UCreditsScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CreditsScreen");
		return ptr;
	}



	void SetCreditsHtml(const struct FString& CreditsHtml);
	void ScrollCreditsScreen(float scrollAmount);
};

// Class DeadByDaylight.CrossPlatformManager
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UCrossPlatformManager : public UObject
{
public:
	bool                                               _crossPlayAllowedByPlatform;                               // 0x0030(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _crossPlayAllowedByKraken;                                 // 0x0031(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8MKJ[0x6];                                     // 0x0032(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CrossPlatformManager");
		return ptr;
	}



};

// Class DeadByDaylight.GeneratorDrivenActor
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class UGeneratorDrivenActor : public Uactor
{
public:
	TArray<bool>                                       _activated;                                                // 0x0230(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class Ugenerator*>                          _generators;                                               // 0x0240(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GeneratorDrivenActor");
		return ptr;
	}



	void SetSpawnedObject(class Ugenerator* generator, int GeneratorId);
	void OnInitGeneratorDrivenActor(class Ugenerator* generator, int GeneratorId);
	void OnGeneratorRepairedEvent6(bool isAutoCompleted);
	void OnGeneratorRepairedEvent5(bool isAutoCompleted);
	void OnGeneratorRepairedEvent4(bool isAutoCompleted);
	void OnGeneratorRepairedEvent3(bool isAutoCompleted);
	void OnGeneratorRepairedEvent2(bool isAutoCompleted);
	void OnGeneratorRepairedEvent1(bool isAutoCompleted);
	void OnGeneratorRepairedEvent0(bool isAutoCompleted);
	void OnGeneratorRepairedBySurvivorEvent6(class UdbdPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent5(class UdbdPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent4(class UdbdPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent3(class UdbdPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent2(class UdbdPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent1(class UdbdPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent0(class UdbdPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivor(class UdbdPlayer* repairingSurvivor, int GeneratorId);
	void OnActivateGeneratorDrivenActor(bool isAutoCompleted, int GeneratorId);
	void Multicast_GeneratorRepairedBySurvivor(class UdbdPlayer* repairingSurvivor, int GeneratorId);
	void Multicast_ActivationChecked(bool Activated, bool isAutoCompleted, int GeneratorId);
	bool IsValidGeneratorId(int GeneratorId);
	bool isActivated(int GeneratorId);
	struct FRandomStream GetSharedTileRandomizer();
	void Authority_CheckGeneratorRepairedBySurvivor(class UdbdPlayer* repairingSurvivor, int GeneratorId);
	void Authority_CheckActivation(bool isAutoCompleted, int GeneratorId);
};

// Class DeadByDaylight.CrowBomb
// 0x0098 (FullSize[0x02E8] - InheritedSize[0x0250])
class UCrowBomb : public UGeneratorDrivenActor
{
public:
	float                                              _innerRadius;                                              // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _outerRadius;                                              // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxTakeoffDelay;                                          // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numCrows;                                                 // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _crowCenterDistance;                                       // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _crowOuterDistance;                                        // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _eliminationSamples;                                       // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _eliminationStddev;                                        // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _meshComponentClass[0x30];                                 // 0x0270(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UWorldRunawayMeshComponent*>          _crows;                                                    // 0x02A0(0x0010) (ExportObject, Net, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X3UN[0x18];                                    // 0x02B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _root;                                                     // 0x02C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _traceStart;                                               // 0x02D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _traceEnd;                                                 // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _landed;                                                   // 0x02E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GT17[0x7];                                     // 0x02E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CrowBomb");
		return ptr;
	}



	void TriggerTakeOff(const struct Fvector& triggerLocation);
	void TriggerLand();
};

// Class DeadByDaylight.CrowdChoiceTugOfWarPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UCrowdChoiceTugOfWarPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CrowdChoiceTugOfWarPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.CurrencyDisplayable
// 0x0060 (FullSize[0x0290] - InheritedSize[0x0230])
class UCurrencyDisplayable : public Uactor
{
public:
	unsigned char                                      UnknownData_3YC1[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UskeletalMeshComponent*                      skeletalMeshComponent;                                     // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<DeadByDaylight_ECurrencyType, class USkeletalMesh*> _currencyMeshes;                                           // 0x0240(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CurrencyDisplayable");
		return ptr;
	}



	void FinishSpawningCurrency(DeadByDaylight_ECurrencyType currencyType);
	void BeginDestroySequence_Internal();
};

// Class DeadByDaylight.CurveFloatNetIdSubsystem
// 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
class UCurveFloatNetIdSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_2QXP[0x60];                                    // 0x0038(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CurveFloatNetIdSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.CustomizationDescription
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UCustomizationDescription : public UDataAsset
{
public:
	TArray<struct FCustomizedMeshPart>                 Parts;                                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CustomizationDescription");
		return ptr;
	}



};

// Class DeadByDaylight.CustomizationHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCustomizationHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CustomizationHelper");
		return ptr;
	}



};

// Class DeadByDaylight.CustomizedAnimationComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UCustomizedAnimationComponent : public UactorComponent
{
public:
	class UDBDBasePlayer*                              _owner;                                                    // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomizedSkeletalMesh*                     _customizedSkeletalMesh;                                   // 0x00C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _defaultAnimClass;                                         // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M1Q8[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CustomizedAnimationComponent");
		return ptr;
	}



	void OnCustomizationChanged();
};

// Class DeadByDaylight.CustomizedAudioComponent
// 0x0130 (FullSize[0x01E8] - InheritedSize[0x00B8])
class UCustomizedAudioComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnCustomizedAudioSwitchStateChanged;                       // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QMCS[0xA0];                                    // 0x00C8(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     AudioCharacterNameDefaultSwitchState;                      // 0x0168(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterSubNameDefaultSwitchState;                   // 0x0178(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterHeadDefaultSwitchState;                      // 0x0188(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterClothesDefaultSwitchState;                   // 0x0198(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterShoesDefaultSwitchState;                     // 0x01A8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterWeaponDefaultSwitchState;                    // 0x01B8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterAmbianceDefaultSwitchState;                  // 0x01C8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterStateDefaultSwitchState;                     // 0x01D8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CustomizedAudioComponent");
		return ptr;
	}



	struct FString GetAudioSwitchState(DeadByDaylight_EAudioCustomizationCategory audioCustomizationCategory);
};

// Class DeadByDaylight.CustomizedSkeletalMesh
// 0x0158 (FullSize[0x0210] - InheritedSize[0x00B8])
class UCustomizedSkeletalMesh : public UactorComponent
{
public:
	class UClass*                                      SlaveAnimInstanceClass;                                    // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeshSwitchBP;                                            // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KL1Q[0x18];                                    // 0x00D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UskeletalMeshComponent*>              Components;                                                // 0x00E8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UskeletalMeshComponent*>              Slaves;                                                    // 0x00F8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<DeadByDaylight_ECustomizationCategory, class UItemVfx*> _itemVfxs;                                                 // 0x0108(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U599[0xA8];                                    // 0x0158(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkinnedMeshComponent*                       _meshOwner;                                                // 0x0200(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _characterIdOverride;                                      // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XQ2J[0x4];                                     // 0x020C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CustomizedSkeletalMesh");
		return ptr;
	}



	void SetVfxsVisibility(DeadByDaylight_ECustomizationCategory category, bool Visible);
	void SetMeshVisibility(bool Visible);
	void SetMeshOwner(class USkinnedMeshComponent* mesh);
	void SetCastShadow(bool castShadow);
	void SetAllVfxsVisibility(bool Visible);
	void OnMeshSwitchEventBP__DelegateSignature(DeadByDaylight_ECustomizationCategory category, class UskeletalMeshComponent* mesh);
	class UskeletalMeshComponent* GetSkeletalMesh(DeadByDaylight_ECustomizationCategory category);
	class USkinnedMeshComponent* GetMeshOwner();
	TArray<struct FName> GetCurrentCustomizationItems();
	TArray<class UskeletalMeshComponent*> GetComponents();
	void CopyCustomization(class UCustomizedSkeletalMesh* copyFrom);
	bool Contains(TArray<struct FName> itemIds);
	void ClearAllVfxs();
};

// Class DeadByDaylight.DailyRitualsScreen
// 0x0060 (FullSize[0x0180] - InheritedSize[0x0120])
class UDailyRitualsScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_Q2WJ[0x60];                                    // 0x0120(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DailyRitualsScreen");
		return ptr;
	}



	void OnRemoveRitual(const struct FString& Id);
	void OnClosed();
	void OnClaimRitual(const struct FString& Id);
	void OnClaimAllRituals();
};

// Class DeadByDaylight.DBD_CrossDissolver
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UDBD_CrossDissolver : public UactorComponent
{
public:
	TArray<class UmaterialInterface*>                  NewMaterials;                                              // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UskeletalMeshComponent*>              BaseSkeletalMesh;                                          // 0x00C8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UskeletalMeshComponent*>              ClonedSkeletalMeshes;                                      // 0x00D8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBD_CrossDissolver");
		return ptr;
	}



	void MakeClone();
	void KillClone();
};

// Class DeadByDaylight.DBD_SoundClipUtil
// 0x00C0 (FullSize[0x0178] - InheritedSize[0x00B8])
class UDBD_SoundClipUtil : public UactorComponent
{
public:
	TArray<struct FMapMeshToAkAudioEvent>              AudioMap;                                                  // 0x00B8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FMapMeshToAkAudioEvent>  _audioEventMap;                                            // 0x00C8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMapSoundsToAvoid>                   _objectsWhoHavePlayedASound;                               // 0x0118(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UAkAudioEvent*, float>                  _nextSoundPlayTime;                                        // 0x0128(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBD_SoundClipUtil");
		return ptr;
	}



	void OnGotMeshToTriggerSound(class UStaticMeshComponent* usm);
	void OnCharacterEnterSoundRegion(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
	class UAkAudioEvent* GetAudioEventForMesh(class UStaticMeshComponent* usm);
};

// Class DeadByDaylight.DBD_SoundEventSpawner
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class UDBD_SoundEventSpawner : public Uactor
{
public:
	TArray<struct FDBD_SoundSpawnerData>               AtlantaSoundDescriptor;                                    // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDBD_SoundSpawnerData>               SoundDescriptor;                                           // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IM58[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _loadedSoundAssets;                                        // 0x0258(0x0010) (ZeroConstructor, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBD_SoundEventSpawner");
		return ptr;
	}



	void OnLoudNoiseTriggered(class Uactor* originator, class Uactor* instigatingActor, const struct Fvector& location, bool shouldTrack, float* audibleRange, bool isQuickAction);
	void AssetsLoaded();
};

// Class DeadByDaylight.DBDAggregateCullDistanceVolumes
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UDBDAggregateCullDistanceVolumes : public Uactor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAggregateCullDistanceVolumes");
		return ptr;
	}



	void SpawnCullDistanceVolumes();
};

// Class DeadByDaylight.DBDAggregateParticleSystemComponent
// 0x0064 (FullSize[0x0710] - InheritedSize[0x06AC])
class UDBDAggregateParticleSystemComponent : public UParticleSystemComponent
{
public:
	float                                              EndFadeDistance;                                           // 0x06AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LocatorComponentCache[0x50];                               // 0x06B0(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               PendingReset;                                              // 0x0700(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Q55O[0xF];                                     // 0x0701(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAggregateParticleSystemComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAggregateParticleManager
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UDBDAggregateParticleManager : public Uactor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAggregateParticleManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDLocatorComponent
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UDBDLocatorComponent : public USceneComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDLocatorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAggregateParticleLocatorComponent
// 0x0010 (FullSize[0x0220] - InheritedSize[0x0210])
class UDBDAggregateParticleLocatorComponent : public UDBDLocatorComponent
{
public:
	class UparticleSystem*                             Template;                                                  // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    _particleComponent;                                        // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAggregateParticleLocatorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAIPlayerController
// 0x0010 (FullSize[0x0350] - InheritedSize[0x0340])
class UDBDAIPlayerController : public UaiController
{
public:
	TArray<class UAICharacterBehaviour*>               _currentBehaviours;                                        // 0x0340(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAIPlayerController");
		return ptr;
	}



	void StartCharacterBehaviour(class UClass* behaviourClass, class UAICharacterBehaviourData* characterBehaviourData);
	void SetCharacterMovement(DeadByDaylight_ECharacterMovementTypes movementTypes);
	void PauseCharacterBehaviour(class UClass* behaviourClass);
	void MovePlayerToActor(class Uactor* goal, float acceptanceRadius);
	void InteractRequest();
	void FastInteractRequest();
	void AttackRequest();
};

// Class DeadByDaylight.DBDAITypes
// 0x0180 (FullSize[0x01B0] - InheritedSize[0x0030])
class UDBDAITypes : public UObject
{
public:
	struct FgameplayTag                                AISkills_Context_Service_Root;                             // 0x0030(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Task_Slasher_AttackTarget;                // 0x003C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Slasher_AttackTarget;             // 0x0048(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Task_Slasher_CrawlingTarget;              // 0x0054(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Slasher_CrawlingTarget;           // 0x0060(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Slasher_Investigate_NotInChase;   // 0x006C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Slasher_Investigate_InChase;      // 0x0078(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Slasher_Investigate_MoveAround;   // 0x0084(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Slasher_Patrol;                   // 0x0090(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Slasher_Patrol_MoveAround;        // 0x009C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_Standing;                  // 0x00A8(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_Flee_Run_InChase;          // 0x00B4(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_Flee_Run_NotInChase;       // 0x00C0(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_Patrol;                    // 0x00CC(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_RescueCarriedFriend;       // 0x00D8(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_RemoveTrap;                // 0x00E4(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_Chained;                   // 0x00F0(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_HelpOther;                 // 0x00FC(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AISkills_Context_Service_Camper_GoalInTerror;              // 0x0108(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AIBlackboard_InteractableWishList_FindSkill;               // 0x0114(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PointOfInterest_ActivatedDoor;                          // 0x0120(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PointOfInterest_ActivatedDoor_Opened;                   // 0x012C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PointOfInterest_BrokenGenerator;                        // 0x0138(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PointOfInterest_OccupiedMeatHook;                       // 0x0144(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PointOfInterest_HexTotem;                               // 0x0150(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PinLocation_WarpStart;                                  // 0x015C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PinLocation_WarpEnd;                                    // 0x0168(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PinLocation_EQS;                                        // 0x0174(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PinLocation_WishedObj;                                  // 0x0180(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PinLocation_GoTo;                                       // 0x018C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PinObject_EQS;                                          // 0x0198(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FgameplayTag                                AI_PinObject_WishedObj;                                    // 0x01A4(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAITypes");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAnalytics
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDAnalytics : public UBHVRAnalytics
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAnalytics");
		return ptr;
	}



	void STATIC_RecordGameProgress(const struct FString& InProgressType);
};

// Class DeadByDaylight.DBDAtlantaBloodwebDefinition
// 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
class UDBDAtlantaBloodwebDefinition : public UObject
{
public:
	unsigned char                                      UnknownData_0D3Y[0x110];                                   // 0x0030(0x0110) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAtlantaBloodwebDefinition");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAtlantaDesignTunables
// 0x0698 (FullSize[0x06C8] - InheritedSize[0x0030])
class UDBDAtlantaDesignTunables : public UObject
{
public:
	unsigned char                                      AtlantaStructuredDataClass[0x30];                          // 0x0030(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDAtlantaStructuredData*                   AtlantaStructuredData;                                     // 0x0060(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CloseNoiseIndicatorTemplate[0x30];                         // 0x0068(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ExitOpenedIndicatorTemplate[0x30];                         // 0x0098(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      GeneratorIndicatorTemplate[0x30];                          // 0x00C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      HookedIndicatorTemplate[0x30];                             // 0x00F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      KillerCuesIndicatorTemplate[0x30];                         // 0x0128(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      LoudNoiseIndicatorTemplate[0x30];                          // 0x0158(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SafeZoneManagerTemplate[0x30];                             // 0x0188(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGRoleSelectionScreenClass[0x30];                         // 0x01B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaTutorialScreenClass[0x30];                       // 0x01E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGNavigationScreenClass[0x30];                            // 0x0218(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGInboxScreenClass[0x30];                                 // 0x0248(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SharedAuthenticationComponent[0x30];                       // 0x0278(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGPanelScreenClass[0x30];                                 // 0x02A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLobbyScreenClass[0x30];                                 // 0x02D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      AtlantaChaseVignetteStaticMesh[0x30];                      // 0x0308(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AtlantaChaseVignetteMaterialInstance[0x30];                // 0x0338(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UMGGenericPopupClass[0x30];                                // 0x0368(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLevelUpPopupClass[0x30];                                // 0x0398(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGTutorialPopupClass[0x30];                               // 0x03C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGTallyScreenClass[0x30];                                 // 0x03F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLoadingScreenWidgetClass[0x30];                         // 0x0428(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGSplashScreenClass[0x30];                                // 0x0458(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGCommandDebugButtonClass[0x30];                          // 0x0488(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaObjectiveClass[0x30];                            // 0x04B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGStoreScreenClass[0x30];                                 // 0x04E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGCustomizationScreenClass[0x30];                         // 0x0518(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGOverlayMenuScreenClass[0x30];                           // 0x0548(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGPerkSelectionPopupClass[0x30];                          // 0x0578(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGBloodStoreMysteryBoxPopupClass[0x30];                   // 0x05A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGRitualScreenClass[0x30];                                // 0x05D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLoadingWidgetClass[0x30];                               // 0x0608(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaFriendListScreen[0x30];                          // 0x0638(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGToastNotificationScreenClass[0x30];                     // 0x0668(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaLegalMenuScreenClass[0x30];                      // 0x0698(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAtlantaDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBaseInputHandler
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UDBDBaseInputHandler : public UObject
{
public:
	class Upawn*                                       _pawn;                                                     // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                         _cameraBoom;                                               // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HC1P[0x98];                                    // 0x0040(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDBaseInputHandler");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAtlantaInputHandler
// 0x0050 (FullSize[0x0128] - InheritedSize[0x00D8])
class UDBDAtlantaInputHandler : public UDBDBaseInputHandler
{
public:
	unsigned char                                      UnknownData_1O45[0x50];                                    // 0x00D8(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAtlantaInputHandler");
		return ptr;
	}



	void SetVirtualJoystickCenter(int controlIndex, const struct FVector2D& controlCenter);
	struct FVector2D GetVirtualJoystickVisualSize(int controlIndex);
	struct FVector2D GetVirtualJoystickVisualCenter(int controlIndex);
	struct FVector2D GetVirtualJoystickPosition(int controlIndex);
	struct FVector2D GetVirtualJoystickNormalizedOffset(int controlIndex);
};

// Class DeadByDaylight.DBDAtlantaStructuredData
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UDBDAtlantaStructuredData : public UObject
{
public:
	unsigned char                                      AtlantaHeartbeatActor[0x30];                               // 0x0030(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAtlantaStructuredData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackerComponent
// 0x00D0 (FullSize[0x0188] - InheritedSize[0x00B8])
class UDBDAttackerComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAttackStartDelegate;                                     // 0x00B8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAttackFinishDelegate;                                    // 0x00C8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UOGH[0x28];                                    // 0x00D8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDBDAttack*>                          _attacks;                                                  // 0x0100(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DJGX[0x10];                                    // 0x0110(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDAttack*                                  _requestedAttack;                                          // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAttack*                                  _currentAttack;                                            // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XQ5K[0x48];                                    // 0x0130(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAttackDelegatePair>                 _attackHitDelegates;                                       // 0x0178(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackerComponent");
		return ptr;
	}



	void Server_StoreAttack(DBDSharedTypes_EAttackType AttackType);
	void OnAttackPhaseChangedDelegate__DelegateSignature(DBDSharedTypes_EAttackType AttackType);
	void Multicast_StoreAttack(DBDSharedTypes_EAttackType AttackType);
	void Local_RequestAttack(DBDSharedTypes_EAttackType AttackType);
	bool IsAttackTransitionRequested(DBDSharedTypes_EAttackType AttackType);
	bool IsAttacking();
	bool IsAnyAttackTransitionRequested();
};

// Class DeadByDaylight.DBDAttackUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDAttackUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAttackUtilities");
		return ptr;
	}



	DBDSharedTypes_EAttackType STATIC_GetCurrentAttackType(class Uactor* attacker);
	float STATIC_GetCurrentAttackSubstateRemainingTime(class Uactor* attacker);
};

// Class DeadByDaylight.DBDAudioUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDAudioUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAudioUtilities");
		return ptr;
	}



	void STATIC_DBD_PostUiEvent(class UAkAudioEvent* event);
	class UObject* STATIC_DBD_LoadPersistentBankByAssetPtr();
	void STATIC_DBD_LoadPersistentBankAsync(class UAkAudioBank* bank);
	void STATIC_DBD_LoadPersistentBank(class UAkAudioBank* bank);
};

// Class DeadByDaylight.DBDAuthentication
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UDBDAuthentication : public UObject
{
public:
	TArray<struct FAuthenticationInfo>                 _localInfos;                                               // 0x0030(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAuthenticationInfo>                 _remoteInfos;                                              // 0x0040(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDAuthentication");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBaseGameMode
// 0x0030 (FullSize[0x0358] - InheritedSize[0x0328])
class UDBDBaseGameMode : public UGameMode
{
public:
	struct FDataTableDropdown                          DebugSpecialEvent;                                         // 0x0328(0x0030) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDBaseGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBaseHud
// 0x0010 (FullSize[0x0330] - InheritedSize[0x0320])
class UDBDBaseHud : public UHud
{
public:
	class UFont*                                       _debugFont;                                                // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8C4R[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDBaseHud");
		return ptr;
	}



	void ShowAnimHudBP();
	void ShowAnimHud(bool show);
	bool ShouldDrawAnimHud();
};

// Class DeadByDaylight.DBDBaseMatchGameMode
// 0x0018 (FullSize[0x0370] - InheritedSize[0x0358])
class UDBDBaseMatchGameMode : public UDBDBaseGameMode
{
public:
	class UEndGameComponent*                           _endGameComponent;                                         // 0x0358(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEscapeRequirementTracker*                   _escapeRequirementTracker;                                 // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNetworkFenceActor*                          _theFence;                                                 // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDBaseMatchGameMode");
		return ptr;
	}



	class UEndGameComponent* GetEndGameComponent();
};

// Class DeadByDaylight.HISMMaterialHelperSettings
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UHISMMaterialHelperSettings : public UDataAsset
{
public:
	TMap<class UStaticMesh*, class UClass*>            _meshMaterialOverride;                                     // 0x0038(0x0050) (Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HISMMaterialHelperSettings");
		return ptr;
	}



};

// Class DeadByDaylight.BatchDrawing
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UBatchDrawing : public UObject
{
public:
	class Uactor*                                      _actorToSpawnInstancesInto;                                // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UStaticMesh*, struct FPerMeshInstancingData> _meshesToInstancingData;                                   // 0x0038(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UHISMMaterialHelperSettings*                 _hismMaterialHelperSettings;                               // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialPerThemeSettings*                   _materialPerThemeSettings;                                 // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BatchDrawing");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBloodWebDefinition
// 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
class UDBDBloodWebDefinition : public UObject
{
public:
	unsigned char                                      UnknownData_VN6Y[0x110];                                   // 0x0030(0x0110) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDBloodWebDefinition");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBloodwebDefinitionBase
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDBloodwebDefinitionBase : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDBloodwebDefinitionBase");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerData
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UDBDPlayerData : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnItemUseButtonStateChanged;                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1AT7[0x28];                                    // 0x00C8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FYawAndPitchRotator_NetQuantize16           _controlRotation;                                          // 0x00F0(0x000C) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9Q8P[0xC];                                     // 0x00FC(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerData");
		return ptr;
	}



	void SetRenderingFeaturesCompleted();
	void SetLoadoutSpawned();
	void SetIntroCompleted();
	void Server_SetIntroCompleted();
	void Server_SetControlRotation(const struct FRotator& rotation);
	void Server_RenderingFeaturesCompleted();
	void Server_LoadoutSpawned();
	void OnItemUseButtonStateChanged__DelegateSignature(bool isPressed);
	bool IsLoadoutSpawned();
	bool IsIntroCompleted();
	bool GetUseInputPressed();
	bool GetLeftRightInputMashed();
	bool GetInteractionInputMashed();
	struct FRotator GetControlRotation();
	bool DidRenderingFeaturesComplete();
};

// Class DeadByDaylight.DBDCamperData
// 0x0030 (FullSize[0x0138] - InheritedSize[0x0108])
class UDBDCamperData : public UDBDPlayerData
{
public:
	unsigned char                                      UnknownData_WPP6[0x30];                                    // 0x0108(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDCamperData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCharacterMovementUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDCharacterMovementUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDCharacterMovementUtilities");
		return ptr;
	}



	void STATIC_Local_RemoveMaxSpeedMultiplierCurve(class Ucharacter* character, class UCurveFloat* curveToReset);
	void STATIC_Local_AddMaxSpeedMultiplierCurve(class Ucharacter* character, class UCurveFloat* curve, float duration, bool autoReset);
};

// Class DeadByDaylight.DBDCharacterUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDCharacterUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDCharacterUtilities");
		return ptr;
	}



	bool STATIC_IsWilliamBillOverbeck(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheWraith(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheTwins_Sister(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheTwins_Brother(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheTwins(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheTrapper(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheSpirit(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheShape(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsThePig(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheOni(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheNurse(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheNightmare(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheLegion(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheHuntress(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheHillBilly(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheHag(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheGhost(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheExecutioner(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheDoctor(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheDemogorgon(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheClown(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheCannibal(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsTheBlight(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsSteveHarrington(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsSlasherLocallyObserved(class UObject* worldContextObject);
	bool STATIC_IsQuentinSmith(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsPlague(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsNeaKarlsson(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsNancyWheeler(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsMegThomas(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsLaurieStrode(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsKateDenson(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsJeffJohansen(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsJaneRomero(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsJakePark(class UDBDBasePlayer* targetPlayer);
	bool STATIC_isInDreamworld(class UdbdPlayer* player);
	bool STATIC_IsFengMin(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsDwightFairfield(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsDavidTapp(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsDavidKing(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsClaudetteMorel(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsAshleyWilliams(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsAdamFrancis(class UDBDBasePlayer* targetPlayer);
	bool STATIC_IsAceVisconti(class UDBDBasePlayer* targetPlayer);
	DBDSharedTypes_EPlayerRole STATIC_GetLocallyObservedPlayerRole(class UObject* worldContextObject);
};

// Class DeadByDaylight.DBDCheatManager
// 0x0060 (FullSize[0x00E0] - InheritedSize[0x0080])
class UDBDCheatManager : public UCheatManager
{
public:
	class UDBDMarketingCameraController*               DBDMarketingCameraControllerRef;                           // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DBDMarketingCameraControllerClass;                         // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_35YY[0x40];                                    // 0x0090(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVirtualKeyboard*                            _virtualKeyboard;                                          // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IKY2[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDCheatManager");
		return ptr;
	}



	void DBD_WakeUpSurvivor();
	void DBD_VisualizeHookRenderRegions();
	void DBD_ValidateDatabases();
	void DBD_ValidateCustomizationItems(const struct FName& itemName);
	void DBD_UploadAchievements();
	void DBD_UpdateErrorSimulation(const struct FString& moduleName, const struct FString& errorId, bool enabled);
	void DBD_UnloadCharacterAssetLibrary(int CharacterId);
	void DBD_UnloadAllCharacterAssetLibrary();
	void DBD_UnlinkMirrorsIdFromNintendo();
	void DBD_UnlinkMirrorsIdFromFacebook();
	void DBD_UnequipAllCharms();
	void DBD_TryRequestToS3(const struct FString& bucket, const struct FString& internalUrl);
	void DBD_TriggerPerkSelectionPopup(int characterLevelReached, const struct FString& firstPerkName, int firstPerkLevel, bool IsFirstPerkTeachable, const struct FString& optionalSecondPerkName, int optionalSecondPerkLevel, bool isSecondPerkTeachable);
	void DBD_TriggerPerkSelectionByLevelPopup(int characterLevelReached, int CharacterId);
	void DBD_TriggerEndGameScenario();
	void DBD_ToggleProceduralDebugMode();
	void DBD_ToggleMarketingCamera();
	void DBD_ToggleHUDProfiling();
	void DBD_TeleportWithClothHandling(float x, float y, float z);
	void DBD_TeleportToTile(uint32_t x, uint32_t y);
	void DBD_Teleport(float x, float y, float z);
	void DBD_SyncLoadCharacter(int CharacterId);
	void DBD_StopVideoPlayer();
	void DBD_StopLoadCharacterAssetLibrary(int CharacterId);
	void DBD_StartQuickPlay();
	void DBD_StartInjuredBleedout(float duration);
	void DBD_SpectateSurvivor();
	void DBD_SpectateKiller();
	void DBD_SpawnStatusEffect(const struct FName& statusEffectID);
	void DBD_SpawnPerk(const struct FName& perkID, int perkLevel);
	void DBD_SpawnItemInMainMenu(const struct FName& itemId);
	void DBD_SpawnItemAddon(const struct FName& addonID);
	void DBD_SpawnItem(const struct FName& itemId);
	void DBD_SpawnDirectionMarker(float lifeTime, float minVisibleDistance, float maxVisibleDistance);
	void DBD_SpawnCharacter(int CharacterId, bool menuCharacter, const struct FName& outfitId, float x, float y, float z);
	void DBD_SpawnCamperByName(const struct FString& name, int Count, int disableAI);
	void DBD_SpawnCamperByIndex(int index, int Count, int disableAI);
	void DBD_SnapTo(float x, float y, float z, float duration);
	void DBD_SimulateSynchronousFreeze(int miliseconds);
	void DBD_ShutdownRTM();
	void DBD_ShowWebUrl(const struct FString& targetUrl);
	void DBD_ShowVirtualKeyboard(bool show, bool password);
	void DBD_ShowVirtualJoysticks();
	void DBD_ShowStoreUI(const struct FString& productId);
	void DBD_ShowLoadout();
	void DBD_ShowKillerPowerDebugInfo(bool enabled);
	void DBD_ShowGameInstalledPrompt();
	void DBD_ShowErrorPopupAndGoBackToSplashScreen();
	void DBD_ShowErrorPopup();
	void DBD_ShowCharacterSightDebug(bool show);
	void DBD_ShowArchiveQuestsRepetition();
	void DBD_ShopCameraQuit();
	void DBD_ShopCameraMain();
	void DBD_ShopCameraBox();
	void DBD_SetWindowDebugMode(bool debugMode);
	void DBD_SetUserBloodpoints(int points);
	void DBD_SetUseClientMovementPrediction(bool enabled);
	void DBD_SetTrainVersusBotMode(int useTrainVersusBotMode);
	void DBD_SetTotalXp(int totalXp);
	void DBD_SetSurvivorLeftCount(int Count);
	void DBD_SetSurvivorEmblemPoints(const struct FString& emblemId, int points);
	void DBD_SetStoreHitBoxesVisible(bool Value);
	void DBD_SetSingleDetectionZoneActive(bool active);
	void DBD_SetServerCorrectionEnabled(bool enabled);
	void DBD_SetRunVaultEnabled(bool enabled);
	void DBD_SetReverseTraverseEnabled(bool enabled);
	void DBD_SetRandomInputAmplitude(float amplitude);
	void DBD_SetQATest();
	void DBD_SetPlayerLevel(int currentXp, int playerLevel, int prestige);
	void DBD_SetPips(int survivorPips, int killerPips, const struct FString& lastUpdateTime, bool playedMatch);
	void DBD_SetPerchRadiusThreshold(float threshold);
	void DBD_SetPartyPrivacy(const struct FString& privacy);
	void DBD_SetOfferingTriggersVisibility(bool isVisible);
	void DBD_SetObjectiveProgressionForNextGame(const struct FString& objectiveIdStr, int progression);
	void DBD_SetObjectiveProgression(const struct FString& objectiveIdStr, int progression);
	void DBD_SetNumTokensOnPerk(const struct FName& perkID, int numTokens);
	void DBD_SetNewsContentUpdateTimer(float updateInSeconds, bool repeatTimer);
	void DBD_SetMouseLock(bool Locked);
	void DBD_SetMobileHudVisible(bool isVisible);
	void DBD_SetMaxWalkSpeed(float maxWalkSpeed);
	void DBD_SetKillerHeadVisibility(bool Visible);
	void DBD_SetKillerEmblemPoints(const struct FString& emblemId, int points);
	void DBD_SetItemNormalizedEnergyLevel(float normalizedLevel);
	void DBD_SetItemEnergyLevel(float level);
	void DBD_SetHookDrainStage(int hookDrainStage);
	void DBD_SetHighestWeightSeenNews(int Value);
	void DBD_SetHatchetVar(const struct FName& varName, float Value);
	void DBD_SetFriendFavoriteStatus(const struct FString& platformFriendId, bool favoriteStatus);
	void DBD_SetFearMarketUpdateTimer(float updateInSeconds, bool repeatTimer);
	void DBD_SetEthereal(bool enabled);
	void DBD_SetEnableHookSlashableZone(bool enabled);
	void DBD_SetDockedState(bool docked);
	void DBD_SetDebugSnapPoint(bool enabled);
	void DBD_SetDebugPrintAvailableInteractions(bool enabled);
	void DBD_SetDebugFailAllInteractions(bool enabled);
	void DBD_SetDebugCarry(bool enabled);
	void DBD_SetDate(const struct FString& dateString, bool isTicking);
	void DBD_SetCustomizationMesh(const struct FName& itemName);
	void DBD_SetCustomizationCharm(const struct FName& charmId, int8_t slotIndex);
	void DBD_SetCrouch(bool enabled);
	void DBD_SetContinuousPrintState(bool enabled);
	void DBD_SetContinuousPrintDebug(bool enabled);
	void DBD_SetChunkProgress(int chunkProgress);
	void DBD_SetChunkingState(unsigned char chunkState);
	void DBD_SetCheatGameVersion(int major, int minor, int patch);
	void DBD_SetCharacterStat(const struct FName& statName, float Amount);
	void DBD_SetAutoItemInteractEnabled(bool enabled, float pressedDuration, float releasedDuration, float InitialDelay);
	void DBD_SetAutoInteractEnabled(bool enabled, float pressedDuration, float releasedDuration, float InitialDelay);
	void DBD_SetAutoGesture1Enabled(bool enabled, float pressedDuration, float releasedDuration, float InitialDelay);
	void DBD_SetAutoFastInteractEnabled(bool enabled, float pressedDuration, float releasedDuration, float InitialDelay);
	void DBD_SetAuthoritativeMovement(bool enabled);
	void DBD_SetArchiveStoryEditorMode(bool editorMode, const struct FString& csvSavedPath);
	void DBD_SetAllowNavigationInput(bool enabled);
	void DBD_SetAllowNavigation(bool enabled);
	void DBD_SetAIPlayerRankAll(int playerRank);
	void DBD_SetAIPlayerRank(int playerRank);
	void DBD_SetActiveGeneratorCount(int Count);
	void DBD_ServerToggleEdgeObjectDebugMode();
	void DBD_SendPlatformInviteForParty();
	void DBD_SendPartyChatMessage(const struct FString& message);
	void DBD_SendInputToast(int ButtonType);
	void DBD_SelectSpawner(int type);
	void DBD_SelectSlasher(uint32_t slasherIndex);
	void DBD_SelectRandomObsession();
	void DBD_SelectCamper(uint32_t camperIndex);
	void DBD_SearchPlayerName(const struct FString& playerName);
	void DBD_RevokeConsent(const struct FString& consentId);
	void DBD_RevokeAllConsents();
	void DBD_ReverseBearTrap_ForceTimer(bool Force);
	void DBD_ReverseBearTrap_FastForward(float deltaTime);
	void DBD_ReverseBearTrap_Execute();
	void DBD_RetrieveFriendsListFor(const struct FString& mirrorsId, const struct FString& Platform);
	void DBD_ResizeVideoToThumbnail(int sizeX, int sizeY, int positionX, int positionY);
	void DBD_ResizeVideoToFullscreen();
	void DBD_ResistentCamper();
	void DBD_ResetTutorialTips();
	void DBD_ResetSpecialEventSeenCinematics();
	void DBD_ResetSeason();
	void DBD_ResetSaveGame();
	void DBD_ResetPlayerLevelAndXp();
	void DBD_ResetPerkCooldowns();
	void DBD_ResetPallets();
	void DBD_ResetObjectiveProgression(const struct FString& objectiveIdStr);
	void DBD_ResetMeshRelativeOffSet();
	void DBD_ResetIdentityAuthenticationProvider();
	void DBD_ResetHookDrainStage();
	void DBD_ResetGhostStealth();
	void DBD_ResetGameVersion();
	void DBD_ResetFirstTimePlaying();
	void DBD_ResetCloth();
	void DBD_ResetCharacterStat(const struct FName& statName);
	void DBD_ResetCamera();
	void DBD_ResetBloodpoints();
	void DBD_ResetAllCharacterStats();
	void DBD_RequestServerEnsureLogs();
	void DBD_RequestSearchFriendPopup();
	void DBD_RequestJoinParty(const struct FString& playedId);
	void DBD_RequestEndGame();
	void DBD_RemoveSomeStatusEffects();
	void DBD_RemoveReverseBearTrap();
	void DBD_RemovePlayerFromParty(const struct FString& playerId);
	void DBD_RemovePerkTokens(int numberOfTokensToRemove);
	void DBD_RemoveHP();
	void DBD_RemoveFriend(const struct FString& platformId);
	void DBD_RemoveExhaustion();
	void DBD_RemoveAllStatusEffects();
	void DBD_RemoveAllPerks();
	void DBD_RejectRequestJoinParty(const struct FString& playedId);
	void DBD_RejectPartyInvite(const struct FString& partyId);
	void DBD_RegisterPlayerName(const struct FString& name);
	void DBD_RefreshStaticBlast();
	void DBD_RefillActivePhaseWalkCharges();
	void DBD_RedeemPromoCode(const struct FString& codeId);
	void DBD_RebuildNavigationMesh();
	void DBD_Ragdoll(const struct FName& rootBone, float blend);
	void DBD_PutSurvivorToSleep();
	void DBD_PulldownPallets();
	void DBD_ProcessOffering();
	void DBD_PrintSteamBuildIds();
	void DBD_PrintQuestConditionsStatus();
	void DBD_PrintCurrentStateOnce();
	void DBD_PlayMontage(const struct FName& montageID);
	void DBD_PlayEntityTurn();
	void DBD_PcInputOnAtlanta(bool shouldOverride);
	void DBD_OverrideVersionNumber(const struct FString& versionNumber);
	void DBD_OptionToggleUseHeadphones();
	void DBD_OptionToggleMuteOnFocusLost();
	void DBD_OptionToggleInvertY();
	void DBD_OptionToggleFullScreen();
	void DBD_OptionToggleAutoAdjust();
	void DBD_OptionSetResolution(int resolution);
	void DBD_OptionSetQualityLevel(uint32_t QualityLevel);
	void DBD_OptionSetMainVolume(int volume);
	void DBD_OptionSetLanguage(const struct FString& lang);
	void DBD_OpenVideo(const struct FString& videoID, const struct FString& mode);
	void DBD_OpenNetworkErrorPopup();
	void DBD_OpenLogFolder();
	void DBD_NoCrows();
	void DBD_NewAuthToken();
	void DBD_MuteMusicInGame(bool muted);
	void DBD_Mute(bool mute);
	void DBD_MoveBackAndForth(bool move, float moveDuration, bool run);
	void DBD_MirrorsSteamValidateTransaction(const struct FString& orderId, const struct FName& itemId);
	void DBD_MirrorsSteamInitTransaction(const struct FName& itemId, const struct FString& description);
	void DBD_MirrorsSteamFinalizeTransaction(const struct FString& orderId);
	void DBD_MirrorsReportPlayer(const struct FString& reportedPlayerMirrorsId);
	void DBD_MirrorsRefreshWallet();
	void DBD_MirrorsPurchaseOutfit(const struct FName& outfitId, const struct FString& currencyId);
	void DBD_MirrorsPurchaseNonPremiumItem(const struct FName& objectId, double toPurchaseQuantity, const struct FString& currencyId);
	void DBD_MirrorsPurchaseCharacter(const struct FName& characterCatalogId, const struct FString& currencyId);
	void DBD_MirrorsPurchaseBundle(const struct FName& objectId, double toPurchaseQuantity, const struct FString& currencyId, bool isPremium);
	void DBD_MirrorsPurchaseAllOutfits();
	void DBD_MirrorsPurchaseAllItems();
	void DBD_MirrorsPurchaseAllAtlantaItems();
	void DBD_MirrorsLoadPlayerData();
	void DBD_MirrorsGetCharacterCustomizationItemData();
	void DBD_MirrorsGetAvailableBundles();
	void DBD_MirrorsDropInventoryItem(const struct FString& objectId, int dropCount);
	void DBD_MirrorsDropAllInventoryItems();
	void DBD_MirrorsConsumeItem(const struct FName& objectId);
	void DBD_MirrorsClaimMessageRewards();
	void DBD_MirrorsBuyFearMarketItem(const struct FName& perkID, const struct FString& currencyId);
	void DBD_MayThereBeOutlines(const struct FString& Value, float red, float green, float blue);
	void DBD_MasterCheat();
	void DBD_MarketingSetupGameplayCheats();
	void DBD_MarketingSetupCinematicCheats();
	void DBD_LogGlobalUObjectArray();
	void DBD_LogActivatables();
	void DBD_LoadCharacterAssetLibrary(int CharacterId);
	void DBD_LoadCatalogDataFromS3();
	void DBD_ListStatusEffects();
	void DBD_ListPerks();
	void DBD_ListItemAddons();
	void DBD_ListInventory();
	void DBD_ListInteractionInZone();
	void DBD_ListDBStatusEffects();
	void DBD_ListDBPerks();
	void DBD_ListDBOfferings();
	void DBD_ListDBItems();
	void DBD_ListDBItemAddons();
	void DBD_ListDBCustomizations();
	void DBD_ListAvailableInteractions();
	void DBD_ListAllStatusEffects();
	void DBD_ListAllPerks();
	void DBD_ListAllItemAddons();
	void DBD_LevelUp();
	void DBD_LeaveParty();
	void DBD_LeaveMatch();
	void DBD_KillLobby();
	void DBD_Kill(bool sacrificed);
	void DBD_IsServerDedicated();
	void DBD_InvitePlayerToParty(const struct FString& playerId);
	void DBD_InvalidateIdentityAuthenticationProviderToken();
	void DBD_InitializeRTM();
	void DBD_ImportLocalSaveGame();
	void DBD_HookEscapeAutoSuccess(bool Success);
	void DBD_HealBots();
	void DBD_GrantInventoryItemOnLevelUp(const struct FString& playerType, const struct FString& itemId);
	void DBD_GetSyncedUTCTime();
	void DBD_GetSuggestedFriendsPerPlatform();
	void DBD_GetRecentlyPlayedWithPlayers();
	void DBD_GetPlayerPips();
	void DBD_GetPlayerName();
	void DBD_GetPlayerLevel();
	void DBD_GetNextProgressionPerks(int level, int CharacterId);
	void DBD_GetKrakenID();
	void DBD_GetHighestWeightSeenNews();
	void DBD_GetChunkingState();
	void DBD_GenerateAuthToken();
	void DBD_FrenzyForever();
	void DBD_ForceSurvivorGreyedOut(bool isGreyedOut);
	void DBD_ForceSkillChecks(bool enabled);
	void DBD_ForceRebalanceRTM();
	void DBD_ForceFlee(bool toward);
	void DBD_ForceDisableSkillChecks(bool enabled);
	void DBD_ForceBackendUnreachable(int Force);
	void DBD_FlushPersistentDebugDrawings();
	void DBD_FlushAnalytics();
	void DBD_FindActorWithTag(const struct FString& tagName);
	void DBD_FillHP();
	void DBD_ExportLocalSaveGame();
	void DBD_EquipCharmsIn3Slots(const struct FName& charmIdInSlot0, const struct FName& charmIdInSlot1, const struct FName& charmIdInSlot2);
	void DBD_EntitlementsInfo();
	void DBD_EnsureFail();
	void DBD_EndGameWithReason(DeadByDaylight_EEndGameReason Reason);
	void DBD_EndGame();
	void DBD_EndEndGameScenario();
	void DBD_EnableTerrorRadius();
	void DBD_EnableDebugUnavailableInteractions(bool enabled);
	void DBD_EnableCapsuleDynamicResize(bool enabled);
	void DBD_EmulateKrakenSpecificError(const struct FString& endpoint, int errorCode);
	void DBD_EarnXpAmount(int matchXp);
	void DBD_EarnPlayerXp(int matchTime, bool isFirstMatch, int consecutiveMatch, const struct FString& playerType, const struct FString& highestEmblemQuality, bool queueForTally);
	void DBD_DumpOnlineSessions();
	void DBD_DumpCharacterObjectStates();
	void DBD_DropSurvivorItems();
	void DBD_DisplayPopupToast(int toastId);
	void DBD_DisplayPlayerStat(const struct FName& statName);
	void DBD_DisplayPlayerGameState();
	void DBD_DisplayObjectiveProgression(const struct FString& objectiveIdStr);
	void DBD_DisplayFriendsListData();
	void DBD_DisplayFriendsList();
	void DBD_DisplayFriendInfo(const struct FString& friendId);
	void DBD_DisplayEventProgression(const struct FString& eventId);
	void DBD_DisplayChunkingDefines();
	void DBD_DisplayCharacterStat(const struct FName& statName);
	void DBD_DispatchOnPostItemAddonsCreation();
	void DBD_DisconnectionPenaltyShow();
	void DBD_DisconnectionPenaltySetEndOfBan(const struct FString& endOfBan);
	void DBD_DisconnectionPenaltyAddPointsDS(const struct FString& userId, const struct FString& role, const struct FString& Reason);
	void DBD_DisconnectionPenaltyAddPoints(int Amount);
	void DBD_DisableTerrorRadius();
	void DBD_DisableStartUpdateMontageDuringEnter(bool disable);
	void DBD_DestroyAllNotControlledCharacter();
	void DBD_DeleteAllCharacterAssetLibrary();
	void DBD_DebugPrintInteractionsInZone();
	void DBD_DebugPlague(bool Enable);
	void DBD_DebugIsInterruptable(bool interruptable);
	void DBD_DebugGhost(bool Debug);
	void DBD_DebugCompetence(int on);
	void DBD_CyclePlayerSpawnPoints(int cycleDelay);
	void DBD_CreateParty();
	void DBD_CrashGameWithNullPtr();
	void DBD_CrashGameWithCheck();
	void DBD_CopyPlayerMirrorsIdToClipboard();
	void DBD_CopyPartyIdToClipboard();
	void DBD_ContextSystemRequestTransition(uint32_t contextGroupUId, uint32_t contextUId, int transitionId);
	void DBD_ContextSystemRequestEnd(uint32_t contextGroupUId);
	void DBD_ConsumeLevelPerk(int characterLevelReached);
	void DBD_ConsumeBloodwebs(int initialLevel, int Count);
	void DBD_CompleteEscapeRequirements();
	void DBD_ComeToMeMyChildren();
	void DBD_ColorblindMode(int deficiencyType, int severity, bool correctDeficiency, bool showCorrectionWithDeficiency);
	void DBD_CloseVideo();
	void DBD_CloseSystemPromptAndResetStack();
	void DBD_CloseRTM();
	void DBD_ClearPotentialReferencesToChunksNotYetDownloaded();
	void DBD_ChangeVideoVolume(float volume);
	void DBD_ChangeVideoPlaybackMode(const struct FString& mode);
	void DBD_ChangeVideoMedia(const struct FString& videoID);
	void DBD_ChangeBaseUrlForSpecificEndpointAndRequestType(const struct FString& endpoint, const struct FString& requestType, const struct FString& baseUrl);
	void DBD_CancelPartyInvite(const struct FString& partyId, const struct FString& cancelledPlayerId);
	void DBD_BuyBloodwebsLevel(int initialLevel, int Count);
	void DBD_BackToIIS();
	void DBD_AutoWiggle();
	void DBD_AsyncLoadItem(const struct FName& itemId);
	void DBD_ASMShowGridDebugOutput();
	void DBD_ArchivesToggleNodeDebug();
	void DBD_ArchivesResetXpProgression();
	void DBD_ArchivesResetVignette(const struct FString& storyId, const struct FString& vignetteId);
	void DBD_ArchivesResetStory(const struct FString& storyId, int level);
	void DBD_ArchivesResetStarProgression();
	void DBD_ArchivesResetPremiumPass();
	void DBD_ArchivesResetPopupSeenStatus(const struct FString& archiveId);
	void DBD_ArchivesResetNode(const struct FString& storyId, int level, const struct FString& NodeID, bool forceClose);
	void DBD_ArchivesResetJournal(const struct FString& storyId);
	void DBD_ArchivesResetAll();
	void DBD_ArchivesMasterLevel(const struct FString& storyId, int level, const struct FString& nodeIdToExclude);
	void DBD_ArchivesJournalUnlockEntries(const struct FString& storyId, const struct FString& vignetteId, int entriesToAdd);
	void DBD_ArchivesGetStoryIds();
	void DBD_ArchivesGetActiveNodesFromCache();
	void DBD_ArchivesForceFetchStoryIds();
	void DBD_ArchivesForceActivateNode(const struct FString& storyId, int level, const struct FString& NodeID);
	void DBD_ArchivesFetchActiveNodes();
	void DBD_ArchivesDisplayNodeStatus(const struct FString& storyId, int level, const struct FString& NodeID);
	void DBD_ArchivesCompleteJounal(const struct FString& archiveId);
	void DBD_ArchivesAddXp(int amountXp);
	void DBD_ArchivesAddTiers(int amountTiers);
	void DBD_ArchivesAddStars(int amountStars);
	void DBD_ArchivesAddProgressionToAllActiveNodes(int progression);
	void DBD_ArchivesAddObjectiveProgression(const struct FString& storyId, int level, const struct FString& NodeID, const struct FString& objectiveId, int progress);
	void DBD_ArchivesActivateNode(const struct FString& storyId, int level, const struct FString& NodeID);
	void DBD_ApplySameSurvivorSicknessStatusToKiller(bool sameVisual);
	void DBD_ApplyDeepWound();
	void DBD_AnalyticsProvidersForgetMe();
	void DBD_AnalyticsProvidersClearPersistentData();
	void DBD_AllowPalletPullUp(bool allowPullUp);
	void DBD_AddToPlayerStat(const struct FName& statName, float Amount);
	void DBD_AddToCharacterStat(const struct FName& statName, float Amount);
	void DBD_AddSlasherPips(int Count);
	void DBD_AddRecentlyPlayedWithPlayer(const struct FString& playerKrakenId);
	void DBD_AddPips(int camperPipCount, int slasherPipCount, bool forceReset);
	void DBD_AddPerkTokens(int numberOfTokensToAdd);
	void DBD_AddPerkToInventory(const struct FName& perkID, int level);
	void DBD_AddPartyInviteToast(const struct FString& partyId);
	void DBD_AddOfferingToInventory(const struct FName& itemId, int Amount);
	void DBD_AddOffering(const struct FName& name);
	void DBD_AddNotificationToast();
	void DBD_AddMadness(float madnessToAdd);
	void DBD_AddItemToInventory(const struct FName& itemId, int Amount);
	void DBD_AddItemAddonToInventory(const struct FName& ItemAddonID, int Amount);
	void DBD_AddInvitationToast();
	void DBD_AddHP();
	void DBD_AddFriend(const struct FString& userKrakenID);
	void DBD_AddEverythingToInventory(int Amount);
	void DBD_AddCharacterExperience(int Amount);
	void DBD_AddCamperPips(int Count);
	void DBD_AddBot();
	void DBD_AddAllPerksToInventory(int level);
	void DBD_AddAllItemsAddonsOfferingsToInventory(int Amount);
	void DBD_ActivateWeakenedMechanic(bool on);
	void DBD_ActivateEscapeDoor();
	void DBD_ActivateAIAllSlashers(bool activate, int playerRank);
	void DBD_ActivateAIAllCampers(bool activate, int playerRank);
	void DBD_ActivateAIAll(bool activate, int playerRank);
	void DBD_ActivateAI(bool activate, int playerRank);
	void DBD_AcceptRequestJoinParty(const struct FString& playedId);
	void DBD_AcceptPartyInvite(const struct FString& partyId);
};

// Class DeadByDaylight.DBDClientSyncer
// 0x01F8 (FullSize[0x0428] - InheritedSize[0x0230])
class UDBDClientSyncer : public Uactor
{
public:
	TArray<struct FSpawnInfo>                          _actorsToSpawnLocally;                                     // 0x0230(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnInfo>                          _currentQueue;                                             // 0x0240(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8UH2[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPaperTileMap*                               _tileMap;                                                  // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V3IN[0x1C8];                                   // 0x0260(0x01C8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDClientSyncer");
		return ptr;
	}



	void Multicast_SyncSeed(int seed, class UPaperTileMap* tileMap, int generationPlayerCount, const struct FString& premadeMap);
	void Multicast_SyncFinalLocallySpawnCount(int16_t numLocal);
	void Multicast_SyncActorToSpawnLocally(TArray<struct FSpawnInfo> spawnInfos, int16_t StartIndex);
};

// Class DeadByDaylight.DBDClipRegionComponent
// 0x0010 (FullSize[0x0220] - InheritedSize[0x0210])
class UDBDClipRegionComponent : public UDBDLocatorComponent
{
public:
	TArray<struct FAffectedMaterialAndVariant>         AffectedMaterialsAndVariants;                              // 0x0210(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDClipRegionComponent");
		return ptr;
	}



	void NotifyShouldClipComponent(class UMeshComponent* InMeshComponent);
	float ClipDistance(class UMeshComponent* InMeshComponent);
	void ApplyClipToDynamicMaterial(class UMaterialInstanceDynamic* dynamicInstanceToClip, int InRegionID);
	void ApplyClip(class UMaterialInstanceDynamic* InMaterial2clip, int InRegionID);
	void STATIC_ApplyArrayOfClipsToDynamicMaterial(TArray<class UDBDClipRegionComponent*> InRegions, class UMaterialInstanceDynamic* dynamicInstanceToClip);
};

// Class DeadByDaylight.ColorBlindFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UColorBlindFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ColorBlindFunctionLibrary");
		return ptr;
	}



	void STATIC_CallOnColorBlindSettingsChange(class Uactor* callingActor);
};

// Class DeadByDaylight.ColorBlindSettingsListenerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UColorBlindSettingsListenerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ColorBlindSettingsListenerInterface");
		return ptr;
	}



	void OnColorBlindSettingsChange(SlateCore_EColorVisionDeficiency colorBlindMode, int colorBlindIntensity);
};

// Class DeadByDaylight.DBDConsoleCommandUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDConsoleCommandUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDConsoleCommandUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCoreUMGDesignTunables
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UDBDCoreUMGDesignTunables : public UObject
{
public:
	unsigned char                                      CoreHudRootWidgetClass[0x30];                              // 0x0030(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      CorePlayerControllerClass[0x30];                           // 0x0060(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDCoreUMGDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCustomizationTool
// 0x0C00 (FullSize[0x0E30] - InheritedSize[0x0230])
class UDBDCustomizationTool : public Uactor
{
public:
	unsigned char                                      OverallLightingClass[0x30];                                // 0x0230(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FDBDCustomizationToolData                   CustomizationData;                                         // 0x0260(0x0BB8) (Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class Uactor*>                              _spawnedActors;                                            // 0x0E18(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QORT[0x8];                                     // 0x0E28(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDCustomizationTool");
		return ptr;
	}



};

// Class DeadByDaylight.RitualEvaluatorBase
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class URitualEvaluatorBase : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RitualEvaluatorBase");
		return ptr;
	}



	bool EvaluateEvent(const struct FritualEvent& ritualEvent);
};

// Class DeadByDaylight.DBDDebugCameraController
// 0x0000 (FullSize[0x0690] - InheritedSize[0x0690])
class UDBDDebugCameraController : public UDebugCameraController
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDDebugCameraController");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameMode
// 0x00A8 (FullSize[0x0418] - InheritedSize[0x0370])
class UDBDGameMode : public UDBDBaseMatchGameMode
{
public:
	struct FScriptMulticastDelegate                    OnBlockCamperEscape;                                       // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayersLoadoutsCreated;                                  // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      _killerPlayerControllerClass;                              // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      _survivorPlayerControllerClass;                            // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPlayerStart*>                        _initialPlayerStarts;                                      // 0x03A0(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0YGB[0x50];                                    // 0x03B0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                KillerCreationPositionOrder;                               // 0x0400(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AllowSpecialEvent;                                         // 0x0404(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZTKQ[0xB];                                     // 0x0405(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameEventAnalyticsComponent*                _gameEventAnalyticsComponent;                              // 0x0410(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameMode");
		return ptr;
	}



	void SetEscapeOpened(bool val);
	void LevelLoaded(const struct FString& levelName);
	bool IsEscapeOpen();
	void HostGame();
	struct FTimespan GetElapsedMatchTime();
	void DBD_BlockCamperEscape(bool shouldBlock);
	bool AreLoadoutsCreated();
};

// Class DeadByDaylight.DBDDebugGameMode
// 0x00C8 (FullSize[0x04E0] - InheritedSize[0x0418])
class UDBDDebugGameMode : public UDBDGameMode
{
public:
	unsigned char                                      UnknownData_7DAT[0x8];                                     // 0x0418(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UDBDPlayerController*, int>             LoadoutIndex;                                              // 0x0420(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      PlayersWithItems[0x50];                                    // 0x0470(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FCamperLoadout>                      CamperPawnOverrides;                                       // 0x04C0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSlasherLoadout>                     SlasherPawnOverrides;                                      // 0x04D0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDDebugGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DBDDebugInputComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UDBDDebugInputComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_TOTK[0x20];                                    // 0x00B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDDebugInputComponent");
		return ptr;
	}



	void DBD_ItsAlive(bool aliveEnabled);
};

// Class DeadByDaylight.DBDDesignTunables
// 0x0210 (FullSize[0x0240] - InheritedSize[0x0030])
class UDBDDesignTunables : public UObject
{
public:
	int                                                WinStreakThresholdLarge;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WinStreakThresholdSmall;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxFearTokens;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RJPV[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPerkLevelDefinition>                PerkLevelDefinitions;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MetaModifiers[0x50];                                       // 0x0050(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      RangedSurvivorAuraPerceptionModifiers[0x50];               // 0x00A0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      SurvivorRevelatoryAuraPerceptionModifiers[0x50];           // 0x00F0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      DisruptableAuraReadingFlags[0x50];                         // 0x0140(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               ShouldUseKillerLobby;                                      // 0x0190(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W9PN[0x7];                                     // 0x0191(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      TextDesignTunableClass[0x30];                              // 0x0191(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDTextDesignTunables*                      TextTunables;                                              // 0x01C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CoreUMGDesignTunableClass[0x30];                           // 0x01D0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDCoreUMGDesignTunables*                   CoreUMGDesignTunables;                                     // 0x0200(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AtlantaDesignTunableClass[0x30];                           // 0x0208(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDAtlantaDesignTunables*                   AtlantaDesignTunables;                                     // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDDesignTunables");
		return ptr;
	}



	float GetTunableValue(const struct FName& Id, bool warnIfRowMissing);
};

// Class DeadByDaylight.DBDTextDesignTunables
// 0x00E8 (FullSize[0x0118] - InheritedSize[0x0030])
class UDBDTextDesignTunables : public UObject
{
public:
	struct FString                                     CreditsHtml;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       LegalTextTitle;                                            // 0x0040(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       legalText;                                                 // 0x0058(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       ConsentTextTitle;                                          // 0x0070(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       ConsentText;                                               // 0x0088(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       LegalTextSIEA;                                             // 0x00A0(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       LegalTextSIEE;                                             // 0x00B8(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       SystemMessage_ChatDisconnected;                            // 0x00D0(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       SystemMessage_ChatReturnedToLobby;                         // 0x00E8(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       SystemMessage_ChatMatchServerClosed;                       // 0x0100(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDTextDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDDiceRoller
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDDiceRoller : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDDiceRoller");
		return ptr;
	}



	bool STATIC_GetRollResultByTunableValue(class Uactor* RollingActor, const struct FName& TunableValueName, float MultiplicativeModifier, float AdditiveModifier);
	bool STATIC_GetRollResultByDiceRollType(class UdbdPlayer* RollingPlayer, DeadByDaylight_EDiceRollType DiceRollType);
	bool STATIC_CalculateTickedRollResult(class Uactor* RollingActor, float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier);
	bool STATIC_CalculateRollResult(class Uactor* RollingActor, float BaseProbability, float MultiplicativeModifier, float AdditiveModifier);
	bool STATIC_CalculateOverTimeRollResult(class Uactor* RollingActor, float BaseProbability, float deltaTime, float ExpectedTime, float MultiplicativeModifier, float AdditiveModifier);
};

// Class DeadByDaylight.DBDEasyAntiCheat
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UDBDEasyAntiCheat : public UObject
{
public:
	unsigned char                                      UnknownData_ROL8[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _connectedToServer;                                        // 0x0050(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9EJU[0x7];                                     // 0x0051(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheat");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEasyAntiCheatEnable
// 0x0098 (FullSize[0x00F0] - InheritedSize[0x0058])
class UDBDEasyAntiCheatEnable : public UDBDEasyAntiCheat
{
public:
	unsigned char                                      UnknownData_G0PR[0x98];                                    // 0x0058(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheatEnable");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEasyAntiCheatLinux
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDEasyAntiCheatLinux : public UDBDEasyAntiCheatEnable
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheatLinux");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEasyAntiCheatWindows
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDEasyAntiCheatWindows : public UDBDEasyAntiCheatEnable
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheatWindows");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEngineUtils
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDEngineUtils : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDEngineUtils");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGame_Lobby
// 0x0030 (FullSize[0x0388] - InheritedSize[0x0358])
class UDBDGame_Lobby : public UDBDBaseGameMode
{
public:
	unsigned char                                      UnknownData_695P[0x18];                                    // 0x0358(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UIdentityValidation*                         _identityValidation;                                       // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5II3[0x10];                                    // 0x0378(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGame_Lobby");
		return ptr;
	}



	void RemoveBotByIndex(int botIndex);
	void FillLobbyWithBothByName(const struct FString& selectedKiller, int rank);
	void FillLobbyWithBoth(int selectedKiller, int rank);
	void FillLobby();
	void AddBotToLobbyNoLoadoutByName(const struct FString& selectedCharacter);
	void AddBotToLobbyNoLoadout(int selectedCharacter);
	void AddBotToLobbyByName(const struct FString& selectedCharacter, const struct FString& Item, const struct FString& addon1, const struct FString& addon2, const struct FString& offering, const struct FString& perk1, const struct FString& perk2, const struct FString& perk3, const struct FString& perk4, int rank);
	void AddBotToLobby(int selectedCharacter, const struct FString& Item, const struct FString& addon1, const struct FString& addon2, const struct FString& offering, const struct FString& perk1, const struct FString& perk2, const struct FString& perk3, const struct FString& perk4, int rank);
};

// Class DeadByDaylight.DBDGame_Menu
// 0x0030 (FullSize[0x0388] - InheritedSize[0x0358])
class UDBDGame_Menu : public UDBDBaseGameMode
{
public:
	bool                                               StartWithSlasher;                                          // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HM9C[0x7];                                     // 0x0359(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAtlantaPartyFlowHandler*                    _partyFlowHandler;                                         // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5CWZ[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMatineeActor*                               _matineeFadeActor;                                         // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMatineeActor*                               _matineeIntroActor;                                        // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMatineeActor*                               _matineeLoopActor;                                         // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGame_Menu");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGame_Start
// 0x0080 (FullSize[0x03D8] - InheritedSize[0x0358])
class UDBDGame_Start : public UDBDBaseGameMode
{
public:
	unsigned char                                      UnknownData_A2V2[0x48];                                    // 0x0358(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TScriptInterface<class UClientStartupInitializerInterface> _startupInitializer;                                       // 0x03A0(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class USharedAuthenticationComponent*              _sharedAuthenticationComponent;                            // 0x03B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P17L[0x20];                                    // 0x03B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGame_Start");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameEngine
// 0x0008 (FullSize[0x0F80] - InheritedSize[0x0F78])
class UDBDGameEngine : public UGameEngine
{
public:
	unsigned char                                      UnknownData_6A90[0x8];                                     // 0x0F78(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameEngine");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameEventUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDGameEventUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameEventUtilities");
		return ptr;
	}



	void STATIC_RemotelyDispatchGameEvent(class UObject* worldContextObject, const struct FgameplayTag& GameEventType, class UdbdPlayer* instigator, class Uactor* target, float customValue, class UObject* customObjectParameter, int customIntValue);
	void STATIC_LocallyDispatchGameEvent(class UObject* worldContextObject, const struct FgameplayTag& GameEventType, class UdbdPlayer* instigator, class Uactor* target, float customValue, class UObject* customObjectParameter, int customIntValue);
	class URecentGameEventTracker* STATIC_GetRecentEventTracker(class UObject* worldContextObject);
	void STATIC_FireGameEvent(class UObject* worldContextObject, DeadByDaylight_EDBDScoreTypes ScoreType, float Amount, class Uactor* instigator, class Uactor* target);
	void STATIC_DispatcherFireGameEvent(class UObject* worldContextObject, const struct FgameplayTag& GameEventType, bool broadcastOverNetwork, class UdbdPlayer* instigator, class Uactor* target, float customValue, class UObject* customObjectParameter, int customIntValue);
	void STATIC_Authority_DispatcherFireGameEvent(class UObject* worldContextObject, const struct FgameplayTag& GameEventType, bool broadcastOverNetwork, class UdbdPlayer* instigator, class Uactor* target, float customValue, class UObject* customObjectParameter, int customIntValue);
};

// Class DeadByDaylight.DBDGameFlowUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDGameFlowUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameFlowUtilities");
		return ptr;
	}



	void STATIC_TriggerWorldFlowEvent(class UObject* worldContextObject, DeadByDaylight_EWorldFlowEvent worldFlowEvent);
	void STATIC_TriggerUIFlowEvent(class UObject* worldContextObject, DeadByDaylight_EUIFlowEvent uiFlowEvent);
};

// Class DeadByDaylight.DBDGameInstance
// 0x0798 (FullSize[0x0988] - InheritedSize[0x01F0])
class UDBDGameInstance : public UgameInstance
{
public:
	unsigned char                                      UnknownData_2M8H[0x30];                                    // 0x01F0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DesignTunableClass;                                        // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDBDDesignTunables*                          DesignTunables;                                            // 0x0228(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RegionClass;                                               // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ShopManagerClass;                                          // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FriendManagerClass;                                        // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameEventTracker*                           GameEventTracker;                                          // 0x0248(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDBDKeyDisplayInfo*                          KeyDisplayInfo;                                            // 0x0250(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LeaveGameRequested;                                        // 0x0258(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_13ZN[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPlayerProfileDAL*                           PlayerProfileDAL;                                          // 0x0260(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UProceduralLevelBuilder>      Builder;                                                   // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                GenerationSeed;                                            // 0x0270(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YQ5H[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PaperTileAssetName;                                        // 0x0278(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                generationPlayerCount;                                     // 0x0288(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LJOG[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     premadeMap;                                                // 0x0290(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FForceSpawnTileData>                 ForceSpawnTileData;                                        // 0x02A0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R0S9[0x30];                                    // 0x02B0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UOfferingSequenceManager*                    OfferingSequence;                                          // 0x02E0(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FParadiseData>                       ParadiseData;                                              // 0x02E8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PlayerProfileLoadFailed;                                   // 0x02F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8AFG[0x7];                                     // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNewsContentManager*                         NewsContentManager;                                        // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UContentScheduleManager*                     ContentScheduleManager;                                    // 0x0308(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCDNPatchManager*                            CDNPatchManager;                                           // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterProgressionManager*                CharacterProgressionManager;                               // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterXPManager*                         CharacterXPManager;                                        // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AuthOrEACErrorAdditionalInfo;                              // 0x0328(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasServerLeftMatch;                                        // 0x0338(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasWrittenGameEndStats;                                    // 0x0339(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GO76[0x6];                                     // 0x033A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFearMarketManager*                          FearMarketManager;                                         // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UShopManager*                                ShopManager;                                               // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFriendManager*                              FriendManager;                                             // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWalletHandler*                              WalletHandler;                                             // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TutorialRequesterName;                                     // 0x0360(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JHWR[0x4];                                     // 0x036C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UControllerPairingManager*                   ControllerPairingManager;                                  // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XEQ8[0xE8];                                    // 0x0378(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChunkingManager*                            ChunkingManager;                                           // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerDisconnect;                                        // 0x0468(0x0010) (Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SJMD[0xE0];                                    // 0x0478(0x00E0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAssetLibraryManager*                        _assetLibraryManager;                                      // 0x0558(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _bloodwebManagerClass[0x30];                               // 0x0560(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_4BJP[0x128];                                   // 0x0590(0x0128) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDPersistentData*                          _persistentData;                                           // 0x06B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerDataStorageFacade*                    _playerDataFacade;                                         // 0x06C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URankManager*                                _rankManager;                                              // 0x06C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDPlayerLevelManager*                      _playerLevelManager;                                       // 0x06D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpecialEventManager*                        _specialEventManager;                                      // 0x06D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBonusPointEventsManager*                    _bonusPointEventsManager;                                  // 0x06E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDTimeTravelManager*                       _timeTravelManager;                                        // 0x06E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UToastManager*                               _toastManager;                                             // 0x06F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDSocialNotificationFactory*               _socialNotificationFactory;                                // 0x06F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDPartyFacade*                             _partyFacade;                                              // 0x0700(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPenaltyTracker*                             _penaltyTracker;                                           // 0x0708(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QVMC[0x28];                                    // 0x0710(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULightingHelper*                             _ligthingHelper;                                           // 0x0738(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOfferingHandler*                            _offeringHandler;                                          // 0x0740(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_48JD[0x8];                                     // 0x0748(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UActorKnowledgeCollection*>           _actorKnowledgeCollections;                                // 0x0750(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMapActorDB*                                 _mapActorDB;                                               // 0x0760(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInteractionProficiency*>             _interactionProficiencies;                                 // 0x0768(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDHud*                                     _theHud;                                                   // 0x0778(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T8EU[0x28];                                    // 0x0780(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBloodwebManager*                            BloodwebManager;                                           // 0x07A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPopupSequencer*                             _popupSequencer;                                           // 0x07B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPopupFactory*                               _popupFactory;                                             // 0x07B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAuthentication*                          _auth;                                                     // 0x07C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDEasyAntiCheat*                           _eac;                                                      // 0x07C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T97E[0xC8];                                    // 0x07D0(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UObject>>              _execObjects;                                              // 0x0898(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _networkFailureDetected;                                   // 0x08A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _networkConnectionMonitoringOnly;                          // 0x08A9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _achievementStatsUploadEnabled;                            // 0x08AA(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDisconnected;                                           // 0x08AB(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isGamepadReconnected;                                     // 0x08AC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isProfileOffline;                                         // 0x08AD(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAppSuspended;                                           // 0x08AE(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAppResumed;                                             // 0x08AF(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInvitationRejected;                                     // 0x08B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAdditionalContentInstalled;                             // 0x08B1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isCloudInventoryInitialized;                              // 0x08B2(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W6SM[0x2D];                                    // 0x08B3(0x002D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPerformanceDataAccumulator*                 _performanceDataAccumulator;                               // 0x08E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOfferingEffectCollection*                   _resultOfferingAndPerkEffects;                             // 0x08E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryHandler*                           _inventoryHandler;                                         // 0x08F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULocalEventManager*                          _localEventManager;                                        // 0x08F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerReportManager*                        _playerReportManager;                                      // 0x0900(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCinematicManager*                           _cinematicManager;                                         // 0x0908(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoftBanManager*                             _softBanManager;                                           // 0x0910(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UConsentManager*                             _consentManager;                                           // 0x0918(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOnlineSystemHandler*                        _onlineSystemHandler;                                      // 0x0920(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDedicatedServerManager*                     _dedicatedServerManager;                                   // 0x0928(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URegionFinder*                               _regionFinder;                                             // 0x0930(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDecalSpawnerCollection*                     _decalSpawnerCollection;                                   // 0x0938(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveCollection*                        _characterClippingPrimitiveCollection;                     // 0x0940(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           LastProviderErrorCode;                                     // 0x0948(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EDisconnectErrors                   _disconnectError;                                          // 0x094C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7QZU[0x3B];                                    // 0x094D(0x003B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameInstance");
		return ptr;
	}



	void StartOfferingSequence();
	void SimulateOfferingSequence(TArray<struct FName> Offerings, bool playSequence);
	void RemoveActorKnowledgeCollection(class UActorKnowledgeCollection* collection);
	void OnTimeTravelComplete(bool Success, const struct FString& date);
	bool IsActorKnown(class UdbdPlayer* knowledgePossessor, class Uactor* possiblyKnownActor);
	bool HasOfferingOfType(DeadByDaylight_EOfferingEffectType type, int playerId, const struct FName& tag);
	bool HasOfferingByType(DeadByDaylight_EOfferingEffectType type);
	void GotoSplashScreen(bool showDefaultDialogueOnSplashScreen);
	class UDBDTimeUtilities* GetTimeUtils();
	class USpecialEventManager* GetSpecialEventManager();
	class USoftBanManager* GetSoftBanManager();
	class URankManager* GetRankManager();
	class UDBDPlayerLevelManager* GetPlayerLevelManager();
	int GetMaxSurvivorCount();
	class UMapActorDB* GetMapActorDB();
	class UplayerController* GetLocalPlayerController();
	class ULocalPlayer* GetLocalPlayer();
	class UdbdPlayer* GetLocallyControlledCharacter();
	class ULocalEventManager* GetLocalEventManager();
	class ULightingInterpolator* GetLightInterpolator();
	class ULightingHelper* GetLightingHelper();
	class UBaseSky* GetLevelLighting();
	class UInventoryHandler* GetInventoryHandler();
	TArray<class UcamperPlayer*> GetInGameSurvivors();
	TArray<class UdbdPlayer*> GetInGamePlayers();
	TArray<class UslasherPlayer*> GetInGameKillers();
	class UslasherPlayer* GetInGameKiller();
	void GetInGameAliveSurvivors(TArray<class UcamperPlayer*>* outPlayingSurvivors);
	class UgameEventDispatcher* GetGameEventDispatcher();
	class UDecalSpawnerCollection* GetDecalSpawnerCollection();
	int GetDeadOrDisconnectedCampersCount(class UDBDPlayerState* exception);
	class UConsentManager* GetConsentManager();
	class UCinematicManager* GetCinematicManager();
	struct FName GetCharacterDefaultItem(int inCharacterIndex);
	class UPrimitiveCollection* GetCharacterClippingPrimitiveCollection();
	class UBonusPointEventsManager* GetBonusPointEventsManager();
	void STATIC_ForceCloseGame();
	void EndLoadingScreen(class Uworld* loadedWorld);
	void DBDToggleLightingLoaded();
	void DBDResetSaveData();
	void DBDForceSave();
	void DBDForceLoad();
	void DBDDeleteLocalSaveFile();
	void DBD_UpdateSteamInventory();
	void DBD_ToggleOnlineRole();
	void DBD_TestTickedDiceRoll(float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier);
	void DBD_TestSaveFile(const struct FString& name);
	void DBD_TestRegion();
	void DBD_TestDiceRoll(float BaseProbability, float MultiplicativeModifier, float AdditiveModifier);
	void DBD_SetStatsUploadEnabled(bool enabled);
	void DBD_SetFearMarketDate(const struct FString& dateString);
	void DBD_SendFriendInvite();
	void DBD_ResetSaveGameInventory();
	void DBD_ResetCurrentAchievementStats(bool andUpload, bool andUpdateData);
	void DBD_ResetCurrentAchievementStat(const struct FName& statName, bool andUpload);
	void DBD_ResetAllRituals();
	void DBD_RemoveRitual(const struct FName& toRemove);
	void DBD_PrintAudioConfig();
	void DBD_PIXEndCapture();
	void DBD_PIXBeginCapture();
	void DBD_LogBloodWebDefinition();
	void DBD_GetRegion();
	void DBD_GenerateNewRitual(const struct FName& name, int characterIndex);
	void DBD_GenerateNewRandomRitual();
	void DBD_GenerateBloodWeb(int level);
	void DBD_DumpSessions();
	void DBD_DisplayCurrentAchievementStat(const struct FName& statName);
	void DBD_DestroySteamInventory();
	void DBD_ClaimRitualRewardAtIndex(int index);
	void DBD_ClaimRitualReward(const struct FName& name);
	void DBD_CheckForNewContent(const struct FString& debugGameVersion, bool forceDisplay);
	void DBD_ChangeSteamOverlayPosition(int position, int verticalOffset, int horizontalOffset);
	void DBD_AssignNewRitual();
	void DBD_ApplyNoMist();
	void DBD_ApplyMist(float fogModifier);
	void DBD_AnalyticsTest();
	void DBD_AnalyticsReset();
	void DBD_AddToRitual(int index, float Value);
	void DBD_AddToAchievementStat(const struct FName& statName, float Amount);
	void BeginLoadingScreen(const struct FString& mapName);
	void Authority_SimulatePerks(TArray<struct FName> perks, int level);
	void Async_GenerateBloodWebForCurrentCharacter();
	void AddActorKnowledgeCollection(class UActorKnowledgeCollection* collection);
};

// Class DeadByDaylight.DBDGameSession
// 0x0060 (FullSize[0x02B0] - InheritedSize[0x0250])
class UDBDGameSession : public UGameSession
{
public:
	unsigned char                                      UnknownData_EE2T[0x60];                                    // 0x0250(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameSession");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameUserSettings
// 0x0140 (FullSize[0x0268] - InheritedSize[0x0128])
class UDBDGameUserSettings : public UGameUserSettings
{
public:
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                            // 0x0128(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInputAxisKeyMapping>                AxisMappings;                                              // 0x0138(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     DeviceLoginTokenID;                                        // 0x0148(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ScreenScaleForWindowedMode;                                // 0x0158(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ScalabilityLevel;                                          // 0x015C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AutoAdjust;                                                // 0x0160(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4XHY[0x3];                                     // 0x0161(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ScreenResolution;                                          // 0x0164(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               FullScreen;                                                // 0x0168(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6WHC[0x3];                                     // 0x0169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MenuScaleFactor;                                           // 0x016C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                HudScaleFactor;                                            // 0x0170(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SkillCheckScaleFactor;                                     // 0x0174(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MainVolume;                                                // 0x0178(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MenuMusicVolume;                                           // 0x017C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseHeadphones;                                             // 0x0180(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HideTutorial;                                              // 0x0181(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               MuteOnFocusLost;                                           // 0x0182(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_84MN[0x1];                                     // 0x0183(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                KillerCameraSensitivity;                                   // 0x0184(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SurvivorCameraSensitivity;                                 // 0x0188(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                KillerMuseSensitivity;                                     // 0x018C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SurvivorMuseSensitivity;                                   // 0x0190(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                KillerControllerSensitivity;                               // 0x0194(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SurvivorControllerSensitivity;                             // 0x0198(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AimAssist;                                                 // 0x019C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TRVV[0x3];                                     // 0x019D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                HandSide;                                                  // 0x01A0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                InteractionButton;                                         // 0x01A4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               InvertY;                                                   // 0x01A8(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RRH2[0x7];                                     // 0x01A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     Language;                                                  // 0x01B0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                HighestWeightSeenNews;                                     // 0x01C0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YFRC[0x4];                                     // 0x01C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSharedAuthenticationTokenInformation       SharedLoginInformation;                                    // 0x01C8(0x0020) (Config, NativeAccessSpecifierPrivate)
	uint32_t                                           LastPanelContextId;                                        // 0x01E8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ArchivesAutoPlayVoiceOver;                                 // 0x01EC(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HasAcceptedCrossplayPopup;                                 // 0x01ED(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HasAcceptedCrossProgressionPopup;                          // 0x01EE(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C13L[0x1];                                     // 0x01EF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PartyPrivacyState;                                         // 0x01F0(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EQCH[0x60];                                    // 0x0200(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                colorBlindMode;                                            // 0x0260(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ColorBlindModeIntensity;                                   // 0x0264(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameUserSettings");
		return ptr;
	}



	int GetSkillCheckScaleFactor();
	int GetMenuScaleFactor();
	int GetHudScaleFactor();
	class UDBDGameUserSettings* STATIC_GetDBDGameUserSettings();
	int GetColorBlindModeIntensity();
	SlateCore_EColorVisionDeficiency GetColorBlindMode();
};

// Class DeadByDaylight.DBDGameViewportClient
// 0x0038 (FullSize[0x0378] - InheritedSize[0x0340])
class UDBDGameViewportClient : public UGameViewportClient
{
public:
	unsigned char                                      UnknownData_KTFP[0x38];                                    // 0x0340(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDGameViewportClient");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHud
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UDBDHud : public UObject
{
public:
	TMap<struct FName, class UStatusView*>             _statusViews;                                              // 0x0030(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDHud");
		return ptr;
	}



	void RemoveStatusViewOnDestroy(class Uactor* actor);
};

// Class DeadByDaylight.DBDInGameHud
// 0x0028 (FullSize[0x0358] - InheritedSize[0x0330])
class UDBDInGameHud : public UDBDBaseHud
{
public:
	class UFont*                                       _debugFontObj;                                             // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_568R[0x18];                                    // 0x0338(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCompetenceDebugger*                         _competenceDebugger;                                       // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDInGameHud");
		return ptr;
	}



};

// Class DeadByDaylight.DBDInitPlayerQuery
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDInitPlayerQuery : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDInitPlayerQuery");
		return ptr;
	}



};

// Class DeadByDaylight.DBDInitPlayerQueryYesNo
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UDBDInitPlayerQueryYesNo : public UDBDInitPlayerQuery
{
public:
	unsigned char                                      UnknownData_7ZUI[0x80];                                    // 0x0030(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDInitPlayerQueryYesNo");
		return ptr;
	}



};

// Class DeadByDaylight.DBDKeyDisplayInfo
// 0x0158 (FullSize[0x0188] - InheritedSize[0x0030])
class UDBDKeyDisplayInfo : public UObject
{
public:
	struct FString                                     PendingResetKeyBindingsData;                               // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PendingResetMustBeGamepadKey;                              // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A2LL[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FKeyDisplayInfo>         _keyDisplayInfoMap;                                        // 0x0048(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P6VQ[0x50];                                    // 0x0098(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EInputInteractionType, struct FName> _interactionTypeToActionMap_Camper;                        // 0x00E8(0x0050) (NativeAccessSpecifierPrivate)
	TMap<DeadByDaylight_EInputInteractionType, struct FName> _interactionTypeToActionMap_Slasher;                       // 0x0138(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDKeyDisplayInfo");
		return ptr;
	}



	bool IsExcludedKey(const struct Fkey& key);
	struct FKeyDisplayInfo GetKeyDisplayInfoForInteractionType(class UplayerInput* playerInput, DBDSharedTypes_EPlayerRole playerRole, DeadByDaylight_EInputInteractionType InteractionType, bool useGamePad);
	struct FKeyDisplayInfo GetKeyDisplayInfo(const struct Fkey& key);
	struct Fkey GetFirstKeyForAction(class UplayerInput* playerInput, const struct FName& actionName, bool useGamePad);
	struct FName GetActionForInteractionType(DBDSharedTypes_EPlayerRole playerRole, DeadByDaylight_EInputInteractionType inputInteractionType, bool useGamePad, bool ignoreInteractMash);
};

// Class DeadByDaylight.DBDLobbyHud
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UDBDLobbyHud : public UDBDBaseHud
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDLobbyHud");
		return ptr;
	}



};

// Class DeadByDaylight.DBDLocalPlayer
// 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
class UDBDLocalPlayer : public ULocalPlayer
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDLocalPlayer");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMapFoliageDensityTunables
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UDBDMapFoliageDensityTunables : public UObject
{
public:
	TArray<struct FTypeFoliageToAutomateDensity>       FoliageToAutomateDensity;                                  // 0x0030(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMapFoliageDensityTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMarketingCameraController
// 0x0030 (FullSize[0x06C0] - InheritedSize[0x0690])
class UDBDMarketingCameraController : public UDebugCameraController
{
public:
	unsigned char                                      UnknownData_UXD5[0x30];                                    // 0x0690(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMarketingCameraController");
		return ptr;
	}



	void DBD_SetMarketingCameraTriggerSensitivity(float triggerSensitivity);
	void DBD_SetMarketingCameraDampeningFactor(float accelerationFactor, float decelerationFactor);
	void DBD_SetMarketingCameraControllerSensitivityModifier(float modifierValue, bool isEditingRight);
	void DBD_MarketingCameraToggleDampening();
};

// Class DeadByDaylight.DBDMaterialBlueprintLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDMaterialBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMaterialBlueprintLibrary");
		return ptr;
	}



	void STATIC_SetVectorParameterValueOnMeshComponent(class UMeshComponent* mesh, const struct FName& parameterName, const struct FLinearColor& Value);
	void STATIC_SetTransformParameterValueOnMeshComponent(class UMeshComponent* mesh, const struct FName& parameterName, const struct FTransform& Value);
	void STATIC_SetTransformParameterValueOnMaterialDynamic(class UMaterialInstanceDynamic* MATERIAL, const struct FName& parameterName, const struct FTransform& Value);
	void STATIC_SetTransformParameterInverseValueOnMaterialDynamic(class UMaterialInstanceDynamic* MATERIAL, const struct FName& parameterName, const struct FTransform& Value);
	TArray<class UMaterialInstanceDynamic*> STATIC_CreateDynamicMaterialInstanceForParticleSystem(class UParticleSystemComponent* System);
};

// Class DeadByDaylight.DBDMathBlueprintLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDMathBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMathBlueprintLibrary");
		return ptr;
	}



	bool STATIC_VectorIntersect(const struct Fvector& OriginA, const struct Fvector& ExtentA, const struct Fvector& OriginB, const struct Fvector& ExtentB);
	struct Fvector STATIC_VectorAbsoluteValue(const struct Fvector& A);
	TArray<struct FLinearColor> STATIC_TransformToMatrix(const struct FTransform& A);
};

// Class DeadByDaylight.DBDHookUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDHookUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDHookUtilities");
		return ptr;
	}



	bool STATIC_IsWraithHook(class UMeatHook* targetHook);
	bool STATIC_IsPigHook(class UMeatHook* targetHook);
	bool STATIC_IsNurseHook(class UMeatHook* targetHook);
	bool STATIC_IsLegionHook(class UMeatHook* targetHook);
	bool STATIC_IsHuntressHook(class UMeatHook* targetHook);
	bool STATIC_IsHookOf(class UMeatHook* targetHook, const struct FgameplayTag& hookTag);
	bool STATIC_IsHagHook(class UMeatHook* targetHook);
	bool STATIC_IsFreddyHook(class UMeatHook* targetHook);
	float STATIC_ComputeHookStrugglePercent(class UcamperPlayer* hookedCamper, float hookStruggleThreshold);
};

// Class DeadByDaylight.DBDMenuPlayer
// 0x00C0 (FullSize[0x0600] - InheritedSize[0x0540])
class UDBDMenuPlayer : public UDBDBasePlayer
{
public:
	unsigned char                                      UnknownData_17LJ[0x28];                                    // 0x0540(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               RoleSelected;                                              // 0x0568(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsOnline;                                                  // 0x0569(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DRGA[0x6];                                     // 0x056A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemEquipped;                                            // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      DarkMaterial[0x30];                                        // 0x0580(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	DeadByDaylight_EItemHandPosition                   _handPosition;                                             // 0x05B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KZS6[0x7];                                     // 0x05B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UskeletalMeshComponent*                      ItemMesh;                                                  // 0x05B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialHelper*                             MaterialHelper;                                            // 0x05C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _equippedItemName;                                         // 0x05C8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MLCM[0x2C];                                    // 0x05D4(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMenuPlayer");
		return ptr;
	}



	void WrappedOnDestroyed(class Uactor* destroyedActor);
	bool ShouldShowSpawnAnimation();
	bool ShouldApplyPositionOffset();
	void RestartInSequence_Internal();
	void OnCustomizationTransactionCompleted(DeadByDaylight_ECustomizationCategory category);
	DeadByDaylight_EItemHandPosition GetHandPosition();
	class UCharmSpawnerComponent* GetCharmSpawnerComponent();
	void BeginDestroySequence_Internal();
	void BeginCreateSequence();
};

// Class DeadByDaylight.DBDMenuSilhouette
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UDBDMenuSilhouette : public Uactor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMenuSilhouette");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMistLocatorComponent
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UDBDMistLocatorComponent : public UDBDLocatorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMistLocatorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMistManager
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UDBDMistManager : public Uactor
{
public:
	class UDBDAggregateParticleSystemComponent*        _particleSystemComp;                                       // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDMistManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDNavEvadeLoopComponent
// 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
class UDBDNavEvadeLoopComponent : public UactorComponent
{
public:
	struct Fvector                                     EvadeDoorExtent;                                           // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EvadeDoorFrontPointOffset;                                 // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EvadeDoorSideOffset;                                       // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SideBlockerOffset;                                         // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoSnapPointsUpHeight;                                    // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoSnapPointsDownHeight;                                  // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ECollisionChannel>              AutoSnapCollisionChannel;                                  // 0x00D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R47G[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      EvadeLoopFilterClass;                                      // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSafetyLength;                                           // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSafetyLength;                                           // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EAIEvadeLoopSides                   LimitToSide;                                               // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DebugEditMode;                                             // 0x00F1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawDebugFilter;                                           // 0x00F2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F64E[0x65];                                    // 0x00F3(0x0065) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDNavEvadeLoopComponent");
		return ptr;
	}



	void OnLevelReadyToPlay();
};

// Class DeadByDaylight.DBDNavModifierComponent
// 0x0050 (FullSize[0x01A0] - InheritedSize[0x0150])
class UDBDNavModifierComponent : public UNavModifierComponent
{
public:
	bool                                               ForceUseFailsafeExtent;                                    // 0x0150(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W57C[0x3];                                     // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UpdateModifierInterval;                                    // 0x0154(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StartNavigationRelevant;                                   // 0x0158(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AlwaysTickToCheckTransform;                                // 0x0159(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               RelevantPassiveMode;                                       // 0x015A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QDV3[0x45];                                    // 0x015B(0x0045) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDNavModifierComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDNetworkUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDNetworkUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDNetworkUtilities");
		return ptr;
	}



	bool STATIC_IsRunningDedicatedServerFlow();
	bool STATIC_IsOnDedicatedServerNetwork(class UObject* worldContextObject);
};

// Class DeadByDaylight.DBDObserverPlayer
// 0x0040 (FullSize[0x0510] - InheritedSize[0x04D0])
class UDBDObserverPlayer : public Ucharacter
{
public:
	class UDBDPlayerData*                              _playerData;                                               // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_47BN[0x38];                                    // 0x04D8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDObserverPlayer");
		return ptr;
	}



	void Server_PlayerReady();
};

// Class DeadByDaylight.DBDOnlineSessionClient
// 0x0010 (FullSize[0x01D8] - InheritedSize[0x01C8])
class UDBDOnlineSessionClient : public UOnlineSessionClient
{
public:
	unsigned char                                      UnknownData_MDTF[0x10];                                    // 0x01C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDOnlineSessionClient");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponent
// 0x00B8 (FullSize[0x0340] - InheritedSize[0x0288])
class UDBDOutlineComponent : public UBatchMeshCommands
{
public:
	unsigned char                                      UnknownData_U80S[0x7];                                     // 0x0288(0x0007) Fix Super Size
	bool                                               IsAlwaysVisible;                                           // 0x028F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumOutlineDistance;                                    // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4NJ1[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     OutlineName;                                               // 0x0298(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EM02[0x58];                                    // 0x02A8(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDOutlineRenderStrategySelector           _renderStrategySelector;                                   // 0x0300(0x0010) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	class UBatchMeshCommands*                          _batchMeshCommands;                                        // 0x0310(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0OX6[0x10];                                    // 0x0318(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBaseOutlineRenderStrategy*                  _renderingStrategy;                                        // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AEVE[0x10];                                    // 0x0330(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDOutlineComponent");
		return ptr;
	}



	void SetTargetColor(const struct FLinearColor& color);
	void SetOutlineIntensity(float outlineIntensity);
	void SetMinimumOutlineDistance(float distance);
	void SetMaterialCopyTarget(class UmaterialInterface* inMaterialToCopy);
	void SetIsOccludingOutlines(bool isOccluding);
	void SetFadeTexture(class Utexture* inFadeTexture);
	void SetFadeIntensity(float fadeIntensity);
	void ResetToTransparent();
	void RefreshOutlineComponent();
	void OnLevelReadyToPlay();
	void InitBatcher();
};

// Class DeadByDaylight.DBDOutlineComponentConfiguration
// 0x00B8 (FullSize[0x00F0] - InheritedSize[0x0038])
class UDBDOutlineComponentConfiguration : public UDataAsset
{
public:
	TMap<class UClass*, struct FOutlineConfiguration>  OutlineConfigurations;                                     // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FOutlineColourConfiguration> OutlineColours;                                            // 0x0088(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UmaterialInterface*                          OutlineMaterial;                                           // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UmaterialInterface*>                  DefaultTranslucencyMaterials;                              // 0x00E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponentCustomDepthConfiguration
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDOutlineComponentCustomDepthConfiguration : public UDBDOutlineComponentConfiguration
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentCustomDepthConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponentStencilConfiguration
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDOutlineComponentStencilConfiguration : public UDBDOutlineComponentConfiguration
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentStencilConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponentTranslucentConfiguration
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDOutlineComponentTranslucentConfiguration : public UDBDOutlineComponentConfiguration
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentTranslucentConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDParadiseGameMode
// 0x0000 (FullSize[0x0358] - InheritedSize[0x0358])
class UDBDParadiseGameMode : public UDBDBaseGameMode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDParadiseGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPartyFacade
// 0x0010 (FullSize[0x0460] - InheritedSize[0x0450])
class UDBDPartyFacade : public UPartyFacade
{
public:
	unsigned char                                      UnknownData_MMLI[0x10];                                    // 0x0450(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPartyFacade");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPawnSensingComponent
// 0x0008 (FullSize[0x0108] - InheritedSize[0x0100])
class UDBDPawnSensingComponent : public UPawnSensingComponent
{
public:
	bool                                               bSenseEverywhere;                                          // 0x0100(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4R1S[0x3];                                     // 0x0101(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PartiallyHiddenSensingDistance;                            // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPawnSensingComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPersistentData
// 0x0D58 (FullSize[0x0D88] - InheritedSize[0x0030])
class UDBDPersistentData : public UObject
{
public:
	struct FGamePersistentData                         _gamePersistentData;                                       // 0x0030(0x00F0) (Transient, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             _keepDataIDs;                                              // 0x0120(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, struct FPlayerPersistentData> _playerIdToPersistentDataMap;                              // 0x0130(0x0050) (Transient, NativeAccessSpecifierPrivate)
	struct FPlayerPersistentData                       _localPlayerPersistentData;                                // 0x0180(0x0708) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G1OQ[0x50];                                    // 0x0888(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCloudInventoryItem>                 _cloudInventory;                                           // 0x08D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PTS8[0x4A0];                                   // 0x08E8(0x04A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPersistentData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerCameraManager
// 0x0014 (FullSize[0x2760] - InheritedSize[0x274C])
class UDBDPlayerCameraManager : public UPlayerCameraManager
{
public:
	float                                              TargetingFOV;                                              // 0x274C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TScriptInterface<class UViewRotationStrategy>      _viewRotationStrategy;                                     // 0x2750(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerCameraManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerControllerBase
// 0x00A8 (FullSize[0x0630] - InheritedSize[0x0588])
class UDBDPlayerControllerBase : public UplayerController
{
public:
	unsigned char                                      UnknownData_R0J5[0xA0];                                    // 0x0588(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _mainCharacter;                                            // 0x0628(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerControllerBase");
		return ptr;
	}



	void Server_UpdateReplicatedPips(int pipsToAdd);
	void Server_SendMessage(int playerId, const struct FString& mirrorsId, const struct FString& playerName, const struct FString& msg);
	void Server_SendClientAuthentication(const struct FString& authClientTicket, uint64_t steamID, uint32_t ticketLength);
	void Server_RequestEnsureLogs();
	void Server_ReceivePlayerProfile(const struct FPlayerSavedProfileDataShared& savedProfileData, const struct FPlayerLoadoutData& playerLoadout);
	void Server_EACMessageFromClient(TArray<unsigned char> message, uint32_t messageLength);
	void Server_CheatFireScoreEvent(DeadByDaylight_EDBDScoreTypes category, float Value);
	void Server(const struct FString& commandLine);
	void DBD_UpdateLocalStats();
	void DBD_SetCurrentCharacterPrestigeDatesPast();
	void DBD_SetCurrentCharacterPrestigeDatesNow();
	void DBD_SetCurrentCharacterPrestigeDatesFuture();
	void DBD_FireTestScore(int category, float Value);
	void DBD_FillScoreCategory(int category);
	void DBD_FillAllScoreCategories();
	void DBD_DebugSendChatMessage(const struct FString& msg);
	void DBD_BuildFromTile(int matrixX, int matrixY, int rotation, const struct FString& name);
	void DBD_BuildFromSeed(int seed);
	void DBD_BuildFromPremadeMap(const struct FString& map);
	void DBD_BuildFromPlayerCount(int Count);
	void DBD_BuildFromMap(const struct FString& map);
	void Client_ValidateServer();
	void Client_SendServerAuthentication(const struct FString& authServerTicket, uint64_t steamID, uint32_t ticketLength);
	void Client_SendLogs(TArray<struct FString> ensures);
	void Client_RequestPlayerProfile();
	void Client_GameEnded();
	void Client_FinishedPlaying();
	void Client_EACMessageFromServer(TArray<unsigned char> message, uint32_t messageLength);
	void CallConsoleCmdOnServer_Server(const struct FString& commandLine);
};

// Class DeadByDaylight.DBDPlayerController
// 0x01B0 (FullSize[0x07E0] - InheritedSize[0x0630])
class UDBDPlayerController : public UDBDPlayerControllerBase
{
public:
	struct FScriptMulticastDelegate                    OnPawnLeavingGame;                                         // 0x0630(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocallyObservedChanged;                                  // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PFKX[0x38];                                    // 0x0650(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNetworkFenceActor*                          _theFence;                                                 // 0x0688(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MU1U[0x8];                                     // 0x0690(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDBaseInputHandler*                        _inputHandler;                                             // 0x0698(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2DCY[0x128];                                   // 0x06A0(0x0128) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Upawn*                                       _aiPawn;                                                   // 0x07C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A2DF[0x8];                                     // 0x07D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EPlayerRole                         _controllerGameRole;                                       // 0x07D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0UOE[0x7];                                     // 0x07D9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerController");
		return ptr;
	}



	void SetShouldMoveInputReplicateToServer(bool shouldReplicate);
	void Server_SetSpectatorModeInEditor(bool on, class UDBDPlayerState* spectatingPlayerState);
	void Server_SetSpectatorMode(bool on);
	void Server_SetReadyToTravel();
	void Server_SetHasMoveInputThisFrame(bool hasMoveInputThisFrame);
	void Server_RequestEndGame();
	void Server_LeaveGame(bool joiningLobby);
	void Server_DebugSend(const struct FString& data);
	void Server_ActivateAIAll(bool activate, int playerRank, int8_t playerRole);
	void Server_ActivateAI(bool activate, int playerRank);
	void OnRep_Fence();
	bool MobileJoystickInput_Pressed(int joystickIndex);
	bool IsSpectating();
	void ImplementRunLockMechanic();
	class UDBDPlayerState* GetSpectatedPlayerState();
	class UdbdPlayer* GetSpectatedPlayer();
	class UdbdPlayer* GetControlledPlayer();
	void Client_SpectateAI(class Upawn* aiPawn);
	void Client_SetSpectatorModeInEditor(bool on, class UDBDPlayerState* spectatingPlayerState);
	void Client_SetSpectatorMode(bool on);
	void Client_NotifyPlayerDisconnect(class UdbdPlayer* disconnectedPlayer);
};

// Class DeadByDaylight.DBDPlayerController_Menu
// 0x0000 (FullSize[0x0630] - InheritedSize[0x0630])
class UDBDPlayerController_Menu : public UDBDPlayerControllerBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerController_Menu");
		return ptr;
	}



	void TogglePlayerReadyState();
	void SetPlayerReady(bool isReady);
	void Server_SetReadyToTravel();
	void Server_SetPlayerReady(bool isReady);
	void Server_SetPlayerLoadout(const struct FPlayerLoadoutData& desiredLoadout);
	void Server_SetEquipedPerks(TArray<struct FName> perkIds, TArray<int> perkLevels, bool callOnRep);
	void Server_SetCustomizationMeshes(TArray<struct FName> itemIds);
	void Server_SetCustomizationCharm(const struct FName& charmId, int8_t slotIndex);
	void Server_SetCharacterLevel(int characterLevel, int prestigeLevel, bool callOnRep);
	void Server_SetCharacterData(int characterIndex, const struct FplayerDataSync& playerDataSync);
	void Server_GamePresetDataFromClient(const struct FgamePresetData& gameState);
	void Authority_TogglePlayerReadyState();
	void Authority_SetPlayerReady(bool isReady);
};

// Class DeadByDaylight.DBDPlayerLevelManager
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UDBDPlayerLevelManager : public UObject
{
public:
	unsigned char                                      UnknownData_TB1E[0xA8];                                    // 0x0030(0x00A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerLevelManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerPositionOffsetComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UDBDPlayerPositionOffsetComponent : public UactorComponent
{
public:
	struct FperPlatformFloat                           _menuZHeadOffset;                                          // 0x00B8(0x0004) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UZR2[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerPositionOffsetComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerStart
// 0x0008 (FullSize[0x0270] - InheritedSize[0x0268])
class UDBDPlayerStart : public UPlayerStart
{
public:
	unsigned char                                      UnknownData_AII4[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerStart");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerState
// 0x03E0 (FullSize[0x0718] - InheritedSize[0x0338])
class UDBDPlayerState : public UplayerState
{
public:
	unsigned char                                      UnknownData_ERCT[0x8];                                     // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAIFinishedPlayingEvent;                                  // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FString                                     mirrorsId;                                                 // 0x0350(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ContentVersion;                                            // 0x0360(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EAIDifficultyLevel                  _difficultyLevel;                                          // 0x0370(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               isPlayerReady;                                             // 0x0371(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EPlayerRole                         GameRole;                                                  // 0x0372(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8JOC[0x5];                                     // 0x0373(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URitualHandlerComponent*                     RitualHandler;                                             // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterStateData                         CamperData;                                                // 0x0380(0x0020) (Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	struct FCharacterStateData                         SlasherData;                                               // 0x03A0(0x0020) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FPlayerStateData                            playerData;                                                // 0x03C0(0x0038) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FPlayerCustomization                        PlayerCustomization;                                       // 0x03F8(0x0020) (Net, RepNotify, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GQTU[0x8];                                     // 0x0418(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerGameplayEvent;                                     // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameStateChanged;                                        // 0x0430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerGameStateChanged;                                  // 0x0440(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_29G7[0x68];                                    // 0x0450(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FUserGameStats                              _cachedUserGameStats;                                      // 0x04B8(0x00B0) (Protected, NativeAccessSpecifierProtected)
	TArray<struct FOngoingScoreData>                   _ongoingScoreEvents;                                       // 0x0568(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TS6V[0x8];                                     // 0x0578(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDRecentGameplayEvents                    _recentGameplayEvents;                                     // 0x0580(0x0050) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EIBZ[0x1];                                     // 0x05D0(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _inParadise;                                               // 0x05D1(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R1T0[0x6];                                     // 0x05D2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameplayNotificationManager*                _gameplayNotificationManager;                              // 0x05D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAchievementHandlerComponent*                _achievementHandler;                                       // 0x05E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterStatsHandlerComponent*             _characterStatsHandler;                                    // 0x05E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V9Z3[0x20];                                    // 0x05F0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     _platformAccountId;                                        // 0x0610(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _selectedCamperIndex;                                      // 0x0620(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _selectedSlasherIndex;                                     // 0x0624(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LNNT[0xCC];                                    // 0x0628(0x00CC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	PlatformsProviders_EPlatformFlag                   _platform;                                                 // 0x06F4(0x0001) ELEMENT_SIZE_MISMATCH (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C3Z1[0x3];                                     // 0x0628(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	PlatformsProviders_EProviderFlag                   _provider;                                                 // 0x06F8(0x0001) ELEMENT_SIZE_MISMATCH (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3Z9I[0x3];                                     // 0x06F8(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	bool                                               _crossplayAllowed;                                         // 0x06FC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelLoaded;                                          // 0x06FD(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_16H2[0x1A];                                    // 0x06FE(0x001A) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerState");
		return ptr;
	}



	void UpdateOngoingScores();
	void Server_SetSelectedCharacterId(DBDSharedTypes_EPlayerRole forRole, int Id, bool updateDisplayData);
	void Server_SetPlayerGameState(DBDSharedTypes_EGameState newGameState, bool isEscapeHatch);
	void Server_SetGameRole(DBDSharedTypes_EPlayerRole newPlayerRole);
	void Server_SelectSurvivor(int camperIndex);
	void Server_SelectKiller(int slasherIndex);
	void Server_HandleScoreEvent(const struct FgameplayTag& ScoreTypeTag, const struct FscoreEventData& scoreEventData);
	void OnRep_DisplayData();
	void OnRep_CustomizationData();
	void OnRep_BotDifficultyLevel();
	void Multicast_SetSelectedCharacterId(DBDSharedTypes_EPlayerRole forRole, int Id, bool updateDisplayData);
	void Multicast_SetPlayerGameState(DBDSharedTypes_EGameState newGameState, bool isEscapeHatch);
	void Multicast_SetInParadise();
	void Multicast_SetAsLeftMatch();
	void Multicast_SetAsDisconnected();
	void Multicast_FireGameplayEventWithScore(DeadByDaylight_EDBDScoreTypes playerGameplayEventType, float Amount, class Uactor* Effector, class Uactor* target, const struct FawardedScore& awardedScore);
	void Multicast_FireGameplayEvent(DeadByDaylight_EDBDScoreTypes playerGameplayEventType, float Amount, class Uactor* Effector, class Uactor* target);
	void InitializeAvailablePerkEvent(const struct FName& perkID);
	bool HasHappened(DeadByDaylight_EDBDScoreTypes gameplayEventType, float maxSecondsAgo);
	bool HasEscaped();
	DBDSharedTypes_EGameState GetPlayerGameState();
	class UGameplayNotificationManager* GetGameplayNotificationManager();
	void fireScoreEvent(DeadByDaylight_EDBDScoreTypes ScoreType, float percentToAward);
	void FireActiveStatusViewEvent(const struct FName& statusViewID, const struct FName& uniqueSourceID, const struct FstatusViewSource& statusViewSource);
	void FireActiveStatusEffectEvent(const struct FName& statusEffectID, float percentage, int iconFilePathIndex, int levelToDisplay);
	void Client_SetInParadise();
	void Client_SetGameRole(DBDSharedTypes_EPlayerRole newRole);
	void Client_RemoveItemFromInventory(const struct FName& toRemove, bool updateLoadout);
	void Client_RemotelyDispatchGameEventWithScore(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData, const struct FawardedScore& awardedScore);
	void Client_RemotelyDispatchGameEvent(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Client_HandleEscapeScoreEvent();
	void Authority_HandleScoreEvent(const struct FgameplayTag& ScoreTypeTag, const struct FscoreEventData& scoreEventData);
	void Authority_ForceEndOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes ScoreType);
	void Authority_ForceCancelOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes ScoreType);
	void Authority_EndOngoingScoreEvent(const struct FgameplayTag& ScoreTypeTag);
	void Authority_CancelOngoingScoreEvent(const struct FgameplayTag& ScoreTypeTag);
};

// Class DeadByDaylight.DBDPlayerState_Menu
// 0x0000 (FullSize[0x0718] - InheritedSize[0x0718])
class UDBDPlayerState_Menu : public UDBDPlayerState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerState_Menu");
		return ptr;
	}



	void Server_SetSelectedCharacterCustomizationMesh(DBDSharedTypes_EPlayerRole forRole, int Id, TArray<struct FName> customizationItemIds);
	void Server_SetSelectedCharacterCustomizationCharms(DBDSharedTypes_EPlayerRole forRole, int Id, TArray<struct FCharmIdSlot> CustomizationCharms);
	void Server_SetEquipment(DeadByDaylight_ELoadoutSlot slot, const struct FName& itemId, bool callOnRep);
	void Multicast_SetSelectedCharacterCustomizationMesh(DBDSharedTypes_EPlayerRole forRole, int Id, TArray<struct FName> customizationItemIds);
	void Multicast_SetSelectedCharacterCustomizationCharms(DBDSharedTypes_EPlayerRole forRole, int Id, TArray<struct FCharmIdSlot> CustomizationCharms);
};

// Class DeadByDaylight.DBDPlayerState_Lobby
// 0x0000 (FullSize[0x0718] - InheritedSize[0x0718])
class UDBDPlayerState_Lobby : public UDBDPlayerState_Menu
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDPlayerState_Lobby");
		return ptr;
	}



};

// Class DeadByDaylight.DBDProjectileUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDProjectileUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDProjectileUtilities");
		return ptr;
	}



	class UAuthoritativePoolProjectileProviderAdapter* STATIC_CreateProjectilePoolAdapter(class UObject* outer, class UAuthoritativeActorPoolComponent* pool);
};

// Class DeadByDaylight.DBDRankDesignTunables
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UDBDRankDesignTunables : public UObject
{
public:
	class UCurveFloat*                                 UnbrokenTimeAlivePointsCurve;                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderStealthPointsByDistanceWhileKillerNotChasingCurve;   // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderStealthPointsByDistanceWhileKillerIsChasingCurve;    // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderChasePointsByDurationCurve;                          // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderZAxisDistanceScalingCurve;                           // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ChaserChasePointsByDurationCurve;                          // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDRankDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDRichPresenceSubsystem
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UDBDRichPresenceSubsystem : public UGameInstanceSubsystem
{
public:
	OnlinePresence_ERichPresenceUserType               _userType;                                                 // 0x0038(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	OnlinePresence_ERichPresenceStatus                 _richPresenceStatus;                                       // 0x0039(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1TBF[0x2];                                     // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _timerRate;                                                // 0x003C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timerDelay;                                               // 0x0040(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isValidSetup;                                             // 0x0044(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I2RB[0xB];                                     // 0x0045(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDRichPresenceSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsBase
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UDBDHostSettingsParamsBase : public UObject
{
public:
	unsigned char                                      UnknownData_W3HB[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsBase");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsSessionInvalid
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDBDHostSettingsParamsSessionInvalid : public UDBDHostSettingsParamsBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsSessionInvalid");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsJoinabilityPreset
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UDBDHostSettingsParamsJoinabilityPreset : public UDBDHostSettingsParamsBase
{
public:
	unsigned char                                      UnknownData_VFCF[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsJoinabilityPreset");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsRanking
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UDBDHostSettingsParamsRanking : public UDBDHostSettingsParamsBase
{
public:
	unsigned char                                      UnknownData_W7XX[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsRanking");
		return ptr;
	}



};

// Class DeadByDaylight.DBDServerInstance
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UDBDServerInstance : public UObject
{
public:
	unsigned char                                      UnknownData_GMOD[0x68];                                    // 0x0030(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDBDHostSettingsParamsBase*>          _pendingSessionUpdates;                                    // 0x0098(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDServerInstance");
		return ptr;
	}



};

// Class DeadByDaylight.DBDSlasherData
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UDBDSlasherData : public UDBDPlayerData
{
public:
	unsigned char                                      UnknownData_S9T7[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDSlasherData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDSocialNotificationFactory
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UDBDSocialNotificationFactory : public UObject
{
public:
	class UToastManager*                               _toastMgr;                                                 // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDPartyFacade*                             _partyFacade;                                              // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendManager*                              _friendManager;                                            // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  _toastTable;                                               // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2NKD[0x18];                                    // 0x0050(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDSocialNotificationFactory");
		return ptr;
	}



};

// Class DeadByDaylight.DBDSpecialEventUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDSpecialEventUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDSpecialEventUtilities");
		return ptr;
	}



	bool STATIC_DoesPlayerHasEventOffering(class UdbdPlayer* player, DeadByDaylight_EOfferingEffectType offeringEffectType);
};

// Class DeadByDaylight.DBDSpectator
// 0x0020 (FullSize[0x02D8] - InheritedSize[0x02B8])
class UDBDSpectator : public USpectatorPawn
{
public:
	unsigned char                                      UnknownData_4PKK[0x20];                                    // 0x02B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDSpectator");
		return ptr;
	}



};

// Class DeadByDaylight.DBDSpringArmComponent
// 0x0050 (FullSize[0x02F0] - InheritedSize[0x02A0])
class UDBDSpringArmComponent : public USpringArmComponent
{
public:
	unsigned char                                      bEnableComponentwiseCameraLag : 1;                         // 0x02A0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6CR6[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct Fvector                                     ComponenwiseCameraLagSpeed;                                // 0x02A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetArmMinLength;                                        // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bEnableDistanceCameraLag : 1;                              // 0x02B4(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YW5J[0x3];                                     // 0x02B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraDistanceLagSpeed;                                    // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PERQ[0x4];                                     // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDrawDebugTraceMarkers : 1;                                // 0x02C0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G3B8[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class Uactor>>               IgnoreActors;                                              // 0x02C8(0x0010) (ZeroConstructor, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0GMU[0x18];                                    // 0x02D8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDSpringArmComponent");
		return ptr;
	}



	void IgnoreActor(class Uactor* actor, bool bShouldIgnore);
	void ClearIgnoreActors();
};

// Class DeadByDaylight.DBDSurfaceTypeName
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDSurfaceTypeName : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDSurfaceTypeName");
		return ptr;
	}



	TEnumAsByte<Engine_EPhysicalSurface> STATIC_GetSurfaceType(class UphysicalMaterial* physicalMaterial);
	struct FString STATIC_GetSurfaceName(class UphysicalMaterial* physicalMaterial);
	struct FName STATIC_ConvertFromPhysicalMaterial(class UphysicalMaterial* MATERIAL);
	struct FName STATIC_Convert(TEnumAsByte<Engine_EPhysicalSurface> surfaceType);
};

// Class DeadByDaylight.DBDTags
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDTags : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDTags");
		return ptr;
	}



};

// Class DeadByDaylight.DBDTimerComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UDBDTimerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_2HC2[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDTimerComponent");
		return ptr;
	}



	void Update(float deltaTime);
	void Unpause();
	void stop();
	void ResetTo(float time);
	void reset();
	void Pause();
	bool IsOnPause();
	bool IsDone();
	float GetTimeLeft();
	float GetTimeElapsed();
	float GetStartTime();
	float GetPercentTimeLeft();
	float GetPercentTimeElapsed();
};

// Class DeadByDaylight.DBDTunableUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDTunableUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDTunableUtilities");
		return ptr;
	}



	float STATIC_GetTunableValue(class UObject* worldContextObject, const struct FName& valueName);
	float STATIC_GetTunableRowHandleValue(const struct FDBDTunableRowHandle& rowHandle);
	float STATIC_GetSlasherTunableValue(class UObject* worldContextObject, const struct FName& valueName);
	float STATIC_GetEndGameTunableValue(class UObject* worldContextObject, const struct FName& valueName);
};

// Class DeadByDaylight.DBDUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDUtilities");
		return ptr;
	}



	bool STATIC_WithinRangeExclusive(float min, float max, float Value);
	bool STATIC_WithinRange(float min, float max, float Value);
	float STATIC_ToAngle_negative180to180(float angle);
	bool STATIC_SphereTraceSingle(const struct Fvector& start, const struct Fvector& end, class USphereComponent* sphere, struct FhitResult* outHitResult, TArray<class Uactor*> ignoredActors);
	bool STATIC_SphereTraceAgainstActor(const struct Fvector& start, const struct Fvector& end, class USphereComponent* sphere, class Uactor* actor, struct FhitResult* outHitResult);
	void STATIC_SetComponentCastHiddenShadow(class UprimitiveComponent* component, bool castShadow);
	int STATIC_ResolveCharacterIdFromPlayerState(class UDBDPlayerState* playerState);
	void STATIC_PrintStringEmbiggened(class UObject* worldContextObject, const struct FString& InString, const struct FLinearColor& TextColor, float duration, int key, float scale);
	int STATIC_PointerToInt(class UObject* obj);
	bool STATIC_NormalizeXY(struct Fvector* vector, float tolerance);
	void STATIC_LogString(const struct FString& InStr);
	void STATIC_LogMeshMaterialInfo(const struct FString& InStr, class UMeshComponent* root);
	void STATIC_LogMaterialInfo(const struct FString& InStr, class UmaterialInterface* root);
	bool STATIC_IsServer(class UObject* worldContextObject);
	bool STATIC_IsNonViolent();
	bool STATIC_IsLocallyObservingASurvivor(class UObject* worldContextObject);
	bool STATIC_IsLocallyObservingAKiller(class UObject* worldContextObject);
	bool STATIC_IsInSurvivorTeam(class UObject* worldContextObject);
	bool STATIC_IsInKillerTeam(class UObject* worldContextObject);
	bool STATIC_HasWalkableSurfaceForward(class UObject* worldContextObject, const struct Fvector& location, const struct Fvector& fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FhitResult>* outHits, struct Fvector* raycastStart);
	bool STATIC_HasLineOfSightToTarget(class UObject* worldContextObject, const struct Fvector& StartPosition, const struct Fvector& TargetPosition, class Uactor* ignoredActor, bool useComplex);
	bool STATIC_HasFloorForward(class UObject* worldContextObject, const struct Fvector& location, const struct Fvector& fowardVector, float distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FhitResult>* outHits, struct Fvector* raycastStart);
	struct FRotator STATIC_GetYawOnly(const struct FRotator& rotation);
	struct Fvector STATIC_GetXYVector(const struct Fvector& vector);
	float STATIC_GetVelocityXYAngleDegrees(class Uactor* actor);
	TArray<class Ugenerator*> STATIC_GetThreeClosestGenerators(TArray<class Ugenerator*> unrevealedGenerators);
	float STATIC_GetSlasherTunableValue(class UObject* worldContextObject, const struct FName& valueName);
	class UslasherPlayer* STATIC_GetSlasher(class UObject* worldContextObject);
	struct Fvector STATIC_GetSimilarVector(const struct Fvector& vector, float maximumDeviation);
	float STATIC_GetPlayRateForMontage(class UAnimMontage* montage, float time);
	float STATIC_GetPercentOfRange(float val, float min, float max);
	class UslasherPlayer* STATIC_GetOwningSlasher(class UanimInstance* animInstance);
	class UDBDBasePlayer* STATIC_GetOwningDBDBasePlayer(class UanimInstance* animInstance);
	class UskeletalMeshComponent* STATIC_GetOwningCharacterSkeletalMeshComponent(class UanimInstance* animInstance);
	class UcamperPlayer* STATIC_GetOwningCamper(class UanimInstance* animInstance);
	class Uactor* STATIC_GetOuterMostActor(class UanimInstance* animInstance);
	void STATIC_GetNearbyCampers(class Uworld* world, const struct Fvector& center, float radius, TArray<class UcamperPlayer*>* outNearbyCampers, TArray<class Uactor*> ignoredCampers);
	float STATIC_GetMontageLength(class UAnimMontage* montage);
	class UdbdPlayer* STATIC_GetLocallyObservedCharacter(class UObject* worldContextObject);
	class UcamperPlayer* STATIC_GetLocallyControlledSurvivor(class UObject* worldContextObject);
	class UslasherPlayer* STATIC_GetLocallyControlledKiller(class UObject* worldContextObject);
	DBDSharedTypes_EPlayerRole STATIC_GetLocallyControlledCharacterRole(class UObject* worldContextObject);
	class UdbdPlayer* STATIC_GetLocallyControlledCharacter(class UObject* worldContextObject);
	class UDBDPlayerControllerBase* STATIC_GetLocalDBDPlayerController(class UObject* worldContextObject);
	class UDBDPlayerCameraManager* STATIC_GetLocalDBDCameraManager(class UObject* worldContextObject);
	int STATIC_GetInventoryCountForMultipleCharacters(class UObject* worldContextObject, TArray<int> characterIndexes, const struct FName& itemId);
	int STATIC_GetInventoryCount(class UObject* worldContextObject, int characterIndex, const struct FName& itemId);
	void STATIC_GetInGameSurvivorsByRef(class UObject* worldContextObject);
	TArray<class UcamperPlayer*> STATIC_GetInGameSurvivors(class UObject* worldContextObject);
	TArray<class UdbdPlayer*> STATIC_GetInGamePlayers(class UObject* worldContextObject);
	struct FCollisionResponseContainer STATIC_GetImpactCollisionResponseContainer(class UprimitiveComponent* primitive);
	TEnumAsByte<Engine_ECollisionChannel> STATIC_GetImpactCollisionObjectType(class UprimitiveComponent* primitive);
	struct FText STATIC_GetFormattedNumberText(float Value, int maxDecimals, int minDecimals, bool leadingZero);
	struct FString STATIC_GetFormattedNumberString(float Value, int maxDecimals, int minDecimals, bool leadingZero);
	struct Fvector STATIC_GetFloorLocationAt(class UObject* worldContextObject, const struct Fvector& location, float raycastStartHeight, float raycastEndHeight, bool useComplex);
	class Uactor* STATIC_GetFirstActorWithTag(const struct FName& tag, TArray<class Uactor*> actorsArray);
	float STATIC_GetEndGameTunableValue(class UObject* worldContextObject, const struct FName& valueName);
	float STATIC_GetDistanceToNearestHookedSurvivor(class UdbdPlayer* player);
	class UDBDGameState* STATIC_GetDBDGameState(class UObject* worldContextObject);
	class UDBDGameMode* STATIC_GetDBDGameMode(class UObject* worldContextObject);
	class UDBDGameInstance* STATIC_GetDBDGameInstance(class UObject* worldContextObject);
	class UDBDAIPlayerController* STATIC_GetDBDAIPlayerController(class UdbdPlayer* player);
	struct FString STATIC_GetComponentOwnerName(class UactorComponent* actorComponent);
	struct FTransform STATIC_GetClosestSnapTransformOnOrbit(const struct Fvector& centerPoint, const struct Fvector& orbitterPosition, float distance);
	struct Fvector STATIC_GetClosestPointOnOrbit(const struct Fvector& centerPoint, const struct Fvector& orbitterPosition, float distance);
	class UProceduralLevelBuilder* STATIC_GetBuilder(class UObject* worldContextObject);
	float STATIC_GetAnimSequenceLength(class UAnimSequence* sequence);
	void STATIC_GetActorSpawners(TArray<class UActorSpawner*>* actorSpawners);
	struct FString STATIC_GetActorOwnerName(class Uactor* actor);
	DeadByDaylight_EShadowSystem STATIC_GetActiveShadowSystem();
	class Uactor* STATIC_FindParentOfClass(class Uactor* InChild, class UClass* InClass);
	bool STATIC_FindFloorSingle(class UObject* worldContextObject, const struct Fvector& location, float raycastLength, struct FhitResult* outHit);
	float STATIC_DistanceFromPointToPane(const struct Fvector& point, const struct Fplane& plane);
	class UObject* STATIC_DBDLoadAudioBankByAssetPtr(class Uactor* caller);
	void STATIC_DBDLoadAudioBankAsync(class UAkAudioBank* bank, class Uactor* caller);
	void STATIC_DBDLoadAudioBank(class UAkAudioBank* bank, class Uactor* caller);
	bool STATIC_DBDCapsuleTraceSingle(class UObject* worldContextObject, const struct Fvector& start, const struct Fvector& end, float radius, float HalfHeight, TEnumAsByte<Engine_ECollisionChannel> TraceChannel, bool bTraceComplex, TArray<class Uactor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, struct FhitResult* outHit, bool bIgnoreSelf);
	void STATIC_CrashGameCausingInterrupt();
	bool STATIC_BoxTraceAgainstActor(const struct Fvector& start, const struct Fvector& end, class UBoxComponent* box, class Uactor* actor, struct FhitResult* outHitResult);
	class UactorComponent* STATIC_AddComponentToActor(class UClass* compClass, const struct FName& compName, class Uactor* actor);
};

// Class DeadByDaylight.DBDUtilTimer
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDUtilTimer : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDUtilTimer");
		return ptr;
	}



	void STATIC_Update(struct FDBDTimer* timer, float deltaTime);
	void STATIC_stop(struct FDBDTimer* timer);
	void STATIC_ResetTo(struct FDBDTimer* timer, float time);
	void STATIC_reset(struct FDBDTimer* timer);
	bool STATIC_IsDone(const struct FDBDTimer& timer);
	float STATIC_GetTimeLeft(const struct FDBDTimer& timer);
	float STATIC_GetTimeElapsed(const struct FDBDTimer& timer);
	float STATIC_GetStartTime(const struct FDBDTimer& timer);
	float STATIC_GetPercentTimeLeft(const struct FDBDTimer& timer);
	float STATIC_GetPercentTimeElapsed(const struct FDBDTimer& timer);
};

// Class DeadByDaylight.DeadByDaylightGameMode
// 0x0000 (FullSize[0x0328] - InheritedSize[0x0328])
class UDeadByDaylightGameMode : public UGameMode
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DeadByDaylightGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DecoySlasherComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UDecoySlasherComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPalletStunned_Authority;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TriggerDecoyVisibilityVFX;                                 // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               HasTerrorRadius;                                           // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasRedGlow;                                                // 0x00D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isActive;                                                 // 0x00DA(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _initialized;                                              // 0x00DB(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LLUF[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTerrorRadiusEmitterComponent*               _terrorRadiusEmitter;                                      // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URedStainComponent*                          _redStainComponent;                                        // 0x00E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DecoySlasherComponent");
		return ptr;
	}



	void SetDecoyIsActive(bool isActive, const struct Fvector& location, const struct FRotator& rotation, bool visibleRedGlow);
	void OnRealSlasherTerrorRadiusChanged(float newValue);
	bool IsDecoyActive();
	class UTerrorRadiusEmitterComponent* GetTerrorRadiusEmitter();
	class UslasherPlayer* GetRealSlasher();
	void DoPostVFXUpdates(const struct Fvector& location, const struct FRotator& rotation);
	void CopyCustomizationFromSlasher();
	void Authority_PalletStun(class Uactor* instigator);
};

// Class DeadByDaylight.DedicatedServerManager
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UDedicatedServerManager : public UObject
{
public:
	TScriptInterface<class UDedicatedServerStartupInitializerInterface> _startupInitializer;                                       // 0x0030(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MBKL[0x20];                                    // 0x0040(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOnlineSystemHandler*                        _onlineSystemHandler;                                      // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DedicatedServerManager");
		return ptr;
	}



};

// Class DeadByDaylight.DedicatedServerStartupInitializerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDedicatedServerStartupInitializerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DedicatedServerStartupInitializerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.DefaultOutlineUpdateStrategy
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
class UDefaultOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedColorToSurvivor;                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _revealedColorToKiller;                                    // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DefaultOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DemogorgonPortal
// 0x00A8 (FullSize[0x0380] - InheritedSize[0x02D8])
class UDemogorgonPortal : public Uinteractable
{
public:
	class UprimitiveComponent*                         _portalAreaCollider;                                       // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UchargeableComponent*                        _destroyChargeable;                                        // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UchargeableComponent*                        _teleportChargeable;                                       // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EDemogorgonPortalState              _portalState;                                              // 0x02F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_312A[0x7];                                     // 0x02F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _portalIdleSound;                                          // 0x02F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _portalDestroyingStart;                                    // 0x0300(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _portalTeleportingSound;                                   // 0x0308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UparticleSystem*                             _destroyParticleSystem;                                    // 0x0310(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _destroyDuration;                                          // 0x0318(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZO8M[0x64];                                    // 0x031C(0x0064) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DemogorgonPortal");
		return ptr;
	}



	void TriggerDirtExplosion();
	void ShowPortalTeleportInteractionStartVFX();
	void ShowPortalActiveVFX();
	void RemovePortalTeleportInteractionStartVFX();
	void RemovePortalActiveVFX();
	void PlaySoundFromPortal(class UAkAudioEvent* soundEvent);
	void OnTeleportAbilityCooldownChangedVFX(bool isOnCooldown);
	void OnTargetedChanged();
	void OnPortalStateChanged(DeadByDaylight_EDemogorgonPortalState state);
	void OnEndOverlapPortalArea(class UprimitiveComponent* overlappedComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void OnBeginOverlapPortalArea(class UprimitiveComponent* overlappedComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
	void Multicast_SurvivorsInterruptedOnDestroy(TArray<class UdbdPlayer*> targets);
	void MakePortalDisappearVFX();
	bool IsTargeted();
	void Authority_StopDestroyingPlayers();
	void Authority_OnTeleportChargePercentChanged(class UchargeableComponent* chargeableComponent, float percentCompletionChange, float totalPercentComplete);
	void Authority_OnDestroyChargePercentChanged(class UchargeableComponent* chargeableComponent, float percentCompletionChange, float totalPercentComplete);
};

// Class DeadByDaylight.DemogorgonPortalEffectComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UDemogorgonPortalEffectComponent : public UactorComponent
{
public:
	struct FName                                       _statusEffectName;                                         // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _effectLingerDuration;                                     // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UstatusEffect>                _effect;                                                   // 0x00C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UdbdPlayer>                   _originatingPlayer;                                        // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UgameplayModifierContainer>   _originatingEffect;                                        // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FAYH[0x28];                                    // 0x00E0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DemogorgonPortalEffectComponent");
		return ptr;
	}



	void Authority_Initialize(const struct FName& statusEffect, float lingerDuration, class UdbdPlayer* originatingPlayer, class UgameplayModifierContainer* originatingEffect);
};

// Class DeadByDaylight.ObjectPlacementValidationStrategy
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UObjectPlacementValidationStrategy : public UactorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ObjectPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DefaultObjectPlacementValidationStrategy
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UDefaultObjectPlacementValidationStrategy : public UObjectPlacementValidationStrategy
{
public:
	struct Fvector                                     _objectPlacementRaycastStart;                              // 0x00B8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _objectPlacementRaycastEnd;                                // 0x00C4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatRange                                 _objectHeightRangeAroundBaseLocation;                      // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DefaultObjectPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DemogorgonPortalPlacementValidationStrategy
// 0x0020 (FullSize[0x0100] - InheritedSize[0x00E0])
class UDemogorgonPortalPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
{
public:
	class UPortalPlacerStateComponent*                 _portalPlacerState;                                        // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargedAttackStateComponent*                _chargedAttackState;                                       // 0x00E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distanceForWorldCollisionDetection;                       // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _numberOfGroundTest;                                       // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _portalEdgeTestRadius;                                     // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxElevationDifferentialOnPortalEdge;                     // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DemogorgonPortalPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DemogorgonStealthComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UDemogorgonStealthComponent : public UactorComponent
{
public:
	TWeakObjectPtr<class UstatusEffect>                _stealthEffect;                                            // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ERN7[0x20];                                    // 0x00C0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DemogorgonStealthComponent");
		return ptr;
	}



	void Authority_OnLevelReadyToPlay();
};

// Class DeadByDaylight.DestroyBreakableDefinition
// 0x0040 (FullSize[0x0540] - InheritedSize[0x0500])
class UDestroyBreakableDefinition : public UinteractionDefinition
{
public:
	float                                              _interactionTimePercentForDestroyEvent;                    // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JOJD[0x2C];                                    // 0x0504(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBreakableBase*                              _breakable;                                                // 0x0530(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ML70[0x8];                                     // 0x0538(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DestroyBreakableDefinition");
		return ptr;
	}



	class UBreakableBase* GetBreakable();
};

// Class DeadByDaylight.DetectionZoneUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDetectionZoneUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DetectionZoneUtilities");
		return ptr;
	}



	bool STATIC_DetectObstruction(class UdbdPlayer* player, DBDSharedTypes_EDetectionZone detectionZoneID, class UphysicalMaterial** physicalMaterialOut, struct Fvector* positionOut, struct Fvector* normalOut);
};

// Class DeadByDaylight.DisciplineEffect
// 0x0008 (FullSize[0x02B0] - InheritedSize[0x02A8])
class UDisciplineEffect : public UstatusEffect
{
public:
	float                                              _deactivationDelay;                                        // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IDPY[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DisciplineEffect");
		return ptr;
	}



	bool ShouldShowFakeKillerStain();
};

// Class DeadByDaylight.DiscordancePerk
// 0x0060 (FullSize[0x03A8] - InheritedSize[0x0348])
class UDiscordancePerk : public Uperk
{
public:
	TArray<struct FGeneratorQueryHandlePair>           _generatorQueryHandlePairs;                                // 0x0348(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YY96[0x30];                                    // 0x0358(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _effectRange[0x3];                                         // 0x0388(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _auraLingerDuration;                                       // 0x0394(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numSurvivorsRepairingToReveal;                            // 0x0398(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7XTQ[0x1];                                     // 0x039C(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isPerkConsideredActive;                                   // 0x039D(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T8LN[0x2];                                     // 0x039E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Ugenerator*                                  _genratorToCheckNextFrame;                                 // 0x03A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DiscordancePerk");
		return ptr;
	}



	void Multicast_AddLingeringGeneratorAura(class Ugenerator* generator);
	void Multicast_AddGeneratorAura(class Ugenerator* generator);
};

// Class DeadByDaylight.DisplayStand
// 0x0160 (FullSize[0x0390] - InheritedSize[0x0230])
class UDisplayStand : public Uactor
{
public:
	unsigned char                                      UnknownData_0JND[0x18];                                    // 0x0230(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _currentActorDisplayedClass;                               // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PX9A[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uactor*                                      _currentActorDisplayed;                                    // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _nextActorToDisplayClass;                                  // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CYNU[0x28];                                    // 0x0268(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, struct FTransform>             _offsetByClass;                                            // 0x0290(0x0050) (Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	TMap<class UClass*, bool>                          _enableRotationByClass;                                    // 0x02E0(0x0050) (Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	unsigned char                                      _defaultCharmClassDisplayable[0x30];                       // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_MGD8[0x29];                                    // 0x0360(0x0029) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _useOffsetMenuAnimations;                                  // 0x0389(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_33OX[0x6];                                     // 0x038A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DisplayStand");
		return ptr;
	}



	void OnCurrentActorDestroyed(class Uactor* destroyedActor);
};

// Class DeadByDaylight.DisplayStandCharmRequesterComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UDisplayStandCharmRequesterComponent : public UactorComponent
{
public:
	class UClass*                                      _menuCharmClass;                                           // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LGXK[0x20];                                    // 0x00C0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DisplayStandCharmRequesterComponent");
		return ptr;
	}



	void OnCharmDisplayed(class Uactor* actor);
};

// Class DeadByDaylight.DisplayStandCurrencyRequesterComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UDisplayStandCurrencyRequesterComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_BSSR[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _menuCurrencyDisplayableClass;                             // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DisplayStandCurrencyRequesterComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DisplayStandItemRequesterComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UDisplayStandItemRequesterComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_7RAA[0x40];                                    // 0x00B8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DisplayStandItemRequesterComponent");
		return ptr;
	}



	void LoadItemsOnCharacter(class Uactor* actor);
};

// Class DeadByDaylight.DisplayStandMeatHookRequesterComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UDisplayStandMeatHookRequesterComponent : public UactorComponent
{
public:
	class UClass*                                      _meatHookClass;                                            // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z93J[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DisplayStandMeatHookRequesterComponent");
		return ptr;
	}



	void OnMeatHookDisplayed(class Uactor* actor, TArray<struct FCharmIdSlot> charmIDs);
};

// Class DeadByDaylight.DlcHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDlcHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DlcHelper");
		return ptr;
	}



};

// Class DeadByDaylight.DoctorPowerAnimStateComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UDoctorPowerAnimStateComponent : public UactorComponent
{
public:
	DeadByDaylight_EDoctorAbilityType                  _abilityType;                                              // 0x00B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EDoctorAbilityPhase                 _abilityPhase;                                             // 0x00B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K9EN[0x6];                                     // 0x00BA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DoctorPowerAnimStateComponent");
		return ptr;
	}



	void SetCurrentAbilityType(DeadByDaylight_EDoctorAbilityType abilityType);
	void SetCurrentAbilityPhase(DeadByDaylight_EDoctorAbilityPhase abilityPhase);
};

// Class DeadByDaylight.VaultableOutlineUpdateStrategy
// 0x0008 (FullSize[0x0138] - InheritedSize[0x0130])
class UVaultableOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:
	bool                                               _canBeRevealedToLocalPlayer;                               // 0x0130(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5MUZ[0x7];                                     // 0x0131(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VaultableOutlineUpdateStrategy");
		return ptr;
	}



	void SetCanBeRevealedToLocalPlayer(bool canBeRevealedToLocalPlayer);
};

// Class DeadByDaylight.PalletOutlineUpdateStrategy
// 0x0010 (FullSize[0x0148] - InheritedSize[0x0138])
class UPalletOutlineUpdateStrategy : public UVaultableOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedByPowerColor;                                     // 0x0138(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PalletOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DreamPalletOutlineUpdateStrategy
// 0x0028 (FullSize[0x0170] - InheritedSize[0x0148])
class UDreamPalletOutlineUpdateStrategy : public UPalletOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedByMapColor;                                       // 0x0148(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1EOZ[0x18];                                    // 0x0158(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DreamPalletOutlineUpdateStrategy");
		return ptr;
	}



	void InitializeTunableValues(class UslasherPlayer* Killer);
};

// Class DeadByDaylight.DreamSnareOutlineUpdateStrategy
// 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
class UDreamSnareOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:
	unsigned char                                      UnknownData_QV2J[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DreamSnareOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DreamSnareTrapPlacementValidationStrategy
// 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
class UDreamSnareTrapPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
{
public:
	float                                              NumberOfGroundTest;                                        // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TrapRadius;                                                // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxElevationDifferentialOnTrapEdge;                        // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AZIB[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DreamSnareTrapPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DreamworldOnlyComponent
// 0x0020 (FullSize[0x0230] - InheritedSize[0x0210])
class UDreamworldOnlyComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_SAS3[0x20];                                    // 0x0210(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DreamworldOnlyComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DynamicGrass
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class UDynamicGrass : public Uactor
{
public:
	class UMaterialParameterCollection*                _worldSettings;                                            // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XVBM[0x10];                                    // 0x0238(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DynamicGrass");
		return ptr;
	}



};

// Class DeadByDaylight.EdgeObjectHandlingStrategy
// 0x0128 (FullSize[0x0158] - InheritedSize[0x0030])
class UEdgeObjectHandlingStrategy : public UObject
{
public:
	TArray<class UActorSpawner*>                       _edgeObjectSpawners;                                       // 0x0030(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UActorSpawner*>                       _edgeObjectBlockers;                                       // 0x0040(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2N8N[0x108];                                   // 0x0050(0x0108) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EdgeObjectHandlingStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.EditorActorVisualization
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UEditorActorVisualization : public USceneComponent
{
public:
	unsigned char                                      ActorVisualization[0x30];                                  // 0x0210(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FTransform                                  RelativeTransform;                                         // 0x0240(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EditorActorVisualization");
		return ptr;
	}



};

// Class DeadByDaylight.EditorMeshVisualization
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UEditorMeshVisualization : public USceneComponent
{
public:
	unsigned char                                      MeshVisualization[0x30];                                   // 0x0210(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	struct FTransform                                  RelativeTransform;                                         // 0x0240(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EditorMeshVisualization");
		return ptr;
	}



};

// Class DeadByDaylight.EffectsLocator
// 0x0068 (FullSize[0x0298] - InheritedSize[0x0230])
class UEffectsLocator : public Uactor
{
public:
	TArray<struct FEffectsLocatorTargets>              AffectedActors;                                            // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActorCaptureRadius;                                        // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z0A9[0x54];                                    // 0x0244(0x0054) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EffectsLocator");
		return ptr;
	}



	void OnLostActor(class Uactor* lostActor);
	void OnLeaveCollisionArea(class Uactor* OverlappedActor, class Uactor* otherActor);
	void OnFoundActor(class Uactor* foundActor);
	void OnEnterCollisionArea(class Uactor* OverlappedActor, class Uactor* otherActor);
	void OnActorTick(class UMaterialInstanceDynamic* actorMaterialInstanceDynamic);
};

// Class DeadByDaylight.EmblemRankContainer
// 0x01F8 (FullSize[0x0230] - InheritedSize[0x0038])
class UEmblemRankContainer : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_FAR7[0x1F8];                                   // 0x0038(0x01F8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EmblemRankContainer");
		return ptr;
	}



};

// Class DeadByDaylight.EmblemRankUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UEmblemRankUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EmblemRankUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.EndGameComponent
// 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
class UEndGameComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_DPHZ[0xA0];                                    // 0x00B8(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EndGameComponent");
		return ptr;
	}



	void PreventEndGameCollapseFromTriggering();
	bool GetHasEndGameBegun();
	void FireEndGameSacrificeScoreEvent(const struct FgameEventData& gameEventData);
	void DisableEndGameScenario();
};

// Class DeadByDaylight.EndGameEntity
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UEndGameEntity : public Uactor
{
public:
	class UskeletalMeshComponent*                      _skeletalMeshComponent;                                    // 0x0230(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EndGameEntity");
		return ptr;
	}



};

// Class DeadByDaylight.EndGameEntityAnimInstance
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UEndGameEntityAnimInstance : public UanimInstance
{
public:
	bool                                               _isFront;                                                  // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isBack;                                                   // 0x0271(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K2UC[0xE];                                     // 0x0272(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EndGameEntityAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.EndGameStateComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UEndGameStateComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_OWZ5[0x5];                                     // 0x00B8(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isEndGameOver;                                            // 0x00BD(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V0WC[0x2];                                     // 0x00BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _worldTimeAtLastModification;                              // 0x00C0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M9WP[0x44];                                    // 0x00C4(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _timeDilation;                                             // 0x0108(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _normalTotalTimeElapsedAtLastDilationModification;         // 0x010C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EEndGameScenarioTrigger             _endGameScenarioTrigger;                                   // 0x0110(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2I61[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EndGameStateComponent");
		return ptr;
	}



	void OnRep_WorldTimeAtLastDilationModification();
	void OnRep_TimeDilation();
	void OnRep_IsEndGameOver();
	void Multicast_SetIsInEndGameSimulation(bool endGameSimulation);
	bool IsTimerSlowedDown();
	bool IsEndGameOver();
	bool HasEndGameBegun();
	float GetElapsedTimePercent();
};

// Class DeadByDaylight.EnduranceVFXComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UEnduranceVFXComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_UGEI[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EnduranceVFXComponent");
		return ptr;
	}



	void Authority_ShowHighlight(class UgameplayModifierContainer* preventKOSource);
};

// Class DeadByDaylight.EnergyPoweredInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UEnergyPoweredInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EnergyPoweredInterface");
		return ptr;
	}



};

// Class DeadByDaylight.EnsureLoggingSubsystem
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class UEnsureLoggingSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_TH0D[0x38];                                    // 0x0038(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EnsureLoggingSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.entity
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class Uentity : public Uactor
{
public:
	class UCurveFloat*                                 _dissolveCurve;                                            // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _revealsCurve;                                             // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialHelper*                             _materialHelper;                                           // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UskeletalMeshComponent*                      _skeletalMesh;                                             // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.entity");
		return ptr;
	}



};

// Class DeadByDaylight.EscapeBlocker
// 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
class UEscapeBlocker : public Uactor
{
public:
	bool                                               _blockAllSurvivors;                                        // 0x0230(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TKZ8[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               _camperBlocker;                                            // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _playerDetectionZone;                                      // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HY44[0x18];                                    // 0x0248(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EscapeBlocker");
		return ptr;
	}



	void SetPlayerDetectionZone(class UBoxComponent* playerDetectionZone);
	void SetCamperBlocker(class UBoxComponent* camperBlocker);
	void OnRep_BlockAllSurvivors();
	void OnPlayerDetectionZoneEndOverlap(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void OnPlayerDetectionZoneBeginOverlap(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
	void DeactivatePlayerBlockerFX();
	void Authority_SetBlockAllSurvivors(bool block);
	void ActivatePlayerBlockerFX();
};

// Class DeadByDaylight.EscapeDoor
// 0x00E0 (FullSize[0x03B8] - InheritedSize[0x02D8])
class UEscapeDoor : public Uinteractable
{
public:
	unsigned char                                      UnknownData_TQFE[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct Fvector>                             EscapePositions;                                           // 0x02E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                             EscapeFire;                                                // 0x02F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UchargeableComponent*                        _killerOpenChargeable;                                     // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UchargeableComponent*                        _openChargeable;                                           // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                                _ak_audio_escape;                                          // 0x0310(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEscapeDoorAnimInstance*                     _escapeDoorAnimInstance;                                   // 0x0318(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _rootComponent;                                            // 0x0320(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _activated;                                                // 0x0328(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YMSH[0x7];                                     // 0x0329(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USpotLightComponent*                         _spotlight;                                                // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5WUS[0x48];                                    // 0x0338(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UcamperPlayer*                               _localOverlappingCamper;                                   // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SNSB[0x8];                                     // 0x0388(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlockableComponent*                         _doorSwitchBlockableComponent;                             // 0x0398(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JYIE[0x18];                                    // 0x03A0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EscapeDoor");
		return ptr;
	}



	void StartAtlantaDoorOpeningSound();
	void StartAtlantaDoorBeepingSound();
	void SetIsActivated(bool isActivated);
	void OnUnblockDoorSwitchCosmetic();
	void OnRep_Activated(bool oldActivated);
	void OnPlayerExitExitArea(class UdbdPlayer* player);
	void OnPlayerEnterExitArea(class UdbdPlayer* player);
	void OnExitOpenChanged(bool Opened);
	void OnExitGateOpened(class UdbdPlayer* player);
	void OnExitActivationChanged(bool Activated);
	void OnEscapeZoneEndOverlap(class Uactor* overlappingActor);
	void OnEscapeZoneBeginOverlap(class Uactor* overlappingActor);
	void OnBlockDoorSwitchCosmetic();
	void LightAllLights();
	bool IsDoorSwitchBlocked();
	bool isActivated();
	class USceneComponent* GetSwitchSceneComponent();
	struct Fvector GetParadiseServerLocation();
	class UChargeableInteractionDefinition* GetOpenEscapeInteraction();
	bool GetIsOpen();
	struct Fvector GetEscapeSwitchFloorLocation();
	class UskeletalMeshComponent* GetDoorSkeletalMeshComponent();
	bool GetAtlantaExitOpeningIndicatorVisibility();
};

// Class DeadByDaylight.EscapeDoorAnimInstance
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UEscapeDoorAnimInstance : public USleepingAnimInstance
{
public:
	bool                                               _isOpen;                                                   // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isOpenByKiller;                                           // 0x0281(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L960[0xE];                                     // 0x0282(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EscapeDoorAnimInstance");
		return ptr;
	}



	void SetIsOpenByKiller(bool isOpenByKiller);
	void SetIsOpen(bool isOpen);
	void PlaySound(class UAkAudioEvent* akEvent);
};

// Class DeadByDaylight.EscapeOutlineUpdateStrategy
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
class UEscapeOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _doorOpenColorForSurvivor;                                 // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _doorOpenColorForKiller;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EscapeOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.EscapeRequirementTracker
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UEscapeRequirementTracker : public UObject
{
public:
	TArray<class Ugenerator*>                          _escapeGenerators;                                         // 0x0030(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDGameState*                               _dbdGameState;                                             // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z3AK[0x18];                                    // 0x0048(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EscapeRequirementTracker");
		return ptr;
	}



	void OnGameEventDispatched(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
};

// Class DeadByDaylight.EscapeTile
// 0x0008 (FullSize[0x0348] - InheritedSize[0x0340])
class UEscapeTile : public UTile
{
public:
	unsigned char                                      UnknownData_7LUH[0x8];                                     // 0x0340(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EscapeTile");
		return ptr;
	}



};

// Class DeadByDaylight.EventObjectComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UEventObjectComponent : public UactorComponent
{
public:
	struct FName                                       _eventId;                                                  // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WP6Y[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EventObjectComponent");
		return ptr;
	}



};

// Class DeadByDaylight.EventGeneratorComponent
// 0x0008 (FullSize[0x00D0] - InheritedSize[0x00C8])
class UEventGeneratorComponent : public UEventObjectComponent
{
public:
	bool                                               _updateOultineForSurvivor;                                 // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _updateOultineForSlasher;                                  // 0x00C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X8Q6[0x6];                                     // 0x00CA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EventGeneratorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.EventHookComponent
// 0x0010 (FullSize[0x00D8] - InheritedSize[0x00C8])
class UEventHookComponent : public UEventObjectComponent
{
public:
	unsigned char                                      UnknownData_3J31[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EventHookComponent");
		return ptr;
	}



	void SetOutlineCarryingColorToDefault();
};

// Class DeadByDaylight.EvilWithinComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UEvilWithinComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTierChange;                                              // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                _currentTier;                                              // 0x00C8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _lastTierTimeStart;                                        // 0x00CC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C2NA[0x58];                                    // 0x00D0(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.EvilWithinComponent");
		return ptr;
	}



	void OnRep_CurrentTier(int previousTier);
	void OnLevelReadyToPlay();
	bool IsAtLastTier();
	float GetRequirementForTier(int tier);
	float GetPercentStalkingPointsInCurrentTier();
	int GetMaxTier();
	int GetCurrentTier();
	bool CanStandKill(class UdbdPlayer* player);
	bool CanBeStandingKilled(class UdbdPlayer* player);
	void Authority_OnStalkPointsAdded(float StalkPoints);
	void Authority_OnPlayerDisconnect(class UdbdPlayer* player);
	void Authority_NotifyKill(class UdbdPlayer* killedPlayer);
};

// Class DeadByDaylight.RestrictedPlacementAreaStrategy
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class URestrictedPlacementAreaStrategy : public UObject
{
public:
	unsigned char                                      UnknownData_Q4X9[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTunableRowHandle                        RestrictedRadius;                                          // 0x0040(0x0028) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4XNM[0x4];                                     // 0x0068(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHeightRestriction;                                      // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ExitGateSwitchesRestrictedPlacementAreaStrategy
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UExitGateSwitchesRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ExitGateSwitchesRestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ExitOpenedIndicatorWidget
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UExitOpenedIndicatorWidget : public UBaseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ExitOpenedIndicatorWidget");
		return ptr;
	}



};

// Class DeadByDaylight.ExposerCirclingComponent
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UExposerCirclingComponent : public USceneComponent
{
public:
	bool                                               DirectionFollows;                                          // 0x0210(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WEZJ[0x3];                                     // 0x0211(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinHeight;                                                 // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeight;                                                 // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinRadius;                                                 // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRadius;                                                 // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CirclingSpeed;                                             // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceBetweenPoints;                                     // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BezierModifier;                                            // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Samples;                                                   // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JWDP[0x3C];                                    // 0x0234(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ExposerCirclingComponent");
		return ptr;
	}



	void SetIsCircling(bool circling);
	void reset();
};

// Class DeadByDaylight.ExposerInteriorZoneComponent
// 0x0010 (FullSize[0x0460] - InheritedSize[0x0450])
class UExposerInteriorZoneComponent : public UBoxComponent
{
public:
	TArray<class USceneComponent*>                     ExposerSpawnPoints;                                        // 0x0450(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ExposerInteriorZoneComponent");
		return ptr;
	}



	void AddExposerSpawnPoint(class USceneComponent* point);
};

// Class DeadByDaylight.Fadeable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UFadeable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Fadeable");
		return ptr;
	}



	void OnFadeEnd(class Uactor* other);
	void OnFadeBegin(class Uactor* other);
	void OnAlphaChanged(float newAlpha, class Uactor* other);
};

// Class DeadByDaylight.FasterChestSearch
// 0x0000 (FullSize[0x02A8] - InheritedSize[0x02A8])
class UFasterChestSearch : public UstatusEffect
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FasterChestSearch");
		return ptr;
	}



};

// Class DeadByDaylight.FearMarketManager
// 0x00C8 (FullSize[0x00F8] - InheritedSize[0x0030])
class UFearMarketManager : public UObject
{
public:
	struct FFearMarketItemInstance                     PendingPurchaseFearMarketItem;                             // 0x0030(0x0018) (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IS1W[0x48];                                    // 0x0048(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFearMarketOfferingInstance                 _existingFearMarket;                                       // 0x0090(0x0020) (NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2RCP[0x40];                                    // 0x00B8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FearMarketManager");
		return ptr;
	}



	void ReceivedFearMarketData(bool Success);
};

// Class DeadByDaylight.FearMarketPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UFearMarketPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FearMarketPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.FireCracker
// 0x0040 (FullSize[0x0318] - InheritedSize[0x02D8])
class UFireCracker : public Uinteractable
{
public:
	class USphereComponent*                            _effectArea;                                               // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DebugDisplayEnabled;                                       // 0x02E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_534Z[0x7];                                     // 0x02E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UgameplayModifierContainer*>          _effectModifiers;                                          // 0x02E8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _exploded;                                                 // 0x02F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ABE6[0x7];                                     // 0x02F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class Uactor*>                              _actorsInRange;                                            // 0x0300(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _playerOwner;                                              // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FireCracker");
		return ptr;
	}



	bool ShouldDeafen(class UdbdPlayer* player, float* outDuration);
	bool ShouldBlind(class UdbdPlayer* player, float* outDuration);
	void OnFuseBurnUpdate(float deltaSeconds, float fuseTimeLeftPercent);
	void OnFuseBurnExit();
	void OnFuseBurnEnter();
	void OnExplode();
	void OnEffectsInitialized();
	void Multicast_InitFromSpawner(class Ucollectable* spawner);
	bool HasModifierOfType(const struct FgameplayTag& type);
	bool HasFlag(const struct FgameplayTag& flag);
	float GetModifierValue(const struct FgameplayTag& type);
	float GetExplosionRange();
	float GetExplosionEffectDuration();
	float GetExplosionDelay();
	bool GetExploded();
	TArray<class UgameplayModifierContainer*> GetEffects();
	float GetDeafnessEffectDuration(class UdbdPlayer* player);
	float GetBlindnessEffectDuration(class UdbdPlayer* player);
};

// Class DeadByDaylight.FirecrackerEffectHandlerComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UFirecrackerEffectHandlerComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFirecrackerInRangeBegin;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFirecrackerInRangeUpdate;                                // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFirecrackerInRangeEnd;                                   // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FFirecrackerEffectData>              _effectDataList;                                           // 0x00E8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FirecrackerEffectHandlerComponent");
		return ptr;
	}



	void SetFirecrackerInRange(class UFireCracker* FireCracker, bool inRange);
	void OnFirecrackerDestroyed(class Uactor* destroyedActor);
};

// Class DeadByDaylight.FirecrackerStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UFirecrackerStateMachine : public UStateMachine
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FirecrackerStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.FirstPersonViewComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UFirstPersonViewComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_J91P[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FirstPersonViewComponent");
		return ptr;
	}



};

// Class DeadByDaylight.FleeComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UFleeComponent : public UactorComponent
{
public:
	class Uactor*                                      _threat;                                                   // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1LOH[0x18];                                    // 0x00C0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FleeComponent");
		return ptr;
	}



};

// Class DeadByDaylight.FlickeringLight
// 0x0040 (FullSize[0x0290] - InheritedSize[0x0250])
class UFlickeringLight : public UGeneratorDrivenActor
{
public:
	DeadByDaylight_EFlickeringLightType                _lightComponentType;                                       // 0x0250(0x0001) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_482Y[0x3];                                     // 0x0250(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	TEnumAsByte<Engine_EDetailMode>                    _detailLevelBeforeCastShadows;                             // 0x0254(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPerPlatformBool                            _castShadow;                                               // 0x0255(0x0001) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K25N[0x2];                                     // 0x0256(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _innerConneAngle;                                          // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _outerConneAngle;                                          // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sourceLength;                                             // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sourceRadius;                                             // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _intensity;                                                // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _generatorActivated;                                       // 0x026C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BT12[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULightIntensityTimelineComponent*            _lightIntensityTimeline;                                   // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPointLightComponent*                        _pointLightComponent;                                      // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URectLightComponent*                         _rectLightComponent;                                       // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpotLightComponent*                         _spotLightComponent;                                       // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FlickeringLight");
		return ptr;
	}



	void StopFlickering();
	void StartFlickering();
	void Init();
	class ULocalLightComponent* GetActiveLightComponent();
};

// Class DeadByDaylight.FoliageActor
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UFoliageActor : public Uactor
{
public:
	class UFoliageDensityHISM*                         _foliageHISM;                                              // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FoliageActor");
		return ptr;
	}



};

// Class DeadByDaylight.FoliageDensityContainer
// 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
class UFoliageDensityContainer : public Uactor
{
public:
	TMap<struct FName, class UFoliageActor*>           _foliageActors;                                            // 0x0230(0x0050) (NativeAccessSpecifierPrivate)
	TMap<struct FName, class UFoliageDensityHISM*>     _foliageHISMs;                                             // 0x0280(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_17NQ[0x50];                                    // 0x02D0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDMapFoliageDensityTunables*               _mapFoliageDensityTunables;                                // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FoliageDensityContainer");
		return ptr;
	}



};

// Class DeadByDaylight.FoliageDensityHISM
// 0x0008 (FullSize[0x0690] - InheritedSize[0x0688])
class UFoliageDensityHISM : public UHierarchicalInstancedStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_H0E5[0x8];                                     // 0x0688(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FoliageDensityHISM");
		return ptr;
	}



};

// Class DeadByDaylight.FootSteps
// 0x0328 (FullSize[0x0558] - InheritedSize[0x0230])
class UFootSteps : public Uactor
{
public:
	unsigned char                                      UnknownData_HCJ6[0x4];                                     // 0x0230(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _raycastHalfAngle;                                         // 0x0234(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _raycastZOffset;                                           // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _raycastDistance;                                          // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMATERIAL*                                   _material;                                                 // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minimumDecalSize;                                         // 0x0248(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maximumDecalSize;                                         // 0x024C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _projectionTickness;                                       // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UYWE[0x4];                                     // 0x0254(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _fadeCurve;                                                // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _veinsCurve;                                               // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeInt                       _decalPoolSize;                                            // 0x0268(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeFloat                     _recycleThresholdPercentage;                               // 0x0308(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeFloat                     _recycleDistancePercentage;                                // 0x03A8(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeInt                       _maxOverlapping;                                           // 0x0448(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class UDBDDecalComponent*, struct FFootStep>  _footSteps;                                                // 0x04E8(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UDecalSpawner*                               _decalSpawner;                                             // 0x0538(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X028[0x18];                                    // 0x0540(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FootSteps");
		return ptr;
	}



	void OnLoudNoiseTriggered(class Uactor* originator, class Uactor* instigatingActor, const struct Fvector& location, bool shouldTrack, float* audibleRange, bool isQuickAction);
};

// Class DeadByDaylight.FootstepsPerceptionComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UFootstepsPerceptionComponent : public UactorComponent
{
public:
	TArray<struct FgameplayTag>                        _allowFootstepsSeenPerkFlags;                              // 0x00B8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FgameplayTag>                        _disallowFootstepsSeenPerkFlags;                           // 0x00C8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_03FA[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FootstepsPerceptionComponent");
		return ptr;
	}



};

// Class DeadByDaylight.FranklinsDemiseConsumedByEntityComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class UFranklinsDemiseConsumedByEntityComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_VVN5[0x20];                                    // 0x00B8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _consumeTimer;                                             // 0x00D8(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9E6O[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UstatusEffect*                               _camperStatus;                                             // 0x00F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _previousOwner;                                            // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _originatingPerkOwner;                                     // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J33Y[0x18];                                    // 0x0108(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FranklinsDemiseConsumedByEntityComponent");
		return ptr;
	}



	void OnRep_ConsumeTimer();
	void OnConsumedByEntity();
	void Authority_StartConsume(float duration, class UdbdPlayer* previousOwner, class UdbdPlayer* slasher);
};

// Class DeadByDaylight.FrenzyComponent
// 0x0110 (FullSize[0x01C8] - InheritedSize[0x00B8])
class UFrenzyComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFrenzyStarted;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFrenzyEnded;                                             // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFrenzyEndedNoCooldown;                                   // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutStartedDuringFrenzy;                      // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFrenzyReadyToStart;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C2IN[0x70];                                    // 0x0108(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UslasherPlayer*                              _slasher;                                                  // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DYK2[0x28];                                    // 0x0180(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UinteractionDefinition*                      _cooldownInteraction;                                      // 0x01A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_50O4[0x18];                                    // 0x01B0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FrenzyComponent");
		return ptr;
	}



	void StartFrenzy();
	void SetStartingFrenzy(bool startingFrenzy);
	void SetObjectState(class UGameplayTagContainerComponent* ObjectState);
	void ResumeFrenzyChargeDepletion();
	void PauseFrenzyChargeDepletion();
	void OnMoriStarted();
	void OnGameEventDispatched(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnFrenzyCooldownStarted();
	bool IsInFrenzyCooldown();
	bool IsInFrenzy();
	void InitializeFrenzy();
	bool HasStartedInjuredBleedoutDuringThisFrenzy();
	void EndFrenzy(DeadByDaylight_EFrenzyEndReason Reason);
	bool CanStartFrenzy();
	bool CanManuallyEndFrenzy();
};

// Class DeadByDaylight.FriendManager
// 0x0238 (FullSize[0x0268] - InheritedSize[0x0030])
class UFriendManager : public UObject
{
public:
	unsigned char                                      UnknownData_PU6B[0x238];                                   // 0x0030(0x0238) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FriendManager");
		return ptr;
	}



};

// Class DeadByDaylight.FriendSearchPopupScreen
// 0x0060 (FullSize[0x01A0] - InheritedSize[0x0140])
class UFriendSearchPopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_3Z8Z[0x60];                                    // 0x0140(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FriendSearchPopupScreen");
		return ptr;
	}



	void OnUnblockPlayer(const struct FString& friendKrakenID);
	void OnInviteFriend(const struct FString& friendKrakenID, bool isOffNetwork);
	void OnFriendSearchStart(const struct FString& searchText);
	void OnAcceptFriendInvite(const struct FString& friendKrakenID);
};

// Class DeadByDaylight.FriendsListScreen
// 0x00F0 (FullSize[0x0210] - InheritedSize[0x0120])
class UFriendsListScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_9Q7J[0xF0];                                    // 0x0120(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.FriendsListScreen");
		return ptr;
	}



	void OnViewProfile(const struct FString& friendId);
	void OnUnblockPlayer(const struct FString& playerId);
	void OnSendPartyInvite(const struct FString& friendId);
	void OnSearchForFriend();
	void OnRemoveFriend(const struct FString& friendId);
	void OnPartyJoinRequest(const struct FString& friendId);
	void OnDeclineFriendInvite(const struct FString& friendId);
	void OnCancelFriendInvite(const struct FString& friendId);
	void OnBlockPlayer(const struct FString& playerId);
	void OnAcceptFriendInvite(const struct FString& friendId);
};

// Class DeadByDaylight.GameAssetLibrary
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UGameAssetLibrary : public UAssetLibrary
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N7YP[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.GameEventAnalyticsComponent
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UGameEventAnalyticsComponent : public UObject
{
public:
	unsigned char                                      UnknownData_YKU4[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameEventAnalyticsComponent");
		return ptr;
	}



};

// Class DeadByDaylight.gameEventDispatcher
// 0x00B8 (FullSize[0x00F0] - InheritedSize[0x0038])
class UgameEventDispatcher : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_GTKH[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URecentGameEventTracker*                     _recentGameEventTracker;                                   // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOngoingGameEvent>                   _ongoingEvents;                                            // 0x0090(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IQCP[0x50];                                    // 0x00A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.gameEventDispatcher");
		return ptr;
	}



	void UnregisterListener(const struct FGameEventDispatcherHandleBP& gameEventDispatcherHandle);
	void RemotelyDispatch(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void RegisterListener(const struct FGameEventDispatcherHandleBP& gameEventDispatcherHandle);
	void LocallyDispatch(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	class URecentGameEventTracker* GetRecentEventTracker();
	void Authority_RemotelyDispatch(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_AccumulateOngoingGameEvent(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData, float ongoingWaitTime);
};

// Class DeadByDaylight.GameEventListenerCollectionComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UGameEventListenerCollectionComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_6HTO[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameEventListenerCollectionComponent");
		return ptr;
	}



	void UnlistenToGameEvent(const struct FgameplayTag& eventType);
	void UnlistenToAllGameEvents();
	void ListenToGameEvent(const struct FgameplayTag& eventType, const struct FScriptDelegate& delegateToBind);
	void AttachGameEventDispatcher(class UgameEventDispatcher* gameEventDispatcher);
};

// Class DeadByDaylight.GameEventTracker
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UGameEventTracker : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnGameplayEvent;                                           // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameflowEvent;                                           // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZVK4[0x18];                                    // 0x0050(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameEventTracker");
		return ptr;
	}



	void FireGameflowEvent(DeadByDaylight_EDBDScoreTypes eventType, float Amount, class UDBDPlayerState* instigator, const struct FName& data);
	void FireGameEvent(DeadByDaylight_EDBDScoreTypes eventType, float Amount, class Uactor* instigator, class Uactor* target);
};

// Class DeadByDaylight.GameFlowContextSystem
// 0x00D8 (FullSize[0x0110] - InheritedSize[0x0038])
class UGameFlowContextSystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_PR4E[0xC0];                                    // 0x0038(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URootMovie*                                  m_RootMovie;                                               // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5WCO[0x10];                                    // 0x0100(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameFlowContextSystem");
		return ptr;
	}



};

// Class DeadByDaylight.GameplayModifierFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UGameplayModifierFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameplayModifierFunctionLibrary");
		return ptr;
	}



	void STATIC_Authority_SetPlayerGameplayModifier(class UdbdPlayer* targetPlayer, const struct FgameplayTag& ModifierType, float modifierValue);
	void STATIC_Authority_SetPlayerGameplayFlag(class UdbdPlayer* targetPlayer, const struct FgameplayTag& flagType);
	void STATIC_Authority_ClearPlayerGameplayModifier(class UdbdPlayer* targetPlayer, const struct FgameplayTag& ModifierType);
	void STATIC_Authority_ClearPlayerGameplayFlag(class UdbdPlayer* targetPlayer, const struct FgameplayTag& flagType);
	void STATIC_Authority_ClearAllPlayerGameplayModifiers(class UdbdPlayer* targetPlayer);
	void STATIC_Authority_ClearAllPlayerGameplayFlags(class UdbdPlayer* targetPlayer);
};

// Class DeadByDaylight.GameplayNotificationManager
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UGameplayNotificationManager : public UactorComponent
{
public:
	unsigned char                                      UnknownData_FSMF[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameplayNotificationManager");
		return ptr;
	}



	void Multicast_FireGameplayNotification(class UgameplayModifierContainer* modifierContainer, bool addToHistory);
	void FireGameplayNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory);
};

// Class DeadByDaylight.GameplayNotificationUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UGameplayNotificationUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GameplayNotificationUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.GateFactory
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UGateFactory : public Uactor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GateFactory");
		return ptr;
	}



	class UGate* GetGate(DeadByDaylight_EGateType gateType);
};

// Class DeadByDaylight.generator
// 0x0158 (FullSize[0x0430] - InheritedSize[0x02D8])
class Ugenerator : public Uinteractable
{
public:
	unsigned char                                      UnknownData_86AG[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               Activated;                                                 // 0x02E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsRepaired;                                                // 0x02E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsPlaySkillcheckAesthetic;                                 // 0x02E2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceRevealToLocalPlayer;                                  // 0x02E3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HONG[0x4];                                     // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveLinearColor*                           KillerOutlineFadeCurve;                                    // 0x02E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NativePercentComplete;                                     // 0x02F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NK0D[0x4];                                     // 0x02F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGeneratorRepaired;                                       // 0x02F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGeneratorRepairedBySurvivor;                             // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsDamagedChanged;                                        // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9ZPY[0x30];                                    // 0x0328(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               FireLevelScoreEventOnFix;                                  // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZGMV[0x7];                                     // 0x0359(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OXJO[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FgameplayTag                                _repairSemanticTag;                                        // 0x0370(0x000C) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QDS4[0x4];                                     // 0x037C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDamageData                                 _damageData;                                               // 0x0380(0x0020) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MK98[0x4];                                     // 0x03A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isBlocked;                                                // 0x03A4(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBlockedFromCharging;                                    // 0x03A5(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EK6T[0x2];                                     // 0x03A6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _blockingSources[0x50];                                    // 0x03A6(0x0050) UNKNOWN PROPERTY: SetProperty
	class UchargeableComponent*                        _generatorCharge;                                          // 0x03F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerFloatTuple>                   _playerStartTimes;                                         // 0x0400(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I5B5[0x18];                                    // 0x0410(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isAutoCompleted;                                          // 0x0428(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2JFK[0x3];                                     // 0x0429(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _overchargeLevel;                                          // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.generator");
		return ptr;
	}



	void TriggerSkillCheckFailureLoudNoise(class UdbdPlayer* instigatingPlayer);
	void SpawnBloodEffectToSocket(const struct FName& name);
	bool ShouldDoOverchargeSkillcheck();
	void SetRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted);
	void SetOverchargeLevel(int overchargeLevel);
	void SetIsBlockedFromCharging(bool isBlockedFromCharging);
	void SetIsAutoCompleted(bool isAutoCompleted);
	void SetComplete(bool Complete);
	void ResetGenerator();
	void RemovePlayerStartTime(class UdbdPlayer* player);
	int PostAkEvent(class UAkAudioEvent* akEvent, int CallbackMask, const struct FScriptDelegate& PostEventCallback, TArray<struct FAkExternalSourceInfo> ExternalSources, const struct FString& in_EventName);
	void PlayFailSparksFX(class UdbdPlayer* interactingPlayer, bool explode);
	void OnUpdateChargeProgress(float newPercentComplete);
	void OnResetGenerator();
	void OnRepaired(bool showGeneratorCloneLoudNoise);
	void OnRep_IsBlocked();
	void OnRep_DamageData();
	void OnEscapeDoorActivated();
	void OnDamageCosmetic(bool Intense);
	void OnChargeChanged(class UchargeableComponent* chargeableComponent, float Percent);
	void OnBlockingStatusChanged(bool isBlocked);
	void NotifyRepairStart(class UdbdPlayer* player);
	void NotifyRepairFinish(class UdbdPlayer* player, class Uinteractor* interactor);
	void Multicast_PlayFailSparksFX(class UdbdPlayer* player, bool explode);
	void Multicast_DamageCosmetic(bool Intense);
	bool IsRegressing();
	bool IsIntenseDamage();
	bool isBlocked();
	bool IsBeingRepaired();
	bool IsBeingDamagedByKiller();
	float GetRepairPercentComplete();
	TArray<class UdbdPlayer*> GetRepairers();
	TArray<struct FPlayerFloatTuple> GetPlayerStartTimes();
	float GetPlayerStartTime(class UdbdPlayer* player);
	DBDSharedTypes_ESkillCheckCustomType GetOverchargeSkillCheckToTrigger();
	int GetOverchargeLevel();
	class UmapActorComponent* GetMapActorComponent();
	bool GetIsBlockedFromCharging();
	bool GetIsAutoCompleted();
	class UchargeableComponent* GetGeneratorChargeComponent();
	float GetChargePercentComplete();
	void ClearGeneratorOvercharge();
	bool CanSurvivorReactToBlockingEntity(class UcamperPlayer* Survivor);
	void BroadcastIsDamagedChangedEvent(class UdbdPlayer* player);
	void BroadcastGeneratorRepairedBySurvivor(class UdbdPlayer* repairingSurvivor);
	void BroadcastGeneratorRepaired(bool isAutoCompleted);
	void Authority_RepairDamage(class UdbdPlayer* repairedBy);
	void Authority_RemoveBlockingSource(class UObject* source);
	void Authority_OnChargeChanged(class UchargeableComponent* chargeableComponent, float percentCompletionChange, float totalPercentComplete);
	bool Authority_HasRepairedDamage(class UdbdPlayer* player);
	void Authority_Damage(class UdbdPlayer* damagedBy, float immediateRegressionPercent);
	void Authority_AddBlockingSource(class UObject* source);
	void AddPlayerStartTime(class UdbdPlayer* player, float startTime);
};

// Class DeadByDaylight.GeneratorEntity
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class UGeneratorEntity : public Uactor
{
public:
	class Ugenerator*                                  _associatedGenerator;                                      // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LXQZ[0x18];                                    // 0x0240(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GeneratorEntity");
		return ptr;
	}



	void SetSkeletalMeshActive(bool active);
	void SetAssociatedGenerator(class Ugenerator* generator);
	void PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float playRate, bool isFollower);
	class UMontagePlayer* GetMontagePlayer();
};

// Class DeadByDaylight.GeneratorEntityAnimInstance
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UGeneratorEntityAnimInstance : public UanimInstance
{
public:
	bool                                               IsCorrupted;                                               // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsCorrupted_End;                                           // 0x0271(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUncorrupted;                                             // 0x0272(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUncorrupted_End;                                         // 0x0273(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4V6R[0xC];                                     // 0x0274(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GeneratorEntityAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.GeneratorIndicatorWidget
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UGeneratorIndicatorWidget : public UBaseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GeneratorIndicatorWidget");
		return ptr;
	}



};

// Class DeadByDaylight.GeneratorOutlineUpdateStrategy
// 0x0038 (FullSize[0x0168] - InheritedSize[0x0130])
class UGeneratorOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _unrepairedAuraColor;                                      // 0x0130(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _fullyRepairedAuraColor;                                   // 0x0140(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1QIH[0x18];                                    // 0x0150(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GeneratorOutlineUpdateStrategy");
		return ptr;
	}



	struct FLinearColor GetYellowColor();
	struct FLinearColor GetWhiteColor();
};

// Class DeadByDaylight.GenericTextInputPopupScreen
// 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
class UGenericTextInputPopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_3A2U[0x18];                                    // 0x0140(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GenericTextInputPopupScreen");
		return ptr;
	}



	void OnTextInputChoiceSelected(int selectedButtonType, const struct FString& inputText);
};

// Class DeadByDaylight.GestureInteractionDefinition
// 0x0010 (FullSize[0x0510] - InheritedSize[0x0500])
class UGestureInteractionDefinition : public UinteractionDefinition
{
public:
	DeadByDaylight_EGestureID                          _gestureID;                                                // 0x0500(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6X4O[0xF];                                     // 0x0501(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GestureInteractionDefinition");
		return ptr;
	}



};

// Class DeadByDaylight.GhostStalkedComponent
// 0x0140 (FullSize[0x01F8] - InheritedSize[0x00B8])
class UGhostStalkedComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIsMarkedChanged;                                         // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsSpottingKillerChanged;                                 // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTagStateBool                               _isMarked;                                                 // 0x00D8(0x0030) (Net, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TA1W[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UstatusEffect*                               _ghostKillerInstinctEffect;                                // 0x0110(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OI0V[0x38];                                    // 0x0118(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _markTimer;                                                // 0x0150(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MQH3[0x10];                                    // 0x0158(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UslasherPlayer*                              _killer;                                                   // 0x0168(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStalkedComponent*                           _stalkedComponent;                                         // 0x0170(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X9OO[0x80];                                    // 0x0178(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GhostStalkedComponent");
		return ptr;
	}



	void OnKillerStealthChanged(bool isStealth);
	void OnIsSpottingKiller__DelegateSignature(bool isSpotting);
	void OnIsMarkedChanged__DelegateSignature(bool isMarked);
	void OnCharacterSightChanged(class Ucharacter* character, class UCharacterSightComponent* sightComponent);
	void Local_OnSpotKiller();
	bool isMarked();
	void Initialize(class UslasherPlayer* Killer);
	void Client_OnSpotKiller();
	void Authority_OnStalkedChargeFull(bool Completed, TArray<class Uactor*> instigatorsForCompletion);
};

// Class DeadByDaylight.GhostStalkPowerComponent
// 0x00A8 (FullSize[0x0160] - InheritedSize[0x00B8])
class UGhostStalkPowerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_WY64[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStalkerComponent*                           _stalkerComponent;                                         // 0x00E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _ghostStalkedComponentClassPtr[0x30];                      // 0x00F0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	float                                              _crouchAttackRequiredTimeSeconds;                          // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NG0H[0xC];                                     // 0x0124(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _debugMode;                                                // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5RLL[0x2F];                                    // 0x0131(0x002F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GhostStalkPowerComponent");
		return ptr;
	}



	void RefreshSurvivorMaximumSightDistance();
	void OnLeanStateChanged(DBDSharedTypes_ELeanState leanState);
	void OnIsCrouchedChanged(bool IsCrouched);
	void Authority_OnStalkModeChanged(bool isInStalkMode);
};

// Class DeadByDaylight.GhostStealthComponent
// 0x0148 (FullSize[0x0200] - InheritedSize[0x00B8])
class UGhostStealthComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSuccessfulAttackInStealth;                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStealthStateChanged;                                     // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsStealthChanged;                                        // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsBeingSpotChanged;                                      // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Local_OnStealthCancelledByPlayer;                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	DeadByDaylight_EGhostStealthState                  _stealthState;                                             // 0x0108(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S14O[0x3F];                                    // 0x0109(0x003F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _cooldownTimer;                                            // 0x0148(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class Ucharacter*, TWeakObjectPtr<class USoundMarker>> _markers;                                                  // 0x0150(0x0050) (UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KAF3[0x10];                                    // 0x01A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _markerMaxAngleOffset;                                     // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useKillerInstinctWhenSpotted;                             // 0x01B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3JDS[0x3];                                     // 0x01B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterSightableComponent*                _sightableComponent;                                       // 0x01B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStalkerComponent*                           _stalkerComponent;                                         // 0x01C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0X4M[0x38];                                    // 0x01C8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GhostStealthComponent");
		return ptr;
	}



	void SetRedStainVisibility(bool Visible);
	void OnSuccessfulAttackInStealth__DelegateSignature(class UdbdPlayer* target);
	void OnStealthStateChanged__DelegateSignature(DeadByDaylight_EGhostStealthState stealthState);
	void OnStealthCancelledByPlayer__DelegateSignature(class UdbdPlayer* player);
	void OnRep_StealthState(DeadByDaylight_EGhostStealthState PreviousState);
	void OnIsStealthChanged__DelegateSignature(bool isStealth);
	void OnIsBeingSpotChanged__DelegateSignature(bool isBeingSpot);
	void Multicast_BroadcastOnSuccessfulAttackInStealth(class UdbdPlayer* target);
	bool IsStealthReadyToActivate();
	bool isStealth();
	DeadByDaylight_EGhostStealthState GetStealthState();
	float GetStealthChargePercent();
	void Client_SpawnMarkerOnCharacter(class Ucharacter* character);
	void Client_OnPlayerSpottedKiller(class UdbdPlayer* player);
	void Authority_TryActivateStealth();
};

// Class DeadByDaylight.PlayerProfileDAL
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UPlayerProfileDAL : public UObject
{
public:
	unsigned char                                      UnknownData_JP18[0x58];                                    // 0x0030(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.PS4GRDKBaseProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UPS4GRDKBaseProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PS4GRDKBaseProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.GRDKProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UGRDKProfileDAL : public UPS4GRDKBaseProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.GRDKProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.HalloweenEventComponent
// 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
class UHalloweenEventComponent : public UactorComponent
{
public:
	class USectionnedChargeableComponent*              _toxinVialComponent;                                       // 0x00B8(0x0008) (Edit, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ASCM[0x80];                                    // 0x00C0(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HalloweenEventComponent");
		return ptr;
	}



	void Server_SpawnVial(float initialCharge);
	void OnRep_Vial();
	void OnFinishedPlaying(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	bool IsVialFull();
	class USectionnedChargeableComponent* GetVial();
};

// Class DeadByDaylight.HasTokenOrActivationTimerElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UHasTokenOrActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HasTokenOrActivationTimerElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.HasTokenPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UHasTokenPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HasTokenPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.Hatch
// 0x0058 (FullSize[0x0330] - InheritedSize[0x02D8])
class UHatch : public Uinteractable
{
public:
	unsigned char                                      UnknownData_KU16[0x30];                                    // 0x02D8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EHatchState                         _hatchState;                                               // 0x0308(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSurvivorEscaping;                                       // 0x0309(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isEndGameOver;                                            // 0x030A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isForceOpen;                                              // 0x030B(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _attemptToCloseHatchOnNextEscape;                          // 0x030C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6OCV[0x23];                                    // 0x030D(0x0023) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Hatch");
		return ptr;
	}



	void SetIsSurvivorEscaping(bool escaping);
	void ResetTimer(float duration);
	void OnSurvivorsLeftChanged(int survivorRemaining);
	void OnSurvivorEscaping();
	void OnSurvivorEscapeInterrupted();
	void OnSurvivorEscaped();
	void OnRep_HatchState(DeadByDaylight_EHatchState oldState);
	void OnHatchVisibilityChanged(bool isVisible);
	void OnHatchStateModified(DeadByDaylight_EHatchState oldState, DeadByDaylight_EHatchState NewState);
	void OnGeneratorFixed(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnEndGameOver(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Local_SetHatchState(bool open);
	bool IsSurvivorEscaping();
	bool isOpen();
	DeadByDaylight_EHatchState GetHatchState();
	class USceneComponent* GetHatchCenter();
	class USceneComponent* GetEscapeFocalPoint();
	class UAnimationMontageSlave* GetAnimationMontageSlave();
	void FXOpenHatch();
	void FXEndSmoke();
	void FXCloseHatch();
	void Authority_SetIsForceOpen(bool isForcedOpen);
	void Authority_SetHatchState(DeadByDaylight_EHatchState NewState);
	void Authority_OnCloseTimerComplete();
	void Authority_CheckedOpenHatch();
	void Authority_CheckedOpenForceClosedHatch();
	void Authority_CheckedCloseHatch();
	void Authority_CheckedChangeActiveState();
};

// Class DeadByDaylight.HatchOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class UHatchOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HatchOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.HexSpawner
// 0x0018 (FullSize[0x02E0] - InheritedSize[0x02C8])
class UHexSpawner : public UActorSpawner
{
public:
	unsigned char                                      UnknownData_RQOJ[0x8];                                     // 0x02C8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_V2TX[0x10];                                    // 0x02D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HexSpawner");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerOverlapHISMComponent
// 0x0010 (FullSize[0x06C0] - InheritedSize[0x06B0])
class UPlayerOverlapHISMComponent : public UHISMMaterialHelperComponent
{
public:
	TArray<class UmaterialInterface*>                  _playerOverlapOverrides;                                   // 0x06B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerOverlapHISMComponent");
		return ptr;
	}



};

// Class DeadByDaylight.HitValidationAnalyticsComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UHitValidationAnalyticsComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_3UUM[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HitValidationAnalyticsComponent");
		return ptr;
	}



};

// Class DeadByDaylight.HitValidationConfigsComponent
// 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
class UHitValidationConfigsComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_UNEZ[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HitValidationConfigsComponent");
		return ptr;
	}



	void DBD_PrintInGameHitValidationConfigs();
};

// Class DeadByDaylight.HitValidatorAnalyticsListenerComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UHitValidatorAnalyticsListenerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_MNN5[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HitValidatorAnalyticsListenerComponent");
		return ptr;
	}



};

// Class DeadByDaylight.HitValidatorConfigurator
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UHitValidatorConfigurator : public UBaseHitValidationConfigurator
{
public:
	DeadByDaylight_EHitValidatorConfigName             _configName;                                               // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RGWL[0x17];                                    // 0x00C1(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HitValidatorConfigurator");
		return ptr;
	}



};

// Class DeadByDaylight.HookableComponent
// 0x0098 (FullSize[0x0150] - InheritedSize[0x00B8])
class UHookableComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_VI1B[0x98];                                    // 0x00B8(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HookableComponent");
		return ptr;
	}



	void Multicast_SetDrainTimerPercentLeft(float percentTime);
	void Multicast_DebugSetHookDrainStage(int drainStage);
	float GetDrainTimerPercentLeft();
	void Authority_SetDrainTimerPercentLeft(float percentTime);
};

// Class DeadByDaylight.HookAnalyticsBlueprintLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UHookAnalyticsBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HookAnalyticsBlueprintLibrary");
		return ptr;
	}



	void STATIC_IncrementHookSpawned();
};

// Class DeadByDaylight.HookedIndicatorWidget
// 0x0010 (FullSize[0x0340] - InheritedSize[0x0330])
class UHookedIndicatorWidget : public UBaseIndicatorWidget
{
public:
	float                                              HookedIndicatorDuration;                                   // 0x0330(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5PNW[0xC];                                     // 0x0334(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HookedIndicatorWidget");
		return ptr;
	}



};

// Class DeadByDaylight.HooksWithSurvivorRestrictedPlacementAreaStrategy
// 0x0018 (FullSize[0x0088] - InheritedSize[0x0070])
class UHooksWithSurvivorRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{
public:
	unsigned char                                      UnknownData_NMA7[0x18];                                    // 0x0070(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HooksWithSurvivorRestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.HudScreen
// 0x00F0 (FullSize[0x0210] - InheritedSize[0x0120])
class UHudScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_G5LR[0xF0];                                    // 0x0120(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HudScreen");
		return ptr;
	}



	void OnTutorialTallyNext();
	void OnTutorialTallyLeave();
	void OnTutorialNotificationClosedByUserInput();
	void OnQuitGameButtonClick();
	void OnPreviousButtonClick();
	void OnPerkClicked(const struct FName& perkID);
	void OnNextButtonClick();
	void OnLeaveButtonClick();
	void OnCancelQuitGameButtonClick();
};

// Class DeadByDaylight.HudScreenCoreUMG
// 0x04A8 (FullSize[0x06B8] - InheritedSize[0x0210])
class UHudScreenCoreUMG : public UHudScreen
{
public:
	class UCoreHudRootWidget*                          _rootWidget;                                               // 0x0210(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BL4N[0x170];                                   // 0x0218(0x0170) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTutorialsUtilities*                         _tutorialsUtilities;                                       // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UPlayerStatusViewInterface>> _playerStatusInterfaces;                                   // 0x0390(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FhudObjectiveViewData                       _hudObjectiveViewData;                                     // 0x03A0(0x0008) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FInteractionProgressViewData                _interactionProgressViewData;                              // 0x03A8(0x0040) (Transient, NativeAccessSpecifierPrivate)
	struct FitemBundleViewData                         _itemBundleViewData;                                       // 0x03E8(0x00D8) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_13ED[0x50];                                    // 0x04C0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FpowerBundleViewData                        _powerBundleViewData;                                      // 0x0510(0x00D0) (Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerStatusViewData>               _playerStatusViewData;                                     // 0x05E0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WMQL[0xC8];                                    // 0x05F0(0x00C8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HudScreenCoreUMG");
		return ptr;
	}



	void OnTutorialHudFadeOutTriggered();
	void OnTutorialHudFadeInTriggered();
	void OnTallyTutoNextButtonClicked();
	void OnTallyTutoLeaveButtonClicked();
	void OnSpectateRightArrowClicked();
	void OnSpectateLeftArrowClicked();
	void OnSpectateLeaveButtonClicked();
	void OnNotifTutoConfirmButtonClicked();
	void OnHUDWidgetFadeOutCompleted();
	void OnHideStartSequenceCompleted();
};

// Class DeadByDaylight.HudScreenUMG
// 0x0108 (FullSize[0x0318] - InheritedSize[0x0210])
class UHudScreenUMG : public UHudScreen
{
public:
	unsigned char                                      UnknownData_LOIT[0x8];                                     // 0x0210(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUmgPlayerHud*                               _atlantaHud;                                               // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USafeZoneManagerWidget*                      _safeZoneManager;                                          // 0x0220(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNoiseIndicatorWidget*>               _closeNoiseIndicatorWidgets;                               // 0x0228(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UExitOpenedIndicatorWidget*>          _exitOpenedIndicatorWidgets;                               // 0x0238(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGeneratorIndicatorWidget*>           _generatorIndicatorWidgets;                                // 0x0248(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNoiseIndicatorWidget*>               _hatchIndicatorWidgets;                                    // 0x0258(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UHookedIndicatorWidget*>              _hookedIndicatorWidgets;                                   // 0x0268(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKillerNoiseIndicatorWidget*>         _killerCuesIndicatorWidgets;                               // 0x0278(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FString, class UNoiseIndicatorWidget*> _loudNoiseIndicatorWidgets;                                // 0x0288(0x0050) (ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPromptManager*                              _promptManager;                                            // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAtlantaTutorialObjectiveManager*            _objectiveManager;                                         // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      AtlantaObjectiveClass[0x30];                               // 0x02E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.HudScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.CannibalChainsawPower
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCannibalChainsawPower : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CannibalChainsawPower");
		return ptr;
	}



};

// Class DeadByDaylight.ChainLinkable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UChainLinkable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChainLinkable");
		return ptr;
	}



};

// Class DeadByDaylight.ChargeableProgressSource
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UChargeableProgressSource : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ChargeableProgressSource");
		return ptr;
	}



};

// Class DeadByDaylight.IdentityValidation
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UIdentityValidation : public UObject
{
public:
	unsigned char                                      UnknownData_S1NV[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.IdentityValidation");
		return ptr;
	}



};

// Class DeadByDaylight.ethereal
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class Uethereal : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ethereal");
		return ptr;
	}



};

// Class DeadByDaylight.Madness
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMadness : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Madness");
		return ptr;
	}



};

// Class DeadByDaylight.MovementSettings
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMovementSettings : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MovementSettings");
		return ptr;
	}



};

// Class DeadByDaylight.InactiveCooldownTimerPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UInactiveCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.InactiveCooldownTimerPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.InboxScreen
// 0x00D0 (FullSize[0x01F0] - InheritedSize[0x0120])
class UInboxScreen : public UScreenBase
{
public:
	class UUMGInboxScreen*                             _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInboxMessageUIData>                 _newsMessages;                                             // 0x0128(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInboxMessageUIData>                 _rewardsMessages;                                          // 0x0138(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInboxMessageUIData>                 _socialMessages;                                           // 0x0148(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2WCW[0x98];                                    // 0x0158(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.InboxScreen");
		return ptr;
	}



};

// Class DeadByDaylight.InfectedInteractableComponent
// 0x00F0 (FullSize[0x01A8] - InheritedSize[0x00B8])
class UInfectedInteractableComponent : public UactorComponent
{
public:
	class UCurveFloat*                                 VomitAlphaCurve;                                           // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       VomitAlphaParameterName;                                   // 0x00C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5E8V[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimelineComponent*                          _vomitAlphaTimeline;                                       // 0x00D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WBWX[0xD0];                                    // 0x00D8(0x00D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.InfectedInteractableComponent");
		return ptr;
	}



	void SetInteractableMeshAlpha(float Alpha);
	void OnVomitAlphaUpdate(float Alpha);
	void Multicast_FadeOutVomit();
	void Multicast_FadeInVomit();
	void Multicast_DestroyComponent();
	void Multicast_DebugDisplayLifetime(float remainingLifetime);
	class Uinteractable* GetOwningInteractable();
	void Authority_OnOwningInteractableBeginOrEndUse(bool inUse, class UdbdPlayer* interactingPlayer);
	void Authority_OnHitWithVomit();
	bool Authority_IsAMaxSicknessSurvivorInteracting();
};

// Class DeadByDaylight.IniAssetLibrary
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UIniAssetLibrary : public UAssetLibrary
{
public:
	unsigned char                                      UnknownData_UDXT[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.IniAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.InteractionAnimNotify
// 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
class UInteractionAnimNotify : public UanimNotify
{
public:
	struct FName                                       NotifyID;                                                  // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UA5U[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.InteractionAnimNotify");
		return ptr;
	}



};

// Class DeadByDaylight.InteractionDetectorComponent
// 0x00F8 (FullSize[0x01B0] - InheritedSize[0x00B8])
class UInteractionDetectorComponent : public UactorComponent
{
public:
	class UprimitiveComponent*                         _detectionPrimitive;                                       // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _overlappingInteractables[0x50];                           // 0x00C0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _overlappingPrimitiveComponents[0x50];                     // 0x0110(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _ignoredActors[0x50];                                      // 0x0160(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.InteractionDetectorComponent");
		return ptr;
	}



	void SetDetectionPrimitive(class UprimitiveComponent* detectionPrimitive);
	void OnLocallyObservedChanged(class UdbdPlayer* player);
	class UprimitiveComponent* GetDetectionPrimitive();
	void EndOverlapCallback(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void BeginOverlapCallback(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool fromSweep, const struct FhitResult& sweepResult);
	void AddIgnoredActor(class Uactor* ignored);
};

// Class DeadByDaylight.InteractionProficiency
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UInteractionProficiency : public UObject
{
public:
	TArray<struct FString>                             InteractionIDs;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1CGX[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.InteractionProficiency");
		return ptr;
	}



	float GetValue(class UChargeableInteractionDefinition* chargeableInteraction, class UdbdPlayer* player);
	DBDSharedTypes_EStatusEffectType GetType(float Value);
	int GetLevel(class UChargeableInteractionDefinition* chargeableInteraction, class UdbdPlayer* player);
	bool GetIsActive(class UChargeableInteractionDefinition* chargeableInteraction, class UdbdPlayer* player);
};

// Class DeadByDaylight.interactor
// 0x00E0 (FullSize[0x02F0] - InheritedSize[0x0210])
class Uinteractor : public USceneComponent
{
public:
	unsigned char                                      UnknownData_ODHP[0x20];                                    // 0x0210(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     interactorName;                                            // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IISX[0x30];                                    // 0x0240(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               IsUsable;                                                  // 0x0270(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4SRU[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct Flock                                       _lock;                                                     // 0x0274(0x0008) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct Flock                                       _reservation;                                              // 0x027C(0x0008) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z31H[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UinteractionDefinition*                      _currentInteraction;                                       // 0x0288(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UinteractionDefinition*>              _interactionDefinitions;                                   // 0x0290(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FActivationDefinition                       _activationDefinition;                                     // 0x02A0(0x0028) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1Y9S[0x28];                                    // 0x02C8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.interactor");
		return ptr;
	}



	void SetIsUsable(bool isUsableParam);
	void Multicast_ReservationStatus(class UdbdPlayer* player, bool lock);
	void Multicast_LockStatus(class UdbdPlayer* player, class UinteractionDefinition* currentInteraction, bool lock);
	bool IsInterruptionPossible(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee, class UinteractionDefinition* Definition, class UinterruptionDefinition* interruption);
	bool isInteracting();
	bool GetIsUsable();
	TArray<class UinteractionDefinition*> GetInteractionDefinitions();
	class UdbdPlayer* GetInteractingPlayerRaw();
	class Uinteractable* GetInteractable();
	class UinteractionDefinition* GetCurrentInteraction();
	bool CanPerformInteraction(class UdbdPlayer* player, class UinteractionDefinition* Definition);
	void BPPostInitializeComponents();
	class UdbdPlayer* Authority_GetInteractingPlayer();
};

// Class DeadByDaylight.interruptionDefinition
// 0x00B0 (FullSize[0x02C0] - InheritedSize[0x0210])
class UinterruptionDefinition : public USceneComponent
{
public:
	struct FName                                       InterruptionID;                                            // 0x0210(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _usesWorldCoordinates;                                     // 0x021C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _snapInterruptor;                                          // 0x021D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LHG4[0x2];                                     // 0x021E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _interruptionSnapPointForInterruptor;                      // 0x0220(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor                 _animationMontageToPlayOnInterruptionEnterForInterruptor;  // 0x0250(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor                 _animationMontageToPlayOnInterruptionForInterruptorNew;    // 0x0270(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor                 _animationMontageToPlayOnInterruptionForInterrupteeNew;    // 0x0290(0x0020) (Edit, NativeAccessSpecifierPrivate)
	bool                                               _pickUpOnInterrupt;                                        // 0x02B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canInterruptWhileCarrying;                                // 0x02B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useMontageFollower;                                       // 0x02B2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7A4T[0x1];                                     // 0x02B3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxHeightDeltaBetweenCharacters;                          // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_59IQ[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.interruptionDefinition");
		return ptr;
	}



	void SetInterruptorSnapPoint(const struct FTransform& point);
	void OnInterruptionUpdateStart(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	void OnInterruptionExitEnd(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	void OnInterruptionEnterStart(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	bool IsUsingMontageFollower();
	bool IsUsingAttack();
	bool IsInterruptionPossible(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	bool InteractionCheckHeightDelta(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	struct FRotator GetInterruptionSnapPointRotationForInterruptor(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	struct Fvector GetInterruptionSnapPointPositionForInterruptor(class UdbdPlayer* Interruptor, class UdbdPlayer* Interruptee);
	class UinteractionDefinition* GetInteractionDefinition();
	class Uinteractable* GetInteractable();
	bool CanInterruptWhileCarrying();
};

// Class DeadByDaylight.InventoryHandler
// 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
class UInventoryHandler : public UObject
{
public:
	unsigned char                                      UnknownData_P0EV[0x78];                                    // 0x0030(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.InventoryHandler");
		return ptr;
	}



};

// Class DeadByDaylight.IsMaximumInfected
// 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
class UIsMaximumInfected : public UGameplayModifierCondition
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.IsMaximumInfected");
		return ptr;
	}



};

// Class DeadByDaylight.IsNotSightedByAnyCharacter
// 0x0008 (FullSize[0x00F0] - InheritedSize[0x00E8])
class UIsNotSightedByAnyCharacter : public UEventDrivenModifierCondition
{
public:
	unsigned char                                      UnknownData_J9GD[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.IsNotSightedByAnyCharacter");
		return ptr;
	}



};

// Class DeadByDaylight.ItemBlueprint
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class UItemBlueprint : public USkeletalMeshActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ItemBlueprint");
		return ptr;
	}



};

// Class DeadByDaylight.ItemPerformedInteraction
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UItemPerformedInteraction : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ItemPerformedInteraction");
		return ptr;
	}



	bool IsInteractionPerformedWithItem(class UdbdPlayer* instigator);
};

// Class DeadByDaylight.RecommendationsFilter
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class URecommendationsFilter : public UObject
{
public:
	unsigned char                                      UnknownData_DY0V[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RecommendationsFilter");
		return ptr;
	}



};

// Class DeadByDaylight.ItemRecommendationsFilter
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UItemRecommendationsFilter : public URecommendationsFilter
{
public:
	unsigned char                                      UnknownData_ZLDB[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ItemRecommendationsFilter");
		return ptr;
	}



};

// Class DeadByDaylight.ItemVfx
// 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
class UItemVfx : public UBaseVFX
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ItemVfx");
		return ptr;
	}



	void SetEmittersVisibility(bool Visible);
	void SetEmittersActive(bool active);
	void OnAttackEnd();
	void OnAttackBegin();
	void AttachToSkeletalMesh(class UskeletalMeshComponent* SkeletonPart);
};

// Class DeadByDaylight.Turn180
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTurn180 : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Turn180");
		return ptr;
	}



};

// Class DeadByDaylight.ViewRotationStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UViewRotationStrategy : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ViewRotationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.KillerBlindingFXComponent
// 0x0048 (FullSize[0x0150] - InheritedSize[0x0108])
class UKillerBlindingFXComponent : public UBlindingFXComponent
{
public:
	unsigned char                                      UnknownData_CX03[0x18];                                    // 0x0108(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _blindedSound;                                             // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y7Z0[0x28];                                    // 0x0128(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerBlindingFXComponent");
		return ptr;
	}



	void Multicast_OnBlindedByPlayersCosmetic(TArray<class UdbdPlayer*> players);
};

// Class DeadByDaylight.KillerFootstepsPerceptionComponent
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class UKillerFootstepsPerceptionComponent : public UFootstepsPerceptionComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerFootstepsPerceptionComponent");
		return ptr;
	}



};

// Class DeadByDaylight.KillerInstinctComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UKillerInstinctComponent : public UactorComponent
{
public:
	class UParticleSystemComponent*                    _killerInstinctParticleSystem;                             // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VLLT[0x4];                                     // 0x00C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                _camperHighlightColorOverride;                             // 0x00C4(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NYAY[0x14];                                    // 0x00D4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerInstinctComponent");
		return ptr;
	}



	void SetParticleSystem(class UParticleSystemComponent* killerInstinctParticleSystem);
	void OnKillerLocallyObservedChanged(bool locallyObserved);
	bool IsOwnerInKillerInstinctRadius();
	class UParticleSystemComponent* GetParticleSystem();
};

// Class DeadByDaylight.KillerIntroComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UKillerIntroComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_DYPU[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _killerIntroCompletedPercentNeededToFPV;                   // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CVV8[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerIntroComponent");
		return ptr;
	}



	void OnLevelReadyToPlay();
	void OnKillerIntroCompleteChangedNative(float killerIntroCompletedPercent);
	void OnIntroCompleted();
};

// Class DeadByDaylight.NoiseIndicatorWidget
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UNoiseIndicatorWidget : public UBaseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NoiseIndicatorWidget");
		return ptr;
	}



	void SetIndicatorPanel(class UCanvasPanel* panel);
};

// Class DeadByDaylight.KillerNoiseIndicatorWidget
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class UKillerNoiseIndicatorWidget : public UNoiseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerNoiseIndicatorWidget");
		return ptr;
	}



	void SetSoundDistancePercentage(float distancePercentage);
};

// Class DeadByDaylight.KillerOpenGate
// 0x0058 (FullSize[0x0680] - InheritedSize[0x0628])
class UKillerOpenGate : public UChargeableInteractionDefinition
{
public:
	struct FAnimationMontageDescriptor                 _openGateMontage;                                          // 0x0628(0x0020) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_41QG[0x38];                                    // 0x0648(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerOpenGate");
		return ptr;
	}



	void UpdateSwitch();
};

// Class DeadByDaylight.KillerProjectileDodgeComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UKillerProjectileDodgeComponent : public UactorComponent
{
public:
	class UKillerProjectile*                           _killerProjectile;                                         // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UcamperPlayer*>                       _proximitySurvivors;                                       // 0x00C0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XXZP[0x20];                                    // 0x00D0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerProjectileDodgeComponent");
		return ptr;
	}



	void OnKillerProjectileLaunched();
	void OnKillerProjectileFinishedWithoutCollision();
	void OnKillerProjectileFinished(class Uactor* survivorHit);
};

// Class DeadByDaylight.KillerProjectileLauncher
// 0x0000 (FullSize[0x0180] - InheritedSize[0x0180])
class UKillerProjectileLauncher : public UBaseProjectileLauncher
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerProjectileLauncher");
		return ptr;
	}



	class UslasherPlayer* GetOwningKiller();
};

// Class DeadByDaylight.KillerSoundCuesComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UKillerSoundCuesComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_YBSB[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillerSoundCuesComponent");
		return ptr;
	}



	void StopTrackingActor(class Uactor* actorToStopTracking);
	void StartTrackingActorWithLifetime(class Uactor* actorToStartTracking, const struct FName& distanceDataID, float trackerLifetime);
	void StartTrackingActor(class Uactor* actorToStartTracking, const struct FName& distanceDataID);
};

// Class DeadByDaylight.KillInteractionDefinition
// 0x0018 (FullSize[0x0640] - InheritedSize[0x0628])
class UKillInteractionDefinition : public UChargeableInteractionDefinition
{
public:
	TArray<struct FString>                             _nonOverrideableTargetInteractions;                        // 0x0628(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _chargeCompleted;                                          // 0x0638(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isKillShownInThirdPerson;                                 // 0x0639(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _manuallyManageMeshHiding;                                 // 0x063A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UXKG[0x5];                                     // 0x063B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.KillInteractionDefinition");
		return ptr;
	}



	void OnMoriCancelled();
	void OnKillAudioActivation(bool active, class UdbdPlayer* interactingPlayer);
	class UcamperPlayer* GetOwningSurvivor();
	bool GetChargeCompleted();
};

// Class DeadByDaylight.LacerationUIData
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULacerationUIData : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LacerationUIData");
		return ptr;
	}



};

// Class DeadByDaylight.lanternInteractable
// 0x0058 (FullSize[0x0330] - InheritedSize[0x02D8])
class UlanternInteractable : public Uinteractable
{
public:
	struct FScriptMulticastDelegate                    OnLanternStateChanged;                                     // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLanternCollectedByPlayerCosmetic;                        // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EZYV[0x20];                                    // 0x02F8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _collectableClass;                                         // 0x0318(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L21Y[0x10];                                    // 0x0320(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.lanternInteractable");
		return ptr;
	}



	void SlasherDestroyLantern(class UdbdPlayer* player);
	void OnSlasherDestroyedLantern(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnCamperWasHooked(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnCamperLeavingHook(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnBackToCollectableTimerEnd();
	DeadByDaylight_ELanternState GetLanternState();
	void CollectLight(class UdbdPlayer* player);
	void ChangeLanternState(DeadByDaylight_ELanternState newLanternState);
	bool CanBeDestroyed();
	bool CanBeCollected();
};

// Class DeadByDaylight.LanternLightCollectable
// 0x0008 (FullSize[0x0428] - InheritedSize[0x0420])
class ULanternLightCollectable : public Ucollectable
{
public:
	class UlanternInteractable*                        _parentLantern;                                            // 0x0420(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LanternLightCollectable");
		return ptr;
	}



	void SetParentLantern(class UlanternInteractable* parentLantern);
};

// Class DeadByDaylight.LegalMenuScreen
// 0x0048 (FullSize[0x0168] - InheritedSize[0x0120])
class ULegalMenuScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_7BN5[0x48];                                    // 0x0120(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LegalMenuScreen");
		return ptr;
	}



	void OnOkClick();
	void OnDeclineClick();
	void OnAcceptClick();
};

// Class DeadByDaylight.LegalMenuScreenScaleform
// 0x0000 (FullSize[0x0168] - InheritedSize[0x0168])
class ULegalMenuScreenScaleform : public ULegalMenuScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LegalMenuScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.LegalMenuScreenUMG
// 0x0008 (FullSize[0x0170] - InheritedSize[0x0168])
class ULegalMenuScreenUMG : public ULegalMenuScreen
{
public:
	class UUMGAtlantaLegalMenuScreen*                  _atlLegalMenuScreen;                                       // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LegalMenuScreenUMG");
		return ptr;
	}



	void OnLegalMenuButtonClick(bool isAccept);
};

// Class DeadByDaylight.WorldRunawayMeshComponent
// 0x0024 (FullSize[0x0B80] - InheritedSize[0x0B5C])
class UWorldRunawayMeshComponent : public UskeletalMeshComponent
{
public:
	float                                              _runAwayMustTickDuration;                                  // 0x0B5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _returnMustTickDuration;                                   // 0x0B60(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D31V[0x1C];                                    // 0x0B64(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.WorldRunawayMeshComponent");
		return ptr;
	}



	void SetShouldRunAwayWithRandomDelay(bool should, float delayRange);
	void SetShouldRunAwayWithDelay(bool should, float delay);
	void SetShouldRunAway(bool should);
	bool GetShouldRunAway();
};

// Class DeadByDaylight.LevelCrowWRMeshComponent
// 0x0000 (FullSize[0x0B80] - InheritedSize[0x0B80])
class ULevelCrowWRMeshComponent : public UWorldRunawayMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LevelCrowWRMeshComponent");
		return ptr;
	}



};

// Class DeadByDaylight.LevelParadise
// 0x00F0 (FullSize[0x0320] - InheritedSize[0x0230])
class ULevelParadise : public Uactor
{
public:
	float                                              LoopStartDistance;                                         // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoopDistance;                                              // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             MainPlayerSpawnPoint;                                      // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>                     OtherSurvivorSpawnPoints;                                  // 0x0240(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>                     ParadiseTiles;                                             // 0x0250(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uactor*                                      ParadiseViewTarget;                                        // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6MHC[0xA8];                                    // 0x0268(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _spawnedMainPawn;                                          // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _runnerComponent;                                          // 0x0318(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LevelParadise");
		return ptr;
	}



	void ParadiseEntered(const struct FParadiseData& playerData);
	void OnInterpolationDone();
	void EnterParadise(const struct FParadiseData& playerData);
};

// Class DeadByDaylight.LevelReadyToPlayPlayerComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class ULevelReadyToPlayPlayerComponent : public UactorComponent
{
public:
	TArray<struct FLevelReadyToPlayRequirements>       _levelReadyToPlayRequirementsTarget;                       // 0x00B8(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5ODK[0x20];                                    // 0x00C8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LevelReadyToPlayPlayerComponent");
		return ptr;
	}



	void Server_SetIsReadyToPlay(bool readyToPlay);
	void OnRep_LevelReadyToPlayRequirementsTarget();
};

// Class DeadByDaylight.LevelUpPopupScreenUMG
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class ULevelUpPopupScreenUMG : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LevelUpPopupScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.LightFollower
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class ULightFollower : public UactorComponent
{
public:
	unsigned char                                      UnknownData_93D8[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LightFollower");
		return ptr;
	}



	void SetLeader(class ULightComponent* leader, float maxIntensity);
	void AddFollower(class ULightComponent* follower);
};

// Class DeadByDaylight.LightFunctionActorSpawner
// 0x0008 (FullSize[0x02D0] - InheritedSize[0x02C8])
class ULightFunctionActorSpawner : public UActorSpawner
{
public:
	class Utexture*                                    LightFunctionTexture;                                      // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LightFunctionActorSpawner");
		return ptr;
	}



};

// Class DeadByDaylight.LightingData
// 0x0070 (FullSize[0x00A8] - InheritedSize[0x0038])
class ULightingData : public UDataAsset
{
public:
	unsigned char                                      DefaultLighting[0x30];                                     // 0x0038(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      DefaultAtlantaLighting[0x30];                              // 0x0068(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FSceneLightingDescription>           Descriptions;                                              // 0x0098(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LightingData");
		return ptr;
	}



};

// Class DeadByDaylight.LightingFactory
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class ULightingFactory : public UObject
{
public:
	class ULightingData*                               _data;                                                     // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LightingFactory");
		return ptr;
	}



};

// Class DeadByDaylight.LightingHelper
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class ULightingHelper : public UObject
{
public:
	class UBaseSky*                                    _levelLighting;                                            // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBaseSky*                                    _levelLightingWithoutExposure;                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULightingInterpolator*                       _lightingInterpolator;                                     // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULightingFactory*                            _lightingFactory;                                          // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPostProcessComponent*                       _postProcessCache;                                         // 0x0050(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5QNB[0x40];                                    // 0x0058(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LightingHelper");
		return ptr;
	}



	class UTextureCube* GetTextureCube(const struct FName& mapTheme);
	void DBD_ModifyExposure(float Value);
};

// Class DeadByDaylight.LightingInterpolator
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class ULightingInterpolator : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnInterpolationDone;                                       // 0x0030(0x0010) (ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7BTO[0x38];                                    // 0x0040(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBaseSky*                                    _targetLighting;                                           // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LightingInterpolator");
		return ptr;
	}



	void STATIC_LerpSkylight(class USkyLightComponent* target, class USkyLightComponent* A, class USkyLightComponent* B, float Alpha);
	void STATIC_LerpLight(class ULightComponent* target, class ULightComponent* A, class ULightComponent* B, float Alpha);
	void STATIC_LerpHeightFog(class UExponentialHeightFogComponent* target, class UExponentialHeightFogComponent* A, class UExponentialHeightFogComponent* B, float Alpha);
};

// Class DeadByDaylight.LoadingScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class ULoadingScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LoadingScreen");
		return ptr;
	}



};

// Class DeadByDaylight.LoadingScreenScaleform
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class ULoadingScreenScaleform : public ULoadingScreen
{
public:
	unsigned char                                      UnknownData_YSUW[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LoadingScreenScaleform");
		return ptr;
	}



	void OnLoadingTextTimerComplete();
};

// Class DeadByDaylight.LoadingScreenUMG
// 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
class ULoadingScreenUMG : public ULoadingScreen
{
public:
	class UUMGLoadingScreenWidget*                     _loadingScreen;                                            // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LoadingScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.LobbyControllerSubsystem
// 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
class ULobbyControllerSubsystem : public UGameInstanceSubsystem
{
public:
	TWeakObjectPtr<class ULobbyDisplayStandController> _localPlayerDisplayStandController;                        // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class ULobbyDisplayStandController*> _displayStandControllers;                                  // 0x0040(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5C4S[0x20];                                    // 0x0090(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LobbyControllerSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.LobbyDisplayStandController
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class ULobbyDisplayStandController : public UObject
{
public:
	unsigned char                                      UnknownData_WXTU[0xC0];                                    // 0x0030(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LobbyDisplayStandController");
		return ptr;
	}



};

// Class DeadByDaylight.LocalEventManager
// 0x0C18 (FullSize[0x0C48] - InheritedSize[0x0030])
class ULocalEventManager : public UObject
{
public:
	unsigned char                                      UnknownData_HFH2[0xC18];                                   // 0x0030(0x0C18) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LocalEventManager");
		return ptr;
	}



};

// Class DeadByDaylight.LocalPlayerTrackerComponent
// 0x0010 (FullSize[0x0220] - InheritedSize[0x0210])
class ULocalPlayerTrackerComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    TrackerOnLocallyObservedChanged;                           // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LocalPlayerTrackerComponent");
		return ptr;
	}



	void TriggerOnLocallyObservedChanged();
};

// Class DeadByDaylight.Locker
// 0x00D8 (FullSize[0x03B0] - InheritedSize[0x02D8])
class ULocker : public Uinteractable
{
public:
	struct FScriptMulticastDelegate                    OnSurvivorInLockerChanged;                                 // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              FastDoorActivationAudibleRange;                            // 0x02E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalDoorActivationAudibleRange;                          // 0x02EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationMontageSlave*                      _montageFollower;                                          // 0x02F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x02F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UdbdPlayer*                                  _playerOpeningLocker;                                      // 0x0300(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UcamperPlayer*                               _survivorInLocker;                                         // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uinteractor*                                 _mainInteractor;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UprimitiveComponent*                         _frontInteractionZone;                                     // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UinteractionDefinition*                      _searchEmpty;                                              // 0x0320(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UinteractionDefinition*                      _searchPlayer;                                             // 0x0328(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        _killerInteractionActor;                                   // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       _interactionExitClosetSemantics;                           // 0x0338(0x0020) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7NHF[0x40];                                    // 0x0358(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _preventAllInteractions;                                   // 0x0398(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _preventAllInteractionsLocally;                            // 0x0399(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZB80[0x16];                                    // 0x039A(0x0016) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Locker");
		return ptr;
	}



	void StopMinNearOutlineDistLerp(class UdbdPlayer* player);
	void SpawnKillerReloadActor(class UClass* ActorClass);
	void SetupKillerSpecificInteraction(class UinteractionDefinition* interaction);
	void SetSurvivorInLocker(class UcamperPlayer* survivorInLocker);
	void SetPlayerOpeningLocker(class UdbdPlayer* player);
	void OnSurvivorInLockerChanged__DelegateSignature(class UdbdPlayer* oldSurvivor, class UdbdPlayer* newSurvivor);
	void OnSurvivorHealthChanged(DeadByDaylight_ECamperDamageState before, DeadByDaylight_ECamperDamageState after);
	void OnRep_PreventAllInteractions();
	void Multicast_EjectSurvivor();
	bool IsOccupied();
	bool IsFacingLocker(class UdbdPlayer* player, float toleranceDegreeAngle);
	class UcamperPlayer* GetSurvivorInLocker();
	class UprimitiveComponent* GetStunZone();
	class Uactor* GetKillerInteractionActor();
	class Uinteractor* GetInteractor();
	void EjectSurvivor();
	void Authority_ReportOpenLockerNoiseEventToAI(bool fastActivation);
	void Authority_EnableOtherInteractors(class Uinteractor* usableInteractor, bool usable);
	bool AreInteractionsAllowed();
};

// Class DeadByDaylight.LockerAmmoActorOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class ULockerAmmoActorOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LockerAmmoActorOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.LockerAnimInstance
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class ULockerAnimInstance : public USleepingAnimInstance
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LockerAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.LoudNoiseEventSystem
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class ULoudNoiseEventSystem : public UactorComponent
{
public:
	unsigned char                                      UnknownData_S4PP[0x70];                                    // 0x00B8(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LoudNoiseEventSystem");
		return ptr;
	}



};

// Class DeadByDaylight.LoudNoiseHUDIndicator
// 0x0070 (FullSize[0x0280] - InheritedSize[0x0210])
class ULoudNoiseHUDIndicator : public USceneComponent
{
public:
	class UStaticMesh*                                 MaskMesh;                                                  // 0x0210(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DistortionMesh;                                            // 0x0218(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EdgePadding;                                               // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CornerRoundness;                                           // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScreenFadeOutDistance;                                     // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8MNM[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    LoudNoiseAddedEvent;                                       // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_61F4[0x30];                                    // 0x0240(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLoudNoiseIndicatorData>             _trackedNoises;                                            // 0x0270(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LoudNoiseHUDIndicator");
		return ptr;
	}



	void AddTrackedNoise(const struct Fvector& location, float duration);
};

// Class DeadByDaylight.LoudNoiseNotifier
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULoudNoiseNotifier : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LoudNoiseNotifier");
		return ptr;
	}



	void STATIC_Fire(class UObject* worldContextObject, class Uactor* instigator, const struct Fvector& location, bool shouldTrack, float audibleRange, class UdbdPlayer* instigatingPlayer, bool isQuickAction);
};

// Class DeadByDaylight.LoudNoiseUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULoudNoiseUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LoudNoiseUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.LunarEventComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class ULunarEventComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_GB1U[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _lanternCollectedCount;                                    // 0x00D0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _additionalEventProgressCount;                             // 0x00D4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GE5G[0x30];                                    // 0x00D8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.LunarEventComponent");
		return ptr;
	}



	void OnRep_lanternCollectedCount();
	void OnLanternHoldTimerEnd();
	void OnFinishedPlaying(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Multicast_ResetLanternLight(class UlanternInteractable* lanternInteractable);
	void Local_OnCamperLostLantern(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Local_OnCamperEscape(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_OnSlasherDestroysLantern(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_OnPlayerLeaveGame(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_OnPickupLantern(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_OnFixGenerator(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_OnDestroyCamperLightGameEvent(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_OnCamperLostLantern(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void Authority_OnCamperEscape(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
};

// Class DeadByDaylight.MagicFountain
// 0x0000 (FullSize[0x02D8] - InheritedSize[0x02D8])
class UMagicFountain : public Uinteractable
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MagicFountain");
		return ptr;
	}



	bool IsCorrupted();
};

// Class DeadByDaylight.MagicFountainOutlineUpdateStrategy
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UMagicFountainOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _outlineColor;                                             // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AR8D[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MagicFountainOutlineUpdateStrategy");
		return ptr;
	}



	void SetFountainCorrupted(bool corrupted);
};

// Class DeadByDaylight.ManualIconStrategy
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UManualIconStrategy : public UBasePerkIconStrategy
{
public:
	unsigned char                                      UnknownData_NI5K[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ManualIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.mapActorComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UmapActorComponent : public UactorComponent
{
public:
	DeadByDaylight_EMapActorCategory                   category;                                                  // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IDV4[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UprimitiveComponent*                         _mapActorCollider;                                         // 0x00C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_156S[0x18];                                    // 0x00C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _detectionEnabled;                                         // 0x00E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K586[0x7];                                     // 0x00E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.mapActorComponent");
		return ptr;
	}



	void Multicast_SetDetectionEnabled(bool enabled);
	bool IsKnownBy(class UdbdPlayer* character);
	bool GetDetectionEnabled();
};

// Class DeadByDaylight.MapActorDB
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UMapActorDB : public UObject
{
public:
	unsigned char                                      UnknownData_RDAR[0x40];                                    // 0x0030(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MapActorDB");
		return ptr;
	}



	TArray<class Uactor*> GetUniqueRandom(TArray<DeadByDaylight_EMapActorCategory> categories, int Count);
	class Uactor* GetRandom(DeadByDaylight_EMapActorCategory category);
	TArray<DeadByDaylight_EMapActorCategory> CopyListMinusCategories(TArray<DeadByDaylight_EMapActorCategory> categories, TArray<DeadByDaylight_EMapActorCategory> categoriesToRemove);
};

// Class DeadByDaylight.MapActorDetectorComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UMapActorDetectorComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnActorDetected;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<DeadByDaylight_EMapActorCategory>           CollectedCategories;                                       // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UprimitiveComponent*                         _primitive;                                                // 0x00D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MapActorDetectorComponent");
		return ptr;
	}



	void SetDetectionPrimitive(class UprimitiveComponent* primitive);
	void OnOverlapEnter(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
};

// Class DeadByDaylight.MapData
// 0x0070 (FullSize[0x00A8] - InheritedSize[0x0038])
class UMapData : public UDataAsset
{
public:
	struct FName                                       themeName;                                                 // 0x0038(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       themeWeather;                                              // 0x0044(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       audioStateThemes;                                          // 0x0050(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       audioStateWeather;                                         // 0x005C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       audioGameStartEvent;                                       // 0x0068(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MapWidth;                                                  // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MapHeight;                                                 // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Draft;                                                     // 0x007C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SAPF[0x3];                                     // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTileProperties>                     MapTileProperties;                                         // 0x0080(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlackboardData*                             Blackboard;                                                // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Gesture;                                                   // 0x0098(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UQ2R[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProceduralGenerationData*                   _proceduralGenerationData;                                 // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MapData");
		return ptr;
	}



};

// Class DeadByDaylight.MatchHandler
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMatchHandler : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MatchHandler");
		return ptr;
	}



};

// Class DeadByDaylight.MatchManagementScreen
// 0x00C0 (FullSize[0x01E0] - InheritedSize[0x0120])
class UMatchManagementScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_J8ZZ[0xC0];                                    // 0x0120(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MatchManagementScreen");
		return ptr;
	}



	void OnRemoveMap(const struct FString& mapId);
	void OnPerksSettingsChange(int Value);
	void OnOfferingsSettingsChange(int Value);
	void OnItemsAndAddonsSettingsChange(int Value);
	void OnBackButtonClick();
	void OnApplyChangesClicked();
	void OnAllowDlcSettingsClick();
	void OnAddMap(const struct FString& mapId);
};

// Class DeadByDaylight.MaterialPerThemeData
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UMaterialPerThemeData : public UDataAsset
{
public:
	TMap<class UMaterialInstance*, class UMaterialInstance*> _materialMap;                                              // 0x0038(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MaterialPerThemeData");
		return ptr;
	}



};

// Class DeadByDaylight.MaterialPerThemeSettings
// 0x0058 (FullSize[0x0090] - InheritedSize[0x0038])
class UMaterialPerThemeSettings : public UDataAsset
{
public:
	TMap<struct FName, class UMaterialPerThemeData*>   _themeMap;                                                 // 0x0038(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UMaterialPerThemeData*                       _data;                                                     // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MaterialPerThemeSettings");
		return ptr;
	}



};

// Class DeadByDaylight.MeatHook
// 0x0330 (FullSize[0x0608] - InheritedSize[0x02D8])
class UMeatHook : public Uinteractable
{
public:
	unsigned char                                      UnknownData_B5NY[0x18];                                    // 0x02D8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               IsSurvivorStruggling;                                      // 0x02F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WasSurvivorStruggleCancelled;                              // 0x02F1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4PX9[0x6];                                     // 0x02F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDBDClipRegionComponent*>             ClipRegions;                                               // 0x02F8(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInBasement;                                              // 0x0308(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBreakable;                                               // 0x0309(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSabotageable;                                            // 0x030A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D55V[0x1];                                     // 0x030B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FgameplayTag                                HookIdentityTag;                                           // 0x030C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SnapHookedCharacter;                                       // 0x0318(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               FullyHooked;                                               // 0x0319(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J7DG[0x6];                                     // 0x031A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTimer                                   YawAdjustTimer;                                            // 0x0320(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              HookYaw;                                                   // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TargetHookYaw;                                             // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _struggleThreshold;                                        // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MTQP[0x4];                                     // 0x0354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterPusherComponent*                   _characterPusher;                                          // 0x0358(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           _slasherCollisionBlocker;                                  // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPollableEventListener*                      _eventListener;                                            // 0x0368(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UcamperPlayer*                               _hookedSurvivor;                                           // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _hookBreakerPlayer;                                        // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SURS[0x68];                                    // 0x0380(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FHookAnalyticsController                    _hookAnalytics;                                            // 0x03E8(0x0150) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OLCT[0x10];                                    // 0x0538(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _campersThatSabotagedMeatHook[0x50];                       // 0x0538(0x0050) UNKNOWN PROPERTY: SetProperty
	class Uinteractor*                                 _mainInteractor;                                           // 0x0598(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _meatHookEffect;                                           // 0x05A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableInteractionDefinition*            _unhook;                                                   // 0x05A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _camperHookedSnapTransform;                                // 0x05B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uentity*                                     _entity;                                                   // 0x05B8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EQAX[0x18];                                    // 0x05C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x05D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _interactingPlayer;                                        // 0x05E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _meathookInitilized;                                       // 0x05E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W1LF[0x1F];                                    // 0x05E9(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MeatHook");
		return ptr;
	}



	void UpdateSlasherBlockerCollision();
	void SetTargetHookLookAt(const struct Fvector& LookAt, float time);
	void SetMeatHookInitilized(bool Value);
	void SetIsBeingSabotaged(bool isBeingSabotaged);
	void SetInteractingPlayer(class UdbdPlayer* interactingPlayer);
	void SetEntity(class Uentity* entity);
	void Server_RefreshCharmCustomization();
	void ResetTargetHookYaw(float time);
	void OnTickStruggle(float deltaTime);
	void OnStruggleExit();
	void OnStruggleEnter();
	void OnStopPushingPlayer(class Ucharacter* character);
	void OnStartPushingPlayer(class Ucharacter* character);
	void OnSacrificeOut();
	void OnSacrificeIn();
	void OnReactionIn();
	void OnReaction();
	void OnHookingExit();
	void OnHookingEnter();
	void OnHookedSurvivorChanged(class UcamperPlayer* before, class UcamperPlayer* after);
	void OnHookedSurvivorAttacked();
	void OnHookedIdle();
	void OnHookedExit();
	void OnHookedEnter();
	void OnAutoRepair();
	void Multicast_SetIsSacrificed(bool isSacrificed);
	void Multicast_SetIsSabotaged(bool setIsSabotaged, class UdbdPlayer* hookBreaker, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration);
	void Multicast_SetIsBrokenFromUnhook(bool setIsBrokendFromUnhook, class UdbdPlayer* hookBreaker, float overrideBaseHookRespawnDuration);
	void Multicast_SetHookedSurvivor(class UcamperPlayer* Survivor);
	void Multicast_RefreshCharmCustomization();
	void Multicast_EscapeAttemptResult(bool result);
	void Local_MoveSurvivorToHook(class UcamperPlayer* Survivor, float duration);
	void InitializeMeatHookIfPossible();
	void InitializeMeatHook();
	struct FAnimationMontageDescriptor GetUnhookOutMontageDescriptor();
	struct FAnimationMontageDescriptor GetUnhookInMontageDescriptor();
	class UChargeableInteractionDefinition* GetUnhookCID();
	float GetStruggleThreshold();
	float GetStrugglePercent();
	class UdbdPlayer* GetSaboteurPlayer();
	float GetSabotageHookRespawnDuration();
	class UMontagePlayer* GetMontagePlayer();
	class USceneComponent* GetMeatHookEffect();
	class UAkComponent* GetMeatHookAkAudioComponent();
	class UmapActorComponent* GetMapActorNative();
	class Uinteractor* GetMainInteractor();
	class USphereComponent* GetKickSlasherDetectionZone();
	bool GetIsSacrificed();
	bool GetIsSabotaged();
	bool GetIsInBasement();
	bool GetIsBroken();
	class UBoxComponent* GetInteractorZoneComponent();
	class UprimitiveComponent* GetInteractorPrimitiveComponent();
	class UdbdPlayer* GetInteractingPlayer();
	class UcamperPlayer* GetHookedSurvivor();
	class UHookableComponent* GetHookableComponentOfHookedActor();
	class UCharacterPusherComponent* GetCharacterPusher();
	class USceneComponent* GetCamperUnkookFocalPointTransform();
	class USceneComponent* GetCamperHookedSnapTransform();
	void FireHookSoundEvent(const struct FName& NoiseRangeTunable, class UdbdPlayer* soundInstigator);
	void DebugHookedSurvivor(class UcamperPlayer* expectedSurvivor);
	bool CanUnhookSurvivor(class UcamperPlayer* Survivor);
	bool CanSurvivorStruggle(class UcamperPlayer* Survivor);
	bool CanSurvivorAttemptEscape(class UcamperPlayer* Survivor);
	bool CanHookSurvivor();
	bool CanBeSabotaged();
	void Authority_SignalUnhookingEnter();
	void Authority_SignalUnhookingCharged();
	void Authority_SignalUnhookingAborted();
	void Authority_SignalSurvivorAttemptingEscapeAborted();
	void Authority_SignalSurvivorAttemptingEscape();
	void Authority_SetIsSacrificed(bool isSacrificed);
	void Authority_SetIsSabotaged(bool isSabotaged, class UdbdPlayer* saboteur, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration);
	void Authority_SetIsBrokenFromUnhook(bool isBrokenFromUnhook, class UdbdPlayer* hookBreaker, float overrideBaseHookRespawnDuration);
	void Authority_SetHookedSurvivor(class UcamperPlayer* Survivor);
	void Authority_SendOnUnhookAnalytics(class UdbdPlayer* rescuer);
};

// Class DeadByDaylight.MeatHookAnimInstance
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UMeatHookAnimInstance : public UanimInstance
{
public:
	bool                                               isBroken;                                                  // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S3SY[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Yaw;                                                       // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R33Z[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MeatHookAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.MeatHookOutlineUpdateStrategy
// 0x0040 (FullSize[0x0170] - InheritedSize[0x0130])
class UMeatHookOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:
	struct FLinearColor                                HookedOutlineColorSlasher;                                 // 0x0130(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                CarryingOutlineColorSlasher;                               // 0x0140(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                DefaultOutlineColorSlasher;                                // 0x0150(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                VisibleOutlineColorCamper;                                 // 0x0160(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MeatHookOutlineUpdateStrategy");
		return ptr;
	}



	void Local_AddBasementOfferingReveal();
	void Authority_AddBasementHookToPlayerMapItem();
};

// Class DeadByDaylight.MeatHookStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UMeatHookStateMachine : public UStateMachine
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MeatHookStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.MenuAssetLibrary
// 0x0010 (FullSize[0x0130] - InheritedSize[0x0120])
class UMenuAssetLibrary : public UItemsAssetLibrary
{
public:
	unsigned char                                      UnknownData_P9W1[0x10];                                    // 0x0120(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MenuAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.MenuMeatHook
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class UMenuMeatHook : public Uactor
{
public:
	unsigned char                                      UnknownData_2HEN[0x10];                                    // 0x0230(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharmSpawnerComponent*                      _charmSpawnerComponent;                                    // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H1DO[0x10];                                    // 0x0248(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MenuMeatHook");
		return ptr;
	}



	void OnCharmsUpdated(TArray<struct FCharmIdSlot> charmIDs);
	void BeginDestroySequence_Internal();
};

// Class DeadByDaylight.MenuUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMenuUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MenuUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.MigrationSubsystem
// 0x0058 (FullSize[0x0090] - InheritedSize[0x0038])
class UMigrationSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_R6JO[0x58];                                    // 0x0038(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MigrationSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.MobileProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UMobileProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MobileProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.MontagePlayer
// 0x0148 (FullSize[0x0200] - InheritedSize[0x00B8])
class UMontagePlayer : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnMontageStarted;                                          // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9THF[0x48];                                    // 0x00C8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMontageEnded;                                            // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HK3P[0x60];                                    // 0x0120(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  _animationMappingsTable;                                   // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  _playerSpecificMappingsTable;                              // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                _currentlyPlayingMontage;                                  // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H9MS[0x18];                                    // 0x0198(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMontageInstanceInfo>                _activeMontagesInfo;                                       // 0x01B0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _outSectionName;                                           // 0x01C0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeBeforeOut;                                            // 0x01CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UskeletalMeshComponent*                      _skeletalMeshComponent;                                    // 0x01D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GC6J[0x28];                                    // 0x01D8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MontagePlayer");
		return ptr;
	}



	void stop(float blendOutTime);
	void SignalAnimInstanceChanged();
	void SetSkeletalMesh(class UskeletalMeshComponent* skeletalMeshComponent);
	void SetPlayRate(float playRate);
	class UAnimMontage* PlayLoopForDuration(const struct FAnimationMontageDescriptor& animMontageID, float duration, float playRate, const struct FName& out);
	class UAnimMontage* Play(const struct FAnimationMontageDescriptor& animMontageID, float playRate, bool isFollower);
	void OnMontageEndedInternal(const struct Fguid& guid, class UAnimMontage* montage, bool interrupted);
	void OnMontageBlendingOutInternal(const struct Fguid& guid, class UAnimMontage* montage, bool interrupted);
	void JumpToSectionEnd(const struct FName& SectionName);
	void JumpToSection(const struct FName& SectionName);
	bool IsPlayingAnyMontage();
	bool IsPlaying(const struct FAnimationMontageDescriptor& montageDescriptor);
	class UanimInstance* GetAnimInstance();
};

// Class DeadByDaylight.MoriableComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UMoriableComponent : public UactorComponent
{
public:
	struct Fvector                                     _moriInteractionRelativeLocation;                          // 0x00B8(0x000C) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W184[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UinteractionDefinition*                      _moriInteraction;                                          // 0x00C8(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4IUG[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MoriableComponent");
		return ptr;
	}



	void OnRep_MoriInteraction();
	void OnMoriUpdateStart();
	void OnMoriFinished();
};

// Class DeadByDaylight.MoriComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UMoriComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_LN1I[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _moriInteractionClasses;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MoriComponent");
		return ptr;
	}



	void OnMoriUpdateStart();
	void OnMoriFinished();
	void OnMoriChargeCompleted();
};

// Class DeadByDaylight.MovementModifierActor
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UMovementModifierActor : public Uactor
{
public:
	float                                              MaxSpeedMultiplier;                                        // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_A9GA[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MovementModifierActor");
		return ptr;
	}



};

// Class DeadByDaylight.MysteryBoxPopupScreenUMG
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UMysteryBoxPopupScreenUMG : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.MysteryBoxPopupScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.NavArea_Danger
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UNavArea_Danger : public UNavArea
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NavArea_Danger");
		return ptr;
	}



};

// Class DeadByDaylight.NavArea_Slasher
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UNavArea_Slasher : public UNavArea
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NavArea_Slasher");
		return ptr;
	}



};

// Class DeadByDaylight.NavigationQueryFilter_EvadeLoop
// 0x0238 (FullSize[0x0288] - InheritedSize[0x0050])
class UNavigationQueryFilter_EvadeLoop : public UNavigationQueryFilter
{
public:
	unsigned char                                      UnknownData_OVIP[0x238];                                   // 0x0050(0x0238) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NavigationQueryFilter_EvadeLoop");
		return ptr;
	}



};

// Class DeadByDaylight.NavigationScreen
// 0x0190 (FullSize[0x02B0] - InheritedSize[0x0120])
class UNavigationScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_9A2G[0x190];                                   // 0x0120(0x0190) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NavigationScreen");
		return ptr;
	}



	void OnToggleChatVisibility();
	void OnStartButtonClick();
	void OnSettingsClick();
	void OnSendChatMsgButtonClick(const struct FString& message);
	void OnReadyButtonClick();
	void OnPlayerOptionSelected(const struct FString& krakenId, const struct FString& playerId, unsigned char option);
	void OnPlayerInfoClick(int playerId);
	void OnMatchManagementButtonClick();
	void OnMatchMakingBanTimeout();
	void OnInviteFriendClick();
	void OnDailyRitualsClick();
	void OnCrowdPlayButtonClick();
	void OnChatInputMouseOver(bool isMouseOver);
	void OnCharacterSwapArrowClick(bool isNext);
	void OnCharacterInfoClick();
	void OnCancelButtonClick();
};

// Class DeadByDaylight.NavigationScreenScaleform
// 0x0000 (FullSize[0x02B0] - InheritedSize[0x02B0])
class UNavigationScreenScaleform : public UNavigationScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NavigationScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.NavigationScreenUMG
// 0x0010 (FullSize[0x02C0] - InheritedSize[0x02B0])
class UNavigationScreenUMG : public UNavigationScreen
{
public:
	unsigned char                                      UnknownData_H3O1[0x8];                                     // 0x02B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGLobbyScreen*                             _atlNavigationScreen;                                      // 0x02B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NavigationScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.NewContentPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UNewContentPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NewContentPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.NewsContentManager
// 0x00C8 (FullSize[0x00F8] - InheritedSize[0x0030])
class UNewsContentManager : public UObject
{
public:
	unsigned char                                      UnknownData_9A69[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T5BK[0xA8];                                    // 0x0050(0x00A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NewsContentManager");
		return ptr;
	}



};

// Class DeadByDaylight.NoPerkGeneratorRepairEscapeAchievement
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UNoPerkGeneratorRepairEscapeAchievement : public UactorComponent
{
public:
	unsigned char                                      UnknownData_XDG2[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NoPerkGeneratorRepairEscapeAchievement");
		return ptr;
	}



};

// Class DeadByDaylight.NotExhaustedActivationTimerElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UNotExhaustedActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.NotExhaustedActivationTimerElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ObjectPlacementUpdateStrategy
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UObjectPlacementUpdateStrategy : public UObject
{
public:
	unsigned char                                      UnknownData_KXIW[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ObjectPlacementUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.AlwaysUseCurrentLocationPlacementStrategy
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UAlwaysUseCurrentLocationPlacementStrategy : public UObjectPlacementUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AlwaysUseCurrentLocationPlacementStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.BufferLastValidLocationObjectPlacementStrategy
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UBufferLastValidLocationObjectPlacementStrategy : public UObjectPlacementUpdateStrategy
{
public:
	float                                              _maxDistanceToOwner;                                       // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U85S[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BufferLastValidLocationObjectPlacementStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy
// 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
class UObjectPlacementValidationWithRestrictionStrategy : public UDefaultObjectPlacementValidationStrategy
{
public:
	TArray<class URestrictedPlacementAreaStrategy*>    _restrictedAreas;                                          // 0x00E0(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, NoClear, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy");
		return ptr;
	}



	void OnLevelReadyToPlay();
};

// Class DeadByDaylight.ObjectPlacerComponent
// 0x0050 (FullSize[0x0260] - InheritedSize[0x0210])
class UObjectPlacerComponent : public USceneComponent
{
public:
	class UStaticMeshComponent*                        _objectMesh;                                               // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _socketName;                                               // 0x0218(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _indicatorOffsetY;                                         // 0x0224(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _indicatorOffsetX;                                         // 0x0228(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _itemObjectId;                                             // 0x022C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _showIndicator;                                            // 0x0238(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stayActiveWhileItemInUse;                                 // 0x0239(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8AJ9[0xE];                                     // 0x023A(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectPlacementUpdateStrategy*              _objectPlacementUpdateStrategy;                            // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObjectPlacementValidationStrategy*          _objectPlacementValidationStrategy;                        // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DHQD[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ObjectPlacerComponent");
		return ptr;
	}



	void SetObjectMesh(class UStaticMeshComponent* objectMesh);
	void SetIndicatorOffsetY(float y);
	void SetIndicatorOffsetX(float x);
	bool IsPlacementValid();
	struct FRotator GetObjectPlacementRotation();
	struct Fvector GetObjectPlacementLocation();
	void ActivateObjectPlacement(bool active);
};

// Class DeadByDaylight.OfferingCard
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class UOfferingCard : public Uactor
{
public:
	TArray<struct FRarityTexture>                      RarityTextures;                                            // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOfferingTypeTexture>                OfferingTypeTextures;                                      // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OfferingCard");
		return ptr;
	}



	void playAnim(DeadByDaylight_EOfferingAnimState state);
};

// Class DeadByDaylight.OfferingEffectCollection
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UOfferingEffectCollection : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_K4UL[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OfferingEffectCollection");
		return ptr;
	}



	bool HasOfferingWithTag(int playerId, const struct FName& tag);
	bool HasOfferingOfType(DeadByDaylight_EOfferingEffectType type, int playerId, const struct FName& tag);
};

// Class DeadByDaylight.OfferingHandler
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UOfferingHandler : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               _levelPerkIDs;                                             // 0x0038(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OfferingHandler");
		return ptr;
	}



};

// Class DeadByDaylight.OfferingSequenceAssets
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class UOfferingSequenceAssets : public Uactor
{
public:
	TArray<struct FOfferingRevealDelays>               OfferingRevealDelays;                                      // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UOfferingCard*>                       Cards;                                                     // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OfferingSequenceAssets");
		return ptr;
	}



	void PlaySmoke();
	void PlayFadeOut();
	void PlayFadeIn();
};

// Class DeadByDaylight.OfferingSequenceManager
// 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
class UOfferingSequenceManager : public Uactor
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UplayerController*                           _localPlayerController;                                    // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOfferingHandler*                            _offeringHandler;                                          // 0x0240(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOfferingSequenceAssets*                     _sequenceAssets;                                           // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDLobbyHud*                                _hud;                                                      // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraActor*                                _offeringCamera;                                           // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PPEL[0x20];                                    // 0x0260(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OfferingSequenceManager");
		return ptr;
	}



	void FadeInScreen();
};

// Class DeadByDaylight.OfferingUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UOfferingUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OfferingUtilities");
		return ptr;
	}



	bool STATIC_IsPlayerEquippedWithOfferingWithTag(class UdbdPlayer* player, const struct FName& offeringTag);
	bool STATIC_HasItemLossProtection(class UdbdPlayer* player);
};

// Class DeadByDaylight.OfflineLobbyLevel
// 0x01D8 (FullSize[0x0470] - InheritedSize[0x0298])
class UOfflineLobbyLevel : public ULobbyLevel
{
public:
	struct Fvector                                     _partyLobbyInviteButtonOffset;                             // 0x0298(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6YHS[0x4];                                     // 0x02A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UPlayerStart>>         _roleSelectionCamperSpawns;                                // 0x02A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UPlayerStart>>         _roleSelectionSlasherSpawns;                               // 0x02B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDisplayStand>                _offlineLobbyLocalSlasherSpawn;                            // 0x02C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct Fvector                                     _partyLobbyEmptySlotFxOffset;                              // 0x02D0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDisplayStand>                _offlineLobbyLocalCamperSpawn;                             // 0x02DC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CZ4K[0x4];                                     // 0x02E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct Fvector>                             _partyLobbySlasherPOVTrackerOffsets;                       // 0x02E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _partyLobbyEmptySlotSilhouette[0x30];                      // 0x02F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<TWeakObjectPtr<class UDisplayStand>>        _partyLobbySlasherDisplayStands;                           // 0x0328(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UDisplayStand>>        _partyLobbyCamperDisplayStands;                            // 0x0338(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _meatHookForCustomization[0x30];                           // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TWeakObjectPtr<class UTargetPoint>                 _meatHookSpawn;                                            // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _charmForCustomizationZoom[0x30];                          // 0x0380(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TWeakObjectPtr<class UTargetPoint>                 _camperCharmSpawn;                                         // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UTargetPoint>                 _slasherCharmSpawn;                                        // 0x03B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class UDisplayStand>, TWeakObjectPtr<class UDBDMenuSilhouette>> _partyLobbyEmptySlotPawns;                                 // 0x03C0(0x0050) (Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R1IH[0x48];                                    // 0x0410(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDBDMenuPlayer*>                      _destroyingPawns;                                          // 0x0458(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HWU7[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OfflineLobbyLevel");
		return ptr;
	}



	void OnStateChanged(DeadByDaylight_EOfflineLobbyState lobbyState);
	void CheckDestroyingPawns(class Uactor* destroyedActor);
};

// Class DeadByDaylight.OniBasicAttackComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UOniBasicAttackComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_T1TC[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OniBasicAttackComponent");
		return ptr;
	}



};

// Class DeadByDaylight.OniDemonModeAttackStateComponent
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UOniDemonModeAttackStateComponent : public UChargedAttackStateComponent
{
public:
	struct FScriptMulticastDelegate                    OnChargedAttackReadyChanged;                               // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KW14[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OniDemonModeAttackStateComponent");
		return ptr;
	}



};

// Class DeadByDaylight.OnlineLobbyLevel
// 0x0038 (FullSize[0x02D0] - InheritedSize[0x0298])
class UOnlineLobbyLevel : public ULobbyLevel
{
public:
	class UProceduralGenerationData*                   ProceduralGenerationData;                                  // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct Fvector>                             _onlineLobbySlasherPOVTrackerOffsets;                      // 0x02A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UDisplayStand>>        _onlineLobbyCamperDisplayStands;                           // 0x02B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class UDisplayStand>>        _onlineLobbySlasherDisplayStands;                          // 0x02C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OnlineLobbyLevel");
		return ptr;
	}



};

// Class DeadByDaylight.OnlinePrivilegeManager
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UOnlinePrivilegeManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_HJHV[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OnlinePrivilegeManager");
		return ptr;
	}



};

// Class DeadByDaylight.OnlineSystemHandler
// 0x0408 (FullSize[0x0438] - InheritedSize[0x0030])
class UOnlineSystemHandler : public UObject
{
public:
	unsigned char                                      UnknownData_XCIZ[0x168];                                   // 0x0030(0x0168) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULocalPlayer*                                _cachedLocalPlayer;                                        // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSessionDS*                              _gameSessionDS;                                            // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V47S[0x208];                                   // 0x01B0(0x0208) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDServerInstance*                          _serverInstance;                                           // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WI2H[0x30];                                    // 0x03C0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCrossPlatformManager*                       _crossPlatformManager;                                     // 0x03F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ARAJ[0x40];                                    // 0x03F8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OnlineSystemHandler");
		return ptr;
	}



};

// Class DeadByDaylight.OutfitHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UOutfitHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OutfitHelper");
		return ptr;
	}



};

// Class DeadByDaylight.OutfitRecommendationsFilter
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UOutfitRecommendationsFilter : public URecommendationsFilter
{
public:
	unsigned char                                      UnknownData_DJ8K[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OutfitRecommendationsFilter");
		return ptr;
	}



};

// Class DeadByDaylight.OutlineUpdateStrategyTickManager
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UOutlineUpdateStrategyTickManager : public UWorldSubsystem
{
public:
	unsigned char                                      UnknownData_F291[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OutlineUpdateStrategyTickManager");
		return ptr;
	}



};

// Class DeadByDaylight.OutOfSightMeshRotator
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UOutOfSightMeshRotator : public UactorComponent
{
public:
	float                                              _maxDistance;                                              // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _dotProductThreshold;                                      // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UdbdPlayer*                                  _locallyObservedPlayer;                                    // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>                _meshesToRotate;                                           // 0x00C8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RZFH[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OutOfSightMeshRotator");
		return ptr;
	}



	void SetMeshesToRotate(TArray<class UStaticMeshComponent*> meshesToRotate);
};

// Class DeadByDaylight.OverlayMenuScreen
// 0x0258 (FullSize[0x0378] - InheritedSize[0x0120])
class UOverlayMenuScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_UWT0[0x258];                                   // 0x0120(0x0258) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OverlayMenuScreen");
		return ptr;
	}



	void OnTutorialLevelSelected(const struct FString& tutorialLevelId);
	void OnTopicVideoPositioned(float stageX, float stageY, float stageWidth, float stageHeight);
	void OnTopicVideoChanged(const struct FString& videoID);
	void OnSurvivorCameraSensitivityChanged(int Value);
	void OnSettingsOptionIntValueChanged(int Id, int Value);
	void OnSettingsOptionCheckboxSelected(int Id, bool isSelected);
	void OnSettingsOptionButtonClicked(int Id);
	void OnSelectTab(int TabIndex);
	void OnResetDefaults(const struct FString& keyBindingsData, int mustBeGamepadKey);
	void OnRequestKeyInput(const struct FString& name, bool isAxis, float scale, const struct FString& key);
	void OnQuitButtonClick();
	void OnPrivacyPolicyButtonClick();
	void OnPlayerInfoClick(const struct FString& playerId);
	void OnLanguageChange(int Value);
	void OnKillerCameraSensitivityChanged(int Value);
	void OnInvertYClick(bool Value);
	void OnInteractionButtonClick(int Value);
	void OnHideTutorialClick();
	void OnHandSideClick(int Value);
	void OnForumsButtonClick();
	void OnEULAButtonClick();
	void OnCustomerSupportButtonClick();
	void OnBackButtonClick();
	void OnAtlantaSettingButtonClick(int buttonid);
	void OnAimAssistClick(bool Value);
};

// Class DeadByDaylight.OverlayMenuScreenScaleform
// 0x0000 (FullSize[0x0378] - InheritedSize[0x0378])
class UOverlayMenuScreenScaleform : public UOverlayMenuScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OverlayMenuScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.OverlayMenuScreenUMG
// 0x0008 (FullSize[0x0380] - InheritedSize[0x0378])
class UOverlayMenuScreenUMG : public UOverlayMenuScreen
{
public:
	class UUMGAtlantaSettingScreen*                    _atlOverlayMenuScreen;                                     // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.OverlayMenuScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.pallet
// 0x0108 (FullSize[0x03E0] - InheritedSize[0x02D8])
class Upallet : public Uinteractable
{
public:
	float                                              PalletDownEvadeDoorFrontPointOffset;                       // 0x02D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EPalletState                        _state;                                                    // 0x02DC(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isIllusionaryPalletDown;                                  // 0x02DD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2A30[0x2];                                     // 0x02DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UskeletalMeshComponent*                      _illusionaryPallet;                                        // 0x02E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UinteractionDefinition*                      _destroyLeft;                                              // 0x02E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UinteractionDefinition*                      _destroyRight;                                             // 0x02F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _pushBox;                                                  // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDotproductThresholdForPulldownAccross;                 // 0x0300(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fallDuration;                                             // 0x0304(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _stunBox;                                                  // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _stunnedActors[0x50];                                      // 0x0310(0x0050) UNKNOWN PROPERTY: SetProperty
	class UPalletAnimInstance*                         _palletAnimInstance;                                       // 0x0360(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UdbdPlayer*                                  _playerExecutingPulldown;                                  // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalletPushSettings                         _pushSettings;                                             // 0x0370(0x0002) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D7U2[0x3E];                                    // 0x0372(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDNavEvadeLoopComponent*                   _navEvadeLoopComponent;                                    // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalletPulldownBlockerComponent*             _palletPulldownBlockerComponent;                           // 0x03B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDreamPallet;                                            // 0x03C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4FA7[0x1F];                                    // 0x03C1(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.pallet");
		return ptr;
	}



	void UpdateIllusionaryPallet();
	void SetPalletState(DeadByDaylight_EPalletState state);
	void SetIllusionaryPallet(class UskeletalMeshComponent* pallet);
	void ResetPallet();
	void PulldownPallet();
	void PullDown(class UdbdPlayer* player, const struct FPalletPushSettings& pushSettings);
	void OnStunOverlap(class UprimitiveComponent* overlappedComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
	void OnPalletStunHit();
	void OnPalletPulledUp_BP();
	void OnPalletPulldownBlockedByEntityShow();
	void OnPalletPulldownBlockedByEntityHide();
	void OnFallen();
	void Multicast_StunPlayer(class Uactor* actor, class UcamperPlayer* Survivor, bool stunBreakPallet);
	void Multicast_ResetPallet();
	void Multicast_PulldownPallet();
	bool IsPulldownBlockedByEntity();
	class UdbdPlayer* GetPlayerDoingPulldown();
	bool GetIsPulledDown();
	bool GetIsDreamPallet();
	float GetFallDuration();
	void GetDestructibleAreaPrimitiveComponents(TArray<class UprimitiveComponent*>* prims);
	void ExplodeStunPallet(class UdbdPlayer* player);
	void ExplodePallet(class UdbdPlayer* player);
	bool CanPulldown(class UdbdPlayer* player, const struct Fvector& InteractionAxis, bool isStationary);
	void Authority_StunSlashersinStunZone(class Uactor* actor);
	void Authority_OnOverlapPushBox(class UprimitiveComponent* overlappedComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
};

// Class DeadByDaylight.PalletAnimInstance
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UPalletAnimInstance : public USleepingAnimInstance
{
public:
	bool                                               IsPulledDown;                                              // 0x0280(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingPulledUp;                                           // 0x0281(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CUXB[0xE];                                     // 0x0282(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PalletAnimInstance");
		return ptr;
	}



	void SetIsPulledDown(bool IsPulledDown);
};

// Class DeadByDaylight.PalletPulldownBlockerComponent
// 0x00B8 (FullSize[0x0170] - InheritedSize[0x00B8])
class UPalletPulldownBlockerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_8DTS[0xA8];                                    // 0x00B8(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isPalletPulldownBlockedByEntity;                          // 0x0160(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TXTB[0x3];                                     // 0x0161(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _blockedDisappearFxTime;                                   // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8XL3[0x8];                                     // 0x0168(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PalletPulldownBlockerComponent");
		return ptr;
	}



	void OnRep_IsPalletPulldownBlockedByEntity();
	void Multicast_PalletPulldownBlockedShowCosmetic();
	void Multicast_PalletPulldownBlockedHideCosmetic();
};

// Class DeadByDaylight.PalletTracker
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class UPalletTracker : public Uactor
{
public:
	class Upallet*                                     _procedurallySpawnedPallet;                                // 0x0230(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Upallet*                                     _dreamPallet;                                              // 0x0238(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             _indicatorLocation;                                        // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OG9R[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PalletTracker");
		return ptr;
	}



	void RevealToLocalPlayerBP(bool shown);
	void InitializeTunableValues(class UslasherPlayer* slasher);
	void EnableSelectedEffectToLocalPlayer(bool Activated);
	bool CanSpawnDreamPalletAtLocation();
};

// Class DeadByDaylight.PanelScreen
// 0x01F8 (FullSize[0x0318] - InheritedSize[0x0120])
class UPanelScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_6P8W[0x1F8];                                   // 0x0120(0x01F8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PanelScreen");
		return ptr;
	}



	void OnWebNodeSelected(int CharacterId, int Id, int nodeDepth);
	void OnWebBuilt(int CharacterId);
	void OnStoreButtonClick();
	void OnSideTabButtonClick(int TabIndex);
	void OnSelectedEquipableSlotZoomChange(bool zoomIn);
	void OnRotateCharacter(float mouseDistanceChange);
	void OnRoleButtonClick();
	void OnReservedBloodPoints(int CharacterId, int bloodPoints, bool fullCost);
	void OnRegenerateButtonClick(int CharacterId);
	void OnPrestigeUp(int CharacterId);
	void OnPanelsHidden();
	void OnLoadoutSlotButtonClick(int slotIndex);
	void OnItemUnselected(int ItemIndex);
	void OnItemSelected(int ItemIndex);
	void OnEquipableSlotClicked(int clickedSlotCategory, int clickedSlotIndex);
	void OnCrowdChoiceCharacterClick();
	void OnConfirmCollectSelectedNode(int CharacterId);
	void OnCharInfoClick();
	void OnCharacterSlotButtonClick(int characterIndex);
	void OnAvailableItemsSortingChange(int newSorting);
	void OnAvailableItemClicked(int clickedItemIndex);
};

// Class DeadByDaylight.PanelScreenScaleform
// 0x0000 (FullSize[0x0318] - InheritedSize[0x0318])
class UPanelScreenScaleform : public UPanelScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PanelScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.PanelScreenUMG
// 0x0010 (FullSize[0x0328] - InheritedSize[0x0318])
class UPanelScreenUMG : public UPanelScreen
{
public:
	unsigned char                                      UnknownData_EFWK[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGSwitcherScreen*                          _atlantaPanelScreen;                                       // 0x0320(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PanelScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.ParticleSystemDistanceFaderComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UParticleSystemDistanceFaderComponent : public UactorComponent
{
public:
	class UParticleSystemComponent*                    ParticleSystemComponent;                                   // 0x00B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       OpacityParameterName;                                      // 0x00C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StartFadeDistance;                                         // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EndFadeDistance;                                           // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8FRU[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ParticleSystemDistanceFaderComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PartyEventsManager
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UPartyEventsManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_BNJO[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PartyEventsManager");
		return ptr;
	}



};

// Class DeadByDaylight.PerformanceDataAccumulator
// 0x0220 (FullSize[0x0250] - InheritedSize[0x0030])
class UPerformanceDataAccumulator : public UObject
{
public:
	unsigned char                                      UnknownData_YN4Y[0x220];                                   // 0x0030(0x0220) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerformanceDataAccumulator");
		return ptr;
	}



};

// Class DeadByDaylight.UMGLoadoutItemButton
// 0x01D0 (FullSize[0x04D0] - InheritedSize[0x0300])
class UUMGLoadoutItemButton : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnLoadoutItemButtonClicked;                                // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutItemButtonLongPress;                              // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               HideStackCount;                                            // 0x0320(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N7EB[0x7];                                     // 0x0321(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                EmptyCanvas;                                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Ubutton*                                     EmptyButton;                                               // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Ubutton*                                     LockedButton;                                              // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ActionCanvas;                                              // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImageRarityBG;                                             // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImageGradient;                                             // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImagePaint;                                                // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImageEventBorder;                                          // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImagePaintTop;                                             // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImagePaintBottom;                                          // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               EmptyCanvasVisibility;                                     // 0x0378(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               ActionCanvasVisibility;                                    // 0x0379(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PrivateCanvasVisibility;                                   // 0x037A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               LockIconVisibility;                                        // 0x037B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               EmptyIconVisibility;                                       // 0x037C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               SpecialEventVisiblity;                                     // 0x037D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               LoadoutSelectedVisibility;                                 // 0x037E(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               LoadoutLockVisibility;                                     // 0x037F(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImageIcon;                                                 // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      ImageShadow;                                               // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Ubutton*                                     ActionButton;                                              // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  EmptyBGAsset;                                              // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  DisableBGAsset;                                            // 0x03A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FInventorySlotData                          LoadoutItemData;                                           // 0x03A8(0x00F8) (BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               _triggerClickEventForLoadoutWidget;                        // 0x04A0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MW1Y[0x2F];                                    // 0x04A1(0x002F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLoadoutItemButton");
		return ptr;
	}



	void UpdateWidgetByState(DeadByDaylight_EInventoryButtonState state);
	void UpdateWidgetByData(const struct FInventorySlotData& slotData);
	void UpdateImageColor(DBDSharedTypes_EItemRarity rarity, DBDSharedTypes_EStatusEffectType effectType);
	void SetIsSelected(bool isSelected);
	void SetIconImageByPath(const struct FString& iconPath);
	void OnLockedButtonClicked();
	void InitializationForLoadoutWidget();
	void InitializationForCharacterInfoWidget();
	struct FName GetLoadoutItemID();
	void BroadcastLongPressEvent(const struct FName& itemId);
	void BroadcastClickedEvent(const struct FName& itemId);
};

// Class DeadByDaylight.PerkActionButton
// 0x0018 (FullSize[0x04E8] - InheritedSize[0x04D0])
class UPerkActionButton : public UUMGLoadoutItemButton
{
public:
	class UTextBlock*                                  TextUnlockLevelTitle;                                      // 0x04D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Activatable;                                               // 0x04D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               SelectedImageVisibility;                                   // 0x04D9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ClickableButtonVisibility;                                 // 0x04DA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ClickableImageVisibility;                                  // 0x04DB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ProgressbarVisibility;                                     // 0x04DC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QBHI[0x3];                                     // 0x04DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IdleTime;                                                  // 0x04E0(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_02PO[0x4];                                     // 0x04E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkActionButton");
		return ptr;
	}



	void UpdateWidgetPercentage(float percentage);
	void SetIsActivatable(bool isClickable);
	void SetCanEverBeActivated();
	void CallSetPerkLevel(int level);
};

// Class DeadByDaylight.PerkAnalytics
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPerkAnalytics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkAnalytics");
		return ptr;
	}



	void STATIC_SendTinkererUndetectableInterruptAnalytics(class UdbdPlayer* interruptedPlayer, class UdbdPlayer* slasher);
	void STATIC_SendTinkererUndetectableHitNearGeneratorAnalytics(class UdbdPlayer* hitPlayer, class UdbdPlayer* slasher);
	void STATIC_SendLightbornAuraRevealedAnalytics(class UdbdPlayer* revealedPlayer, class UdbdPlayer* slasher);
	void STATIC_SendKnockoutSurvivorFoundAnalytics(class UdbdPlayer* findingSurvivor, class UdbdPlayer* foundSurvivor);
	void STATIC_SendFranklinsHitSurvivorNearDroppedItemAnalytics(class UdbdPlayer* HitSurvivor, class UdbdPlayer* slasher);
	void STATIC_SendFranklinsConsumeItemAnalytics(class UdbdPlayer* previousOwner);
};

// Class DeadByDaylight.PerkCollectionComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UPerkCollectionComponent : public UactorComponent
{
public:
	TArray<class Uperk*>                               _array;                                                    // 0x00B8(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P3CY[0x18];                                    // 0x00C8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkCollectionComponent");
		return ptr;
	}



	void OnRep_Array(TArray<class Uperk*> oldArray);
};

// Class DeadByDaylight.PerkHudWidget
// 0x0138 (FullSize[0x0438] - InheritedSize[0x0300])
class UPerkHudWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                PerksClickable;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                PerksExternal;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AtlantaPerkActionButtonClass[0x30];                        // 0x0310(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TMap<struct FName, class UPerkActionButton*>       _clickablePerksMap;                                        // 0x0340(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FName, class UPerkActionButton*>       _externalPerksMap;                                         // 0x0390(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2HDK[0x58];                                    // 0x03E0(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkHudWidget");
		return ptr;
	}



	void RemoveExistingPerk(const struct FName& perkID, bool isExternal);
	void OnPerkClickedHandler(const struct FName& perkID);
};

// Class DeadByDaylight.PerkManager
// 0x0208 (FullSize[0x02C0] - InheritedSize[0x00B8])
class UPerkManager : public UactorComponent
{
public:
	unsigned char                                      UnknownData_UMWM[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPerkCollectionComponent*                    _perks;                                                    // 0x00C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffectCollectionComponent*            _statusEffects;                                            // 0x00D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_USJ1[0x1E8];                                   // 0x00D8(0x01E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkManager");
		return ptr;
	}



	void OnIsApplicableChanged(class UgameplayModifierContainer* gameplayModifierContainer, bool isApplicable);
	bool HasPerkModifierOfType(const struct FgameplayTag& type);
	bool HasPerkFlag(const struct FgameplayTag& flag, DeadByDaylight_EGameplayModifierSource filter);
	bool HasAnyEffectWithID(const struct FName& Id);
	bool HasAnyAddonWithTag(const struct FName& tag);
	bool HasAllCharacterPerksEquipped();
	class UstatusEffect* GetStatusEffect(const struct FName& Id);
	class UgameplayModifierContainer* GetSourceWithModifier(const struct FgameplayTag& type, DeadByDaylight_EGameplayModifierSource filter);
	class UgameplayModifierContainer* GetSourceWithFlag(const struct FgameplayTag& flag, DeadByDaylight_EGameplayModifierSource filter);
	float GetPerkModifierMinValueAndSource(const struct FgameplayTag& type, float startValue, class UgameplayModifierContainer** outSource);
	float GetPerkModifierMinValue(const struct FgameplayTag& type, float startValue);
	float GetPerkModifierMaxValueAndSource(const struct FgameplayTag& type, class UgameplayModifierContainer** outSource);
	float GetPerkModifierMaxValue(const struct FgameplayTag& type);
	float GetPerkModifierAdditiveValue(const struct FgameplayTag& type, float BaseValue);
	float GetPerkModifier(const struct FgameplayTag& type, DeadByDaylight_EGameplayModifierSource filter);
	class Uperk* GetPerk(const struct FName& Id);
	float GetMultiplicativeModifierValueWithCompoundNegative(const struct FgameplayTag& type, DeadByDaylight_EGameplayModifierSource filter);
	float GetMultiplicativeModifierValueOfContainerWithCompoundNegative(const struct FGameplayTagContainer& container, DeadByDaylight_EGameplayModifierSource filter);
	float GetMultiplicativeModifierValue(const struct FgameplayTag& type);
	TArray<class UstatusEffect*> GetAllStatusEffects(const struct FName& Id);
	TArray<class UgameplayModifierContainer*> GetAllSourcesWithModifier(const struct FgameplayTag& type, DeadByDaylight_EGameplayModifierSource filter);
	TArray<class UgameplayModifierContainer*> GetAllSourcesWithFlag(const struct FgameplayTag& flag, DeadByDaylight_EGameplayModifierSource filter);
	void Authority_RemoveStatusEffectByID(const struct FName& statusEffectID, bool bRemoveAllWithID);
	void Authority_RemoveStatusEffect(class UstatusEffect* statusEffect);
	class UstatusEffect* Authority_ImposeStatusEffect(const struct FName& statusEffectID, class UdbdPlayer* originatingPlayer, float CustomParam, class UgameplayModifierContainer* originatingEffect, bool ShouldDisplay, float lifeTime);
	class UstatusEffect* Authority_ImposeNewStatusEffectOrChangeLifeTime(const struct FName& statusEffectID, class UdbdPlayer* originatingPlayer, float lifeTime, float CustomParam, class UgameplayModifierContainer* originatingEffect, bool ShouldDisplay);
	class UstatusEffect* Authority_ImposeDynamicStatusEffect(const struct FName& statusEffectID, class UdbdPlayer* originatingPlayer, float CustomParam, class UgameplayModifierContainer* originatingEffect);
	void Authority_EndStatusEffectByID(const struct FName& statusEffectID, bool bRemoveAllWithID);
};

// Class DeadByDaylight.PerkManagerOwnerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPerkManagerOwnerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkManagerOwnerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.PerkOwnerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPerkOwnerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkOwnerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.PerkSelectionPopupScreenUMG
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UPerkSelectionPopupScreenUMG : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkSelectionPopupScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.PerkSelectionSlotWidget
// 0x0088 (FullSize[0x0388] - InheritedSize[0x0300])
class UPerkSelectionSlotWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PerkName;                                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextChoose;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkActionButton*                           PerkActionButton;                                          // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      SelectedIcon;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DescriptionText;                                           // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Ubutton*                                     SelectionButton;                                           // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PictureBackground;                                         // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PicturePerkBackground;                                     // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PictureHighlightFrame;                                     // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PictureTopRightBackground;                                 // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PictureTopRightFrame;                                      // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HighOpacity;                                               // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LowOpacity;                                                // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PerkBackgroundLowOpacity;                                  // 0x0360(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DescriptionBackgroundLowOpacity;                           // 0x0364(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RMSX[0x20];                                    // 0x0368(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkSelectionSlotWidget");
		return ptr;
	}



	void OnButtonClicked();
};

// Class DeadByDaylight.PerkSoundHudIcon
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UPerkSoundHudIcon : public UMobileBaseUserWidget
{
public:
	struct FName                                       perkID;                                                    // 0x0300(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VLNH[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkSoundHudIcon");
		return ptr;
	}



	void ClearPerk();
	void ActivatePerk(float percentage);
};

// Class DeadByDaylight.PerkSoundHudIconSporadic
// 0x0038 (FullSize[0x0348] - InheritedSize[0x0310])
class UPerkSoundHudIconSporadic : public UPerkSoundHudIcon
{
public:
	class UCanvasPanel*                                SporadicIcon;                                              // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeInRate;                                                // 0x0318(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeOutRate;                                               // 0x031C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AnimationStartOpacity;                                     // 0x0320(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FadePolynomialOrder;                                       // 0x0324(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DisplayIcon;                                               // 0x0328(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ERK3[0x1F];                                    // 0x0329(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkSoundHudIconSporadic");
		return ptr;
	}



	void NativeTick(const struct FGeometry& MyGeometry, float deltaTime);
};

// Class DeadByDaylight.PerkSoundHudWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UPerkSoundHudWidget : public UMobileBaseUserWidget
{
public:
	class UHorizontalBox*                              PerkIcons;                                                 // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PerkSoundHudWidget");
		return ptr;
	}



};

// Class DeadByDaylight.PhantomTrap
// 0x0018 (FullSize[0x02F0] - InheritedSize[0x02D8])
class UPhantomTrap : public Uinteractable
{
public:
	class UTerrorRadiusEmitterComponent*               _terrorRadiusEmitter;                                      // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _lineOfSightTraceMinInterval;                              // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9LL2[0xC];                                     // 0x02E4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PhantomTrap");
		return ptr;
	}



	bool isTrapSet();
	void InitializeTerrorRadiusEmitter(class UslasherPlayer* OwningSlasher);
	bool EvaluateLineOfSight(const struct Fvector& start, const struct Fvector& end, class Uactor* ignoredActor);
};

// Class DeadByDaylight.PhaseWalkingComponent
// 0x0120 (FullSize[0x01D8] - InheritedSize[0x00B8])
class UPhaseWalkingComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPhaseWalkInfoReceived;                                   // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameEndedVFX;                                            // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TriggerSurvivorVisibilityVFX;                              // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TriggerKillerVisibilityVFX;                                // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMaxActivePhaseWalkCharges;                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      _huskClass;                                                // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTagStateBool                               _isActivePhaseWalking;                                     // 0x0110(0x0030) (Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isPassivePhaseWalking;                                    // 0x0140(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInteractionPhaseWalking;                                // 0x0141(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3LML[0x6];                                     // 0x0142(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uactor*                                      _husk;                                                     // 0x0148(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDBidirectionalTimer                      _activePhaseWalkCharges;                                   // 0x0150(0x0028) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZDY6[0x28];                                    // 0x0178(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _survivorsWereVisible;                                     // 0x01A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I3PI[0x37];                                    // 0x01A1(0x0037) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PhaseWalkingComponent");
		return ptr;
	}



	void UpdateSurvivorVisibility(bool Visible);
	void UpdateKillerVisibility();
	void Server_Broadcast_PhaseWalk(const struct FphaseWalkInfo& phaseWalkInfo);
	void Multicast_Broadcast_PhaseWalk(const struct FphaseWalkInfo& phaseWalkInfo);
	void ModifyActivePhaseWalkCharges(float delta);
	void Local_PhaseWalk(const struct FphaseWalkInfo& phaseWalkInfo);
	void Local_EndPhaseWalks();
	bool IsPhaseWalking();
	bool IsPassivePhaseWalking();
	bool IsActivePhaseWalking();
	void InitializePhaseWalkVariables();
	struct FDBDTimer GetPassivePhaseWalkTimer();
	class Uactor* GetHusk();
	class UDecoySlasherComponent* GetDecoySlasherComponent();
	float GetActivePhaseWalkCharges();
	float GetActivePhaseWalkChargePercentage();
	bool CanStartActivePhaseWalk();
	void BroadcastTriggerSurvivorVisibilityVFX(bool Visible);
};

// Class DeadByDaylight.PlagueUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPlagueUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlagueUtilities");
		return ptr;
	}



	bool STATIC_IsPlagueDebugModeActive();
	bool STATIC_IsInfected(class UdbdPlayer* player);
	bool STATIC_HasMaxLevelSickness(class UdbdPlayer* player);
	class USurvivorPlagueEffect* STATIC_GetPlagueEffect(class UdbdPlayer* player);
	void STATIC_Authority_AddSicknessToPlayer(class UdbdPlayer* player, float sicknessToAdd);
};

// Class DeadByDaylight.PlayerDataStorageFacade
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UPlayerDataStorageFacade : public UObject
{
public:
	unsigned char                                      UnknownData_25SR[0x58];                                    // 0x0030(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerDataStorageFacade");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerDebugComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UPlayerDebugComponent : public UactorComponent
{
public:
	bool                                               _disableStartUpdateMontageDuringEnter;                     // 0x00B8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _allowPalletPullUpInteraction;                             // 0x00B9(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XTUD[0x6];                                     // 0x00BA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerDebugComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerGameRelevancyComponent
// 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
class UPlayerGameRelevancyComponent : public UactorComponent
{
public:
	struct FTagStateBool                               _isRelevantToGameplay;                                     // 0x00B8(0x0030) (Net, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WT9X[0x28];                                    // 0x00E8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerGameRelevancyComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerInteractionHandler
// 0x0318 (FullSize[0x03D0] - InheritedSize[0x00B8])
class UPlayerInteractionHandler : public UactorComponent
{
public:
	unsigned char                                      UnknownData_0JYU[0x68];                                    // 0x00B8(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PriorityConeAngle;                                         // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6W4K[0x14];                                    // 0x0124(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    NewInteractionRequestedDelegate;                           // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ServerValidatedInteractionStartedDelegate;                 // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ServerValidatedInteractionEndedDelegate;                   // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	DeadByDaylight_EInteractionLayer                   InteractionLayer;                                          // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9RH4[0xF];                                     // 0x0169(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDeactivateSkillCheckDelegate;                            // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VIIV[0x38];                                    // 0x0188(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _hasInteractionRequest;                                    // 0x01C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasInteractionRequestInBuffer;                            // 0x01C1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ATKJ[0x1E];                                    // 0x01C2(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UinteractionDefinition*                      _interactionToSwapTo;                                      // 0x01E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8312[0x20];                                    // 0x01E8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UinteractionDefinition*                      _currentInteraction;                                       // 0x0208(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V7Q0[0xA0];                                    // 0x0210(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UdbdPlayer*>                          _currentPlayerDependencies;                                // 0x02B0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EInputInteractionType               _currentInteractionType;                                   // 0x02C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1IBK[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkillCheck*                                 _skillCheck;                                               // 0x02C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G0VX[0x8];                                     // 0x02D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      _progressBasedSkillChecks;                                 // 0x02D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4OJG[0x60];                                    // 0x02E8(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _requestedInterruptionOtherParty;                          // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UinterruptionDefinition*                     _requestedInterruptionDefinition;                          // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _requestedInterruptionIsInterruptor;                       // 0x0358(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X1JH[0x7];                                     // 0x0359(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _currentInterruptionOtherParty;                            // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UinterruptionDefinition*                     _currentInterruptionDefinition;                            // 0x0368(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _currentInterruptionIsInterruptor;                         // 0x0370(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _interactionInProgress;                                    // 0x0371(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8PWC[0x36];                                    // 0x0372(0x0036) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UinteractionDefinition*>              _interactionsInZone;                                       // 0x03A8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5C5R[0x18];                                    // 0x03B8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerInteractionHandler");
		return ptr;
	}



	void UnPauseSkillCheckTimer();
	void StartCustomSkillCheck(DBDSharedTypes_ESkillCheckCustomType type, float warningSoundDelay);
	void SetSkillCheckTimer(float delay);
	void SetScanForInteractionsEnabled(bool enabled);
	void Server_StoreInterruption_Interruptor(class UdbdPlayer* interruptionOtherParty, class UinterruptionDefinition* interruptionDefinition);
	void Server_SetInteractionToSwapTo(class UinteractionDefinition* interaction);
	void Server_RequestInterruption_Interruptor();
	void Server_DebugRequestInteraction(const struct FString& interactionName, const struct FString& interactorName, const struct FString& interactableName);
	void Server_CancelCurrentInteractionByInput();
	void Server_Broadcast_StoreInteraction(const struct FStoredInteraction& interactionToStore);
	void Server_Broadcast_ConfirmChargedCompleted(bool chargeComplete);
	void Server_AnswerInterruption_Interruptee(DeadByDaylight_ERequestState state);
	void ResetSuccessiveSkillCheckCount();
	void RemoveInteraction(class UinteractionDefinition* interaction);
	void PauseSkillCheckTimer();
	int NumInteractionsInZone();
	void Multicast_StoreInterruption_Interruptor(class UdbdPlayer* interruptionOtherParty, class UinterruptionDefinition* interruptionDefinition);
	void Multicast_StoreInteraction(const struct FStoredInteraction& interactionToStore);
	void Multicast_SetInteractionToSwapTo(class UinteractionDefinition* interaction);
	void Multicast_RequestInterruption_Interruptee(class UdbdPlayer* interruptionOtherParty, class UinterruptionDefinition* interruptionDefinition);
	void Multicast_InterruptionRequestResult_Interruptor(DeadByDaylight_ERequestState state);
	void Multicast_InteractionPredictionValidationResult(class UinteractionDefinition* interaction, DeadByDaylight_EInteractionValidationState state);
	void Multicast_CancelCurrentInteractionByInput();
	void IncrementSuccessiveSkillCheckCount();
	bool HasAvailableInteraction(DeadByDaylight_EInputInteractionType InteractionType);
	bool HasActiveSkillCheck();
	class USkillCheck* GetSkillCheck();
	float GetMultiplicativeSkillCheckProbabilityModifier();
	class UinteractionDefinition* GetCurrentInteractionOfType(DeadByDaylight_EInputInteractionType InteractionInputType);
	class UinteractionDefinition* GetCurrentInteraction();
	void GetAvailableInteractions(TArray<class UinteractionDefinition*>* result);
	class UinteractionDefinition* GetAvailableInteractionByID(const struct FString& interactionID);
	class UinteractionDefinition* GetAvailableInteraction(DeadByDaylight_EInputInteractionType InteractionType);
	float GetAdditiveSkillCheckProbabilityModifier();
	void Client_StartCustomSkillCheck(DBDSharedTypes_ESkillCheckCustomType type, float warningSoundDelay);
	void Client_NotifyChargeCompleted(class UinteractionDefinition* interaction);
	void CleanInteractionArray(class Uactor* destroyedActor);
	bool CanPerformInteraction(const struct FString& interactionName);
	void Broadcast_Multicast_ConfirmChargedCompleted(bool chargeComplete);
	void Authority_ClearPlayerDependency(class UdbdPlayer* playerDependency);
	void Authority_ClearPlayerDependencies();
	void AddSelfInteractions(class Uactor* interactionRoot);
	void AddInteraction(class UinteractionDefinition* interaction);
};

// Class DeadByDaylight.PlayerMoveBackAndForthComponent
// 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
class UPlayerMoveBackAndForthComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_5LNG[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerMoveBackAndForthComponent");
		return ptr;
	}



	void OnMoveTimerDone();
};

// Class DeadByDaylight.SpherePlayerOverlapComponent
// 0x0000 (FullSize[0x0450] - InheritedSize[0x0450])
class USpherePlayerOverlapComponent : public USphereComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpherePlayerOverlapComponent");
		return ptr;
	}



};

// Class DeadByDaylight.CapsulePlayerOverlapComponent
// 0x0000 (FullSize[0x0450] - InheritedSize[0x0450])
class UCapsulePlayerOverlapComponent : public UCapsuleComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.CapsulePlayerOverlapComponent");
		return ptr;
	}



};

// Class DeadByDaylight.BoxPlayerOverlapComponent
// 0x0000 (FullSize[0x0450] - InheritedSize[0x0450])
class UBoxPlayerOverlapComponent : public UBoxComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.BoxPlayerOverlapComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerPerspectiveComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UPlayerPerspectiveComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_B373[0x78];                                    // 0x00B8(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerPerspectiveComponent");
		return ptr;
	}



	void UpdateLocallyObserved();
	bool isLocallyObserved();
};

// Class DeadByDaylight.PlayerReportManager
// 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
class UPlayerReportManager : public UObject
{
public:
	unsigned char                                      UnknownData_XTRT[0xB8];                                    // 0x0030(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PlayerReportManager");
		return ptr;
	}



};

// Class DeadByDaylight.PollableEventListener
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UPollableEventListener : public UactorComponent
{
public:
	unsigned char                                      UnknownData_A3B5[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PollableEventListener");
		return ptr;
	}



};

// Class DeadByDaylight.PoolableProjectileComponent
// 0x0000 (FullSize[0x00D8] - InheritedSize[0x00D8])
class UPoolableProjectileComponent : public UAuthoritativePoolableActorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PoolableProjectileComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PopupFactory
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPopupFactory : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PopupFactory");
		return ptr;
	}



};

// Class DeadByDaylight.PopupSequencer
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UPopupSequencer : public UObject
{
public:
	unsigned char                                      UnknownData_GRFY[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KBLP[0x20];                                    // 0x0040(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PopupSequencer");
		return ptr;
	}



};

// Class DeadByDaylight.PortalOutlineUpdateStrategy
// 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
class UPortalOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _survivorAuraColor;                                        // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PortalOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.PortalPlacerStateComponent
// 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
class UPortalPlacerStateComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTeleportCooldownComplete;                                // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J2B1[0xC];                                     // 0x00C8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _remainingPortals;                                         // 0x00D4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UO7E[0x48];                                    // 0x00D8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDemogorgonPortal*>                   _placedPortals;                                            // 0x0120(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPortalRestrictedLocation>           _restrictedPortalLocations;                                // 0x0130(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OPGT[0x18];                                    // 0x0140(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PortalPlacerStateComponent");
		return ptr;
	}



	void UpdateRemainingPortalCount();
	void OnLevelReadyToPlay();
	void OnDemogorgonTeleportCooldownComplete__DelegateSignature();
	bool IsUsePortalCooldownDone();
	void InitializeTunableValues(class UslasherPlayer* Killer);
	float GetTeleportDuration();
	int GetRemainingPortalCount();
};

// Class DeadByDaylight.PortalRadiusDetectorComponent
// 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
class UPortalRadiusDetectorComponent : public UactorComponent
{
public:
	TArray<class UDemogorgonPortal*>                   Portals;                                                   // 0x00B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UdbdPlayer*>                          _playersInsideRadius;                                      // 0x00C8(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2AP7[0x38];                                    // 0x00D8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PortalRadiusDetectorComponent");
		return ptr;
	}



	void OnRep_PlayersInsideRadius();
	void OnPortalEffectsAppliedMultiDelegate__DelegateSignature();
	void Authority_OnLevelReadyToPlay();
	void Authority_CallOnPortalEffectsApplied(const struct FScriptDelegate& CallBack);
};

// Class DeadByDaylight.PortalTargetingComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UPortalTargetingComponent : public UactorComponent
{
public:
	class UDemogorgonPortal*                           _targetedPortal;                                           // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPortalPlacerStateComponent*                 _portalPlacerState;                                        // 0x00C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VE5G[0x20];                                    // 0x00C8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PortalTargetingComponent");
		return ptr;
	}



	void SetIsPorting(bool isPorting);
	void Server_SetTargetedPortal(class UDemogorgonPortal* targetedPortal);
	void Multicast_SetTargetedPortal(class UDemogorgonPortal* targetedPortal);
	class UDemogorgonPortal* GetTargetedPortal();
};

// Class DeadByDaylight.PowerButton
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UPowerButton : public UMobileBaseUserWidget
{
public:
	class UActionButton*                               button;                                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SwitchIcon;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CountContainer;                                            // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ProgressBarContainer;                                      // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CountLabel;                                                // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      TierImage;                                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AddonsContainer;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGInventoryItemButton*                     FirstAddonSlot;                                            // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGInventoryItemButton*                     SecondAddonSlot;                                           // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisabledOpacity;                                           // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnabledOpacity;                                            // 0x034C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                                PowerChargeProgression;                                    // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PowerButton");
		return ptr;
	}



	void SetSwitchIconActive(bool active);
	void SetState(DeadByDaylight_EActionButtonState state);
	void SetSecondaryBarProgression(float progression);
	void SetPowerIntensityOpacity(float opacity);
	void SetPowerChargeProgression(float progression);
	void OnUpdateItemProgress(int ItemIndex, float powerPercentage, float timePercentage);
	void OnTierChanged(int previousTier, int currentTier, bool isFirstTime);
	void OnSetItemProgressBarActive(int ItemIndex, bool active);
};

// Class DeadByDaylight.PremiumTransactionSubsystem
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UPremiumTransactionSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_TAQH[0x20];                                    // 0x0038(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PremiumTransactionSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.ProceduralGenerationData
// 0x0128 (FullSize[0x0160] - InheritedSize[0x0038])
class UProceduralGenerationData : public UDataAsset
{
public:
	TArray<struct FQuadrantSpawnTypeProperties>        QuadrantSpawnTypeProperties;                               // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQuadrantSpawnCategories>            QuadrantSpawnCategories;                                   // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FThemeProperties>                    ThemeProperties;                                           // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSurvivorCount;                                          // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_33LV[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKillerItemDependencies>             KillersItemDependencies;                                   // 0x0070(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SurvivorItemPopulationProbability;                         // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSurvivorItemProperties>             SurvivorItemProperty;                                      // 0x0088(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EscapeStrategyPopulationProbability;                       // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEscapeStrategyProperty>             EscapeStrategyProperties;                                  // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEscapeTypeObjects>                  EscapeTypeActors;                                          // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayElementsPopulation>         ElementsPopulation;                                        // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FManagedGameplayElementsPopulation>  ManagedElementsPopulation;                                 // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSurvivorGroupingProbability>        SurvivorGroupingProbabilities;                             // 0x00E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fvector                                     ProceduralMapOffset;                                       // 0x00F0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralTileWidth;                                       // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralTileHeight;                                      // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fvector                                     ProceduralQuadTileMapOffset;                               // 0x0104(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralQuadTileCubeWidth;                               // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DifficultyModifier;                                        // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharacterCameraHeight;                                     // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharacterCollisionRadius;                                  // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnerCollisionRadius;                                    // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotemVisualHeight;                                         // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpecialBehaviourPopulation>         SpecialBehaviourPopulation;                                // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FEventSubstitionData>                _eventProperties;                                          // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YKB7[0x18];                                    // 0x0148(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ProceduralGenerationData");
		return ptr;
	}



};

// Class DeadByDaylight.ProceduralLevelBuilder
// 0x0C20 (FullSize[0x0E50] - InheritedSize[0x0230])
class UProceduralLevelBuilder : public Uactor
{
public:
	struct FString                                     PathToMapDirectory;                                        // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PathToTilesDirectory;                                      // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KillerMinProximityFromCamper;                              // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMinProximityFromOtherCamper;                       // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenGenerators;                             // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenChests;                                 // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenTotems;                                 // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMinProximityFromGenerator;                         // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMinProximityFromTotem;                             // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMaxLineOfSightFromTotem;                           // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenSpecialBehaviourItems;                  // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpecialBehaviourItemMinProximityFromSurvivor;              // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpecialBehaviourItemMinProximityFromKiller;                // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FP0N[0x4];                                     // 0x027C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DebugMap;                                                  // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              DebugTiles;                                                // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmallMeatLockerMinProximityFromKillerLair;                 // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FactorToAdjustToWhenOutOfProximity;                        // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FactorToAdjustToWhenInLineOfSight;                         // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightAmplifier;                                           // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightAmplifierActivationHeight;                           // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CXC8[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProceduralGenerationData*                   ProceduralGenerationData;                                  // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TileWeightRateOfDecay;                                     // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QuadTileWeightRateOfDecay;                                 // 0x02BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VPEU[0x8];                                     // 0x02C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DesignTunableClass;                                        // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDDesignTunables*                          _designTunables;                                           // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGeneratedLevelData                         _generatedData;                                            // 0x02D8(0x02A0) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FDependency>                         _escapeDependencies;                                       // 0x0578(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2JPL[0x2A0];                                   // 0x0588(0x02A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _tileClass;                                                // 0x0828(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EPCD[0x1C0];                                   // 0x0830(0x01C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMapData*                                    _mapData;                                                  // 0x09F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObjectLibrary*                              _availableTilesLibrary;                                    // 0x09F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LQ2A[0xE8];                                    // 0x0A00(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectLibrary*                              _availableDerivedTileLibrary;                              // 0x0AE8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTileMatrix*                                 _tileMatrix;                                               // 0x0AF0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTileBank*                                   _tileBank;                                                 // 0x0AF8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RZLG[0x68];                                    // 0x0B00(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UActorSpawner*                               _killerLairSpawner;                                        // 0x0B68(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YQYR[0x8];                                     // 0x0B70(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSoftObjectPath>                     _preloadAssetReferences;                                   // 0x0B78(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _chestItemAssetReferences;                                 // 0x0B88(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _slasherPawn;                                              // 0x0B98(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MCF7[0x18];                                    // 0x0BA0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTile*>                               _tilesThatHaveBeenSpawned;                                 // 0x0BB8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MBI6[0x10];                                    // 0x0BC8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProceduralLevelData*                        _debugProceduralDatas;                                     // 0x0BD8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDClientSyncer*                            _syncer;                                                   // 0x0BE0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                        _blackboardComp;                                           // 0x0BE8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_42IK[0x58];                                    // 0x0BF0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEdgeObjectHandlingStrategy*                 _edgeObjectHandlingStrategy;                               // 0x0C48(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XFLM[0x200];                                   // 0x0C50(0x0200) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ProceduralLevelBuilder");
		return ptr;
	}



	void SyncSeeds();
	void StartGenerationOnSyncerReady();
	class Uactor* SpawnActor(class UClass* ActorClass, DeadByDaylight_ETileSpawnPointType spawnPointType);
	void RemoveMist();
	void OnMapLevelLoaded();
	void Multicast_DebugShareGenerationData(const struct FGenerationParams& usedParams);
	void BuildFromSeed();
	void ApplyMist(float modifier);
};

// Class DeadByDaylight.ProceduralLevelData
// 0x0318 (FullSize[0x0548] - InheritedSize[0x0230])
class UProceduralLevelData : public Uactor
{
public:
	unsigned char                                      SelectedPaperMap[0x30];                                    // 0x0230(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	int                                                GenerationSeed;                                            // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EKillerMoodInfluence                LevelMood;                                                 // 0x0264(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LXE3[0x3];                                     // 0x0265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGeneratedLevelData                         GeneratedData;                                             // 0x0268(0x02A0) (Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FName>                               Offerings;                                                 // 0x0508(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PerksLevel;                                                // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NDAO[0x4];                                     // 0x051C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               perks;                                                     // 0x0520(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SkipGameplayElementGeneration;                             // 0x0530(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DA86[0x7];                                     // 0x0531(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uactor*                                      _builder;                                                  // 0x0538(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _builderClassDef;                                          // 0x0540(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ProceduralLevelData");
		return ptr;
	}



};

// Class DeadByDaylight.ProcessingPopupScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UProcessingPopupScreen : public UBasePopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ProcessingPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.PromoCodeManager
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UPromoCodeManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_ISNE[0x18];                                    // 0x0038(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PromoCodeManager");
		return ptr;
	}



};

// Class DeadByDaylight.PromptManager
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UPromptManager : public UObject
{
public:
	class UAtlantaPromptWidget*                        _promptWidget;                                             // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAtlantaPromptWidget*                        _tutorialPromptWidget;                                     // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VXJA[0x28];                                    // 0x0040(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PromptManager");
		return ptr;
	}



};

// Class DeadByDaylight.ProtectionHitComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UProtectionHitComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_YBW0[0x70];                                    // 0x00B8(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ProtectionHitComponent");
		return ptr;
	}



	void Authority_HandleProtectionScoringEvents();
};

// Class DeadByDaylight.PS4ProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UPS4ProfileDAL : public UPS4GRDKBaseProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PS4ProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.PS5ProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UPS5ProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.PS5ProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.RankManager
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class URankManager : public UObject
{
public:
	unsigned char                                      UnknownData_YSCZ[0x80];                                    // 0x0030(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RankManager");
		return ptr;
	}



};

// Class DeadByDaylight.RBTOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class URBTOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RBTOutlineUpdateStrategy");
		return ptr;
	}



	bool IsRevealedToLocalPlayer_BP(class UdbdPlayer* player);
};

// Class DeadByDaylight.RecentGameEventTracker
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class URecentGameEventTracker : public UObject
{
public:
	unsigned char                                      UnknownData_EEDN[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RecentGameEventTracker");
		return ptr;
	}



};

// Class DeadByDaylight.RecommendationsGenerator
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class URecommendationsGenerator : public UObject
{
public:
	TWeakObjectPtr<class UShopManager>                 _shopManager;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class URecommendationsFilter*> _filters;                                                  // 0x0040(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HG6Y[0x30];                                    // 0x0090(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RecommendationsGenerator");
		return ptr;
	}



};

// Class DeadByDaylight.RedStainComponent
// 0x0018 (FullSize[0x03E0] - InheritedSize[0x03C8])
class URedStainComponent : public USpotLightComponent
{
public:
	struct FLinearColor                                _initialSpotLightColor;                                    // 0x03C8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NEPA[0x8];                                     // 0x03D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RedStainComponent");
		return ptr;
	}



	void UpdateRedStain(bool shouldBeHidden, float Alpha);
	void DBD_HideRedStain(bool hideStain);
};

// Class DeadByDaylight.RegionFinder
// 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
class URegionFinder : public UObject
{
public:
	TArray<struct FRegion>                             Regions;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOut;                                                   // 0x0040(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UKZB[0x64];                                    // 0x0044(0x0064) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RegionFinder");
		return ptr;
	}



};

// Class DeadByDaylight.RenderingFeaturesSequencer
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class URenderingFeaturesSequencer : public UObject
{
public:
	unsigned char                                      UnknownData_NH7L[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDAggregateCullDistanceVolumes*            _aggregateCullDistanceVolumes;                             // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uworld*                                      _world;                                                    // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XKQ8[0x10];                                    // 0x0050(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RenderingFeaturesSequencer");
		return ptr;
	}



};

// Class DeadByDaylight.ReportPlayerPopupScreen
// 0x0030 (FullSize[0x0170] - InheritedSize[0x0140])
class UReportPlayerPopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_JPLR[0x30];                                    // 0x0140(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ReportPlayerPopupScreen");
		return ptr;
	}



	void OnTextInputMouseOver(bool isMouseOver);
	void OnConfirmReportPlayer(const struct FString& category, const struct FString& comment);
};

// Class DeadByDaylight.RestrictedPlacementAreaDefaultStrategy
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class URestrictedPlacementAreaDefaultStrategy : public URestrictedPlacementAreaStrategy
{
public:
	class UClass*                                      RestrictedActor;                                           // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RestrictedPlacementAreaDefaultStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ReverseBearTrap
// 0x00B8 (FullSize[0x0390] - InheritedSize[0x02D8])
class UReverseBearTrap : public Uinteractable
{
public:
	unsigned char                                      UnknownData_P47J[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UskeletalMeshComponent*                      _rbtMesh;                                                  // 0x02E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationMontageSlave*                      _animMontageSlave;                                         // 0x02E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S8T2[0x98];                                    // 0x02F0(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _exitGatesPoweredAfterAttachment;                          // 0x0388(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _generatorFixedAfterAttachment;                            // 0x0389(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AG0U[0x6];                                     // 0x038A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ReverseBearTrap");
		return ptr;
	}



	void StopMontage();
	void StopExecutionTimer();
	bool ShouldUpdateExecutionTimer();
	void SetVisible(bool Visible);
	void SetKeyID(int keyId);
	void SetGateClosedAtAttachment(bool closed);
	void ResetExecutionTimer(float time);
	void OnWarningLevelChanged(int previousWarningLevel, int currentWarningLevel);
	void OnGeneratorComplete(int remainingGeneratorCount);
	void OnExitWarningZone();
	void OnEnterWarningZone();
	void OnDetachSurvivor(class UcamperPlayer* Survivor);
	void OnAttachSurvivorBegin(class UcamperPlayer* Survivor);
	void OnAttachSurvivor(class UcamperPlayer* Survivor);
	void NotifyOnAttachSurvivorBegin(class UcamperPlayer* Survivor);
	void NotifyDetachStarted(class UcamperPlayer* Survivor);
	bool IsRBTActivated();
	bool IsInWarningZone();
	bool IsExecutionTimerDone();
	bool IsExecutionTimerActive();
	bool HasDetachStarted();
	bool GetWasGateClosedAtAttachment();
	int GetWarningLevel();
	int GetKeyID();
	bool GetGeneratorFixedAfterAttachment();
	bool GetExitGatesPoweredAfterAttachment();
	float GetExecutionTimerTimeLeft();
	float GetExecutionTimerPercentTimeElapsed();
	class UcamperPlayer* GetAttachedSurvivor();
	void DetachSurvivor(class UcamperPlayer* Survivor);
	bool CanExecute();
	void AttachSurvivor(class UcamperPlayer* Survivor);
};

// Class DeadByDaylight.ReverseBearTrapRemover
// 0x0070 (FullSize[0x0348] - InheritedSize[0x02D8])
class UReverseBearTrapRemover : public Uinteractable
{
public:
	unsigned char                                      UnknownData_CCF4[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        _keys;                                                     // 0x02E0(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PBAC[0x50];                                    // 0x02F0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UmapActorComponent*                          _mapActor;                                                 // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ReverseBearTrapRemover");
		return ptr;
	}



	void PlayRemoveFailMontage();
	bool HasSearchedForKey(int keyId);
	bool HasKey(int keyId);
	class UmapActorComponent* GetMapActor();
	class UprimitiveComponent* GetInteractorPrimitiveComponent();
	class UReverseBearTrap* GetAttachedRBT(class Uactor* player);
	void AddSearchedKey(int keyId);
	void AddKey(int keyId);
};

// Class DeadByDaylight.ReverseBearTrapUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UReverseBearTrapUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ReverseBearTrapUtilities");
		return ptr;
	}



	class UReverseBearTrap* STATIC_GetAttachedRBT(class UdbdPlayer* player);
};

// Class DeadByDaylight.RewardTrackContainer
// 0x01D0 (FullSize[0x0200] - InheritedSize[0x0030])
class URewardTrackContainer : public UObject
{
public:
	unsigned char                                      UnknownData_5PER[0x1D0];                                   // 0x0030(0x01D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RewardTrackContainer");
		return ptr;
	}



};

// Class DeadByDaylight.RewardUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class URewardUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RewardUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.RitualAnalyticsComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class URitualAnalyticsComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_NRUZ[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RitualAnalyticsComponent");
		return ptr;
	}



};

// Class DeadByDaylight.RitualHandlerComponent
// 0x0140 (FullSize[0x01F8] - InheritedSize[0x00B8])
class URitualHandlerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_NPSO[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, class URitualEvaluatorBase*>    _evaluators;                                               // 0x00C8(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XELR[0xE0];                                    // 0x0118(0x00E0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RitualHandlerComponent");
		return ptr;
	}



	void ReceiveGameEvent(DeadByDaylight_EDBDScoreTypes ScoreType, float Amount, class Uactor* instigator, class Uactor* target);
	void OnGameEvent(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
};

// Class DeadByDaylight.RoleSelectionScreen
// 0x0030 (FullSize[0x0150] - InheritedSize[0x0120])
class URoleSelectionScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_U56G[0x30];                                    // 0x0120(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RoleSelectionScreen");
		return ptr;
	}



	void OnChangeUserButtonClick();
	void OnButtonSelected(int buttonid);
};

// Class DeadByDaylight.RootMovie
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class URootMovie : public UObject
{
public:
	struct FString                                     SwfAssetName;                                              // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxMoviePlayer*                             SwfMoviePlayer;                                            // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4PJ8[0x10];                                    // 0x0048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UScreenController*                           m_ScreenController;                                        // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUIController*                               m_UIController;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UgameInstance*                               m_GameInstance;                                            // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDInputManager*                            _inputManager;                                             // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BIGU[0x20];                                    // 0x0078(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.RootMovie");
		return ptr;
	}



	void SetCursorAsSticky(bool isSticky, bool lockVertical, bool lockHorizontal, int moveByX, int moveByY, float stickinessOverride);
	void RegisterView(const struct FString& screenId, class UGFxObject* screenObject);
	void RegisterUIControl(class UGFxObject* flashObj);
	void RegisterScreenControl(class UGFxObject* flashObj);
	void PlaySound(const struct FString& soundId);
	void OpenLinkInBrowser(const struct FString& linkAddress);
	void OnScreenReady(const struct FString& screenId);
	void OnScreenLeave(const struct FString& screenId);
	void OnScreenEnter(const struct FString& screenId);
	void OnMovieClosed();
	void OnFlashReady();
	void OnAssert(int type, const struct FString& message);
};

// Class DeadByDaylight.S3GameConfigs
// 0x0108 (FullSize[0x0140] - InheritedSize[0x0038])
class US3GameConfigs : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_SPR9[0x108];                                   // 0x0038(0x0108) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.S3GameConfigs");
		return ptr;
	}



};

// Class DeadByDaylight.SafeZoneManagerWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class USafeZoneManagerWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                SafeZonePanel;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SafeZoneManagerWidget");
		return ptr;
	}



};

// Class DeadByDaylight.ScreamComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UScreamComponent : public UactorComponent
{
public:
	class UCustomizedAudioComponent*                   _customizedAudio;                                          // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _audioComponent;                                           // 0x00C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPerkManager*                                _perkManager;                                              // 0x00C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x00D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ScreamComponent");
		return ptr;
	}



	bool PlayScreamSoundAndAnimation(class UAkAudioEvent* AudioEvent, bool fireLoudNoiseEvent, const struct FmontagePlaybackDefinition& montageDefinition, float audibleRange);
	bool PlayScreamSound(class UAkAudioEvent* AudioEvent, bool fireLoudNoiseEvent, float audibleRange);
	bool CanScream();
};

// Class DeadByDaylight.ScreenController
// 0x0260 (FullSize[0x0290] - InheritedSize[0x0030])
class UScreenController : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxObject*                                  _screenControllerObj;                                      // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMoviePlayer*                             _moviePlayer;                                              // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UScreenBase*>           _screenDictionary;                                         // 0x0048(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<struct FString, DeadByDaylight_EScreenType>   _screenTypeDictionary;                                     // 0x0098(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<class UClass*, TWeakObjectPtr<class UUserWidget>> _cachedUMGScreens;                                         // 0x00E8(0x0050) (ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YISN[0x158];                                   // 0x0138(0x0158) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ScreenController");
		return ptr;
	}



};

// Class DeadByDaylight.ScreenSpaceLocationComponent
// 0x0030 (FullSize[0x0240] - InheritedSize[0x0210])
class UScreenSpaceLocationComponent : public USceneComponent
{
public:
	float                                              ScreenSpaceX;                                              // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScreenSpaceY;                                              // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FrameDelay;                                                // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _currentResolution;                                        // 0x021C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OWVZ[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTransform>                          _previousTransforms;                                       // 0x0228(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D157[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ScreenSpaceLocationComponent");
		return ptr;
	}



	bool HasValidPosition();
	struct FVector2D GetCurrentResolution();
};

// Class DeadByDaylight.Searchable
// 0x00B8 (FullSize[0x0390] - InheritedSize[0x02D8])
class USearchable : public Uinteractable
{
public:
	unsigned char                                      UnknownData_GU56[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Weight;                                                    // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EItemRarity                         ItemRarity;                                                // 0x02E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G0PL[0x3];                                     // 0x02E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSearchedChanged;                                         // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USearchableSpawnPoint*                       _searchableSpawnPoint;                                     // 0x02F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _itemIdToSpawn;                                            // 0x0300(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasBeenSearched;                                          // 0x030C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YLY4[0x3];                                     // 0x030D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Ucollectable*                                _itemInsideSearchable;                                     // 0x0310(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UdbdPlayer*, unsigned char>             _numberOfSearchesWhileOpenPerPlayer;                       // 0x0318(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AB9K[0x28];                                    // 0x0368(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Searchable");
		return ptr;
	}



	void SetHasBeenSearched(bool newHasBeenSearched);
	void OnSearchedChanged__DelegateSignature(bool searched);
	bool HasBeenSearched();
	class UprimitiveComponent* GetInteractorPrimitiveComponent();
	bool ContainsSpawnedItem();
	class Ucollectable* Authority_SpawnObject(class UdbdPlayer* player);
};

// Class DeadByDaylight.SearchableOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class USearchableOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SearchableOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.tileSpawnPoint
// 0x0070 (FullSize[0x0280] - InheritedSize[0x0210])
class UtileSpawnPoint : public USceneComponent
{
public:
	unsigned char                                      UnknownData_RFKK[0x10];                                    // 0x0210(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_ETileSpawnPointType                 TileSpawnPointType;                                        // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JTFP[0x3];                                     // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Weight;                                                    // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Visualization[0x30];                                       // 0x0228(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_XQR0[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uactor*                                      _spawnedObject;                                            // 0x0260(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              ObjectSpawnModifier;                                       // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _spawnPriorityTier;                                        // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _weightInfluenceable;                                      // 0x027C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _weightInfluencer;                                         // 0x027D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _activated;                                                // 0x027E(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZTIU[0x1];                                     // 0x027F(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.tileSpawnPoint");
		return ptr;
	}



	void SetActivated(bool Activated);
	void OnRep_SpawnObject();
	bool isActivated();
	class Uactor* GetSpawnedObject();
};

// Class DeadByDaylight.SearchableSpawnPoint
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class USearchableSpawnPoint : public UtileSpawnPoint
{
public:
	class UClass*                                      ActorToSpawn;                                              // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UYNM[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SearchableSpawnPoint");
		return ptr;
	}



};

// Class DeadByDaylight.SeasonEndPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class USeasonEndPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SeasonEndPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.SeasonEndRankRewardsPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class USeasonEndRankRewardsPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SeasonEndRankRewardsPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.SeasonManager
// 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
class USeasonManager : public Uactor
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WLRE[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SeasonManager");
		return ptr;
	}



	int GetOldSlasherPips();
	int GetOldCamperPips();
};

// Class DeadByDaylight.SectionnedChargeableComponent
// 0x0008 (FullSize[0x0298] - InheritedSize[0x0290])
class USectionnedChargeableComponent : public UchargeableComponent
{
public:
	unsigned char                                      _sections;                                                 // 0x0290(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JUPA[0x7];                                     // 0x0291(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SectionnedChargeableComponent");
		return ptr;
	}



	float GetSectionChargeRemaining();
};

// Class DeadByDaylight.SelectiveVisibilityComponent
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class USelectiveVisibilityComponent : public USceneComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SelectiveVisibilityComponent");
		return ptr;
	}



	void Local_SetVisibility(bool bNewVisibility, bool bPropagateToChildren);
};

// Class DeadByDaylight.ShopCameraManager
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class UShopCameraManager : public UInfo
{
public:
	TArray<struct FCharacterCameraTag>                 CatalogCharactersCamera;                                   // 0x0230(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FCharacterCameraTag>                 StoryCharactersCamera;                                     // 0x0240(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ShopCameraManager");
		return ptr;
	}



};

// Class DeadByDaylight.ShopManager
// 0x05C8 (FullSize[0x05F8] - InheritedSize[0x0030])
class UShopManager : public UObject
{
public:
	unsigned char                                      UnknownData_KVXX[0x98];                                    // 0x0030(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UAYI[0x410];                                   // 0x00D0(0x0410) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBannerDataProcessor*                        _bannerDataProcessor;                                      // 0x04E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URecommendationsGenerator*                   _recommendationsGenerator;                                 // 0x04E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_47JQ[0x108];                                   // 0x04F0(0x0108) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ShopManager");
		return ptr;
	}



};

// Class DeadByDaylight.SkillCheck
// 0x0120 (FullSize[0x0330] - InheritedSize[0x0210])
class USkillCheck : public USceneComponent
{
public:
	unsigned char                                      UnknownData_IBUZ[0x58];                                    // 0x0210(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _owner;                                                    // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableInteractionDefinition*            _currentInteraction;                                       // 0x0270(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_17G5[0xB8];                                    // 0x0278(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SkillCheck");
		return ptr;
	}



	bool ShouldShowWarning();
	void Server_OnSkillCheckSuccess(const struct FskillCheckResponse& skillCheckResponse);
	void Server_OnSkillCheckFailure(const struct FskillCheckResponse& skillCheckResponse);
	void Server_DeactivateSkillCheck();
	void Server_ActivateSkillCheck(class UChargeableInteractionDefinition* interaction, DBDSharedTypes_ESkillCheckCustomType type, const struct FSkillCheckDefinition& Definition);
	void OnSkillCheckInput();
	void Multicast_SkillCheckResponse(const struct FskillCheckResponse& skillCheckResponse);
	void Multicast_DeactivateSkillCheck();
	void Multicast_ActivateSkillCheck(class UChargeableInteractionDefinition* interaction, DBDSharedTypes_ESkillCheckCustomType type, const struct FSkillCheckDefinition& Definition);
	void Local_OnSkillCheckSuccessTrigger(bool bonus, bool insane, DBDSharedTypes_ESkillCheckCustomType type);
	void Local_OnSkillCheckFailureTrigger(bool HadInput, bool insane, DBDSharedTypes_ESkillCheckCustomType type);
	void Local_ActivateSkillCheck(class UinteractionDefinition* interaction, float warningSoundDelay);
	void Local_ActivateCustomSkillCheck(DBDSharedTypes_ESkillCheckCustomType type, float warningSoundDelay);
	bool IsDisplayed();
	float GetStartDelayInSeconds();
	bool STATIC_CanSkillCheckTypeGrantScore(DBDSharedTypes_ESkillCheckCustomType type);
};

// Class DeadByDaylight.SlasherAnimInstance
// 0x0170 (FullSize[0x03E0] - InheritedSize[0x0270])
class USlasherAnimInstance : public UanimInstance
{
public:
	struct FScriptMulticastDelegate                    OnFootTrapped;                                             // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               _isCrouched;                                               // 0x0280(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isRevvingChainsaw;                                        // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAttackSuccessMontagePlaying;                            // 0x0282(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isCamOn;                                                  // 0x0283(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAttacking;                                              // 0x0284(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAnyMontagePlaying;                                      // 0x0285(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isFrenzy;                                                 // 0x0286(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isFrenzyCD;                                               // 0x0287(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isInParadise;                                             // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _enableArmOverrideTier3;                                   // 0x0289(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isRingingBell;                                            // 0x028A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isCarrying;                                               // 0x028B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _firstPersonCarryOffset;                                   // 0x028C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _firstPersonCarryOffsetLookingDown;                        // 0x0298(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isPassivePhaseWalking;                                    // 0x02A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isActivePhaseWalking;                                     // 0x02A5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isInAir;                                                  // 0x02A6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isVaultingToFall;                                         // 0x02A7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isSpectator;                                              // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _firstPersonView;                                          // 0x02A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isIdle;                                                   // 0x02AA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _validSlasher;                                             // 0x02AB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animDirection;                                            // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animSpeed;                                                // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animPitch;                                                // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animTurning;                                              // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animYaw;                                                  // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _pelvisHeight;                                             // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _idleTime;                                                 // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _directionSwitch;                                          // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _leftClearFrontSpaceVector;                                // 0x02CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _rightClearFrontSpaceVector;                               // 0x02D8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _velocity;                                                 // 0x02E4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _rightFootEffectorLocation;                                // 0x02F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fvector                                     _leftFootEffectorLocation;                                 // 0x02FC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    _meshRotation;                                             // 0x0308(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9MQ9[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        _attackSuccessAnimations;                                  // 0x0318(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                        _camOnAnimations;                                          // 0x0328(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UslasherPlayer*                              _mySlasher;                                                // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTagStateBool                               _isVaultingToFallState;                                    // 0x0340(0x0030) (Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EInteractionAnimation               _interactionType;                                          // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E3XE[0x7];                                     // 0x0371(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPortalPlacerStateComponent*                 _demogorgonPortalPlacerState;                              // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _demogorgonTeleportDuration;                               // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5U9D[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChargedAttackStateComponent*                _demogorgonChargedAttackStateComponent;                    // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isDemogorgonCharging;                                     // 0x0390(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O6EV[0x3];                                     // 0x0391(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _demogorgonChargingPercent;                                // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOniDemonModeAttackStateComponent*           _oniAttackState;                                           // 0x0398(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isOniCharging;                                            // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EOniAttackType                      _oniAttackType;                                            // 0x03A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OTJN[0x2];                                     // 0x03A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _oniChargeDuration;                                        // 0x03A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EAttackSubstate                     _previousAttackSubstate;                                   // 0x03A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EAttackSubstate                     _attackSubstate;                                           // 0x03A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5CQ1[0x6];                                     // 0x03AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEvilWithinComponent*                        _evilWithinComponent;                                      // 0x03B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFrenzyComponent*                            _frenzyComponent;                                          // 0x03B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhaseWalkingComponent*                      _phaseWalkingComponent;                                    // 0x03C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmIKSensorComponent*                       _armIKSensorComponent;                                     // 0x03C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IMIR[0x10];                                    // 0x03D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SlasherAnimInstance");
		return ptr;
	}



	void SetIsCrouched(bool Value);
	void CallOnFootTrapped();
};

// Class DeadByDaylight.SlasherAttackPickerComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class USlasherAttackPickerComponent : public UactorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SlasherAttackPickerComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class USlasherHitsWhileCarryingTrackerComponent : public UactorComponent
{
public:
	unsigned char                                      _campersHitDuringLastCarry[0x50];                          // 0x00B8(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_RJLO[0x18];                                    // 0x0108(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent");
		return ptr;
	}



	void OnPostAttack(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnPickup(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
	void OnAttack(const struct FgameplayTag& GameEventType, const struct FgameEventData& gameEventData);
};

// Class DeadByDaylight.SlasherMovementComponent
// 0x0020 (FullSize[0x08E0] - InheritedSize[0x08C0])
class USlasherMovementComponent : public UDBDCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_NP3G[0x20];                                    // 0x08C0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SlasherMovementComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SlasherOutlineUpdateStrategy
// 0x0048 (FullSize[0x0108] - InheritedSize[0x00C0])
class USlasherOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FScriptMulticastDelegate                    OnRevealed;                                                // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FLinearColor                                _nonRevealedColor;                                         // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _revealedColor;                                            // 0x00E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _revealedColorForKiller;                                   // 0x00F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7C6U[0x8];                                     // 0x0100(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SlasherOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.slasherPlayer
// 0x0458 (FullSize[0x1450] - InheritedSize[0x0FF8])
class UslasherPlayer : public UdbdPlayer
{
public:
	unsigned char                                      UnknownData_YU1N[0x8];                                     // 0x0FF8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_NDGK[0x8];                                     // 0x1000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnOffensiveAction;                                         // 0x1008(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct Fvector                                     PutDownTraceLocation;                                      // 0x1018(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DefaultSlasherPower;                                       // 0x1024(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoudNoiseDisplayTime;                                      // 0x1030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct Fvector                                     TargetPriorityFactor;                                      // 0x1034(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldDisplayAttackZones;                                  // 0x1040(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YHUI[0x7];                                     // 0x1041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CamperExposer;                                             // 0x1048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EKillerMoodInfluence                KillerMoodInfluence;                                       // 0x1050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8EVU[0x7];                                     // 0x1051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<DBDSharedTypes_EKillerAbilities>            KillerAbilities;                                           // 0x1058(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKillerSoundCuesComponent*                   KillerSoundCuesComponent;                                  // 0x1068(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowKillerPowerDebugInfo;                                  // 0x1070(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasDamagedGeneratorSinceHook;                              // 0x1071(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TKJ3[0x6];                                     // 0x1072(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStalkModeChangedEvent;                                   // 0x1078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EH5W[0x18];                                    // 0x1088(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UAkComponent>                 _audioComponent;                                           // 0x10A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDNavModifierComponent*                    _terrorNavModifierComponent;                               // 0x10A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _slasherLightIntensity;                                    // 0x10B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8BFE[0xC];                                     // 0x10B4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UdbdPlayer*, struct FTargetFocusTimer>  _stalkTimers;                                              // 0x10C0(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	class UStillnessTrackerComponent*                  _stillnessTracker;                                         // 0x1110(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAimAssistComponent*                         _aimAssistComponent;                                       // 0x1118(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDBDTimer                                   _recentlyCloakedTimer;                                     // 0x1120(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FDBDTimer                                   _flashlightBlindEvasionScoreTimer;                         // 0x1148(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FDBDTimer                                   _flashlightBurnoutEvasionScoreTimer;                       // 0x1170(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class UdbdPlayer*, struct FAnimationMontageDescriptor> _predictedCamperHitMontages;                               // 0x1198(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UZHL[0x8];                                     // 0x11E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USlasherTREmitterComponent*                  _terrorRadiusEmitter;                                      // 0x11F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7HOL[0x8];                                     // 0x11F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULoudNoiseHUDIndicator*                      _loudNoiseIndicator;                                       // 0x1200(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlasherHitsWhileCarryingTrackerComponent*   _hitsWhileCarryingTracker;                                 // 0x1208(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stealthIncreaseRate;                                      // 0x1210(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stealthDecreaseRate;                                      // 0x1214(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                                   _stillnessStartTime;                                       // 0x1218(0x0008) (ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WY91[0x68];                                    // 0x1220(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTagStateBool                               _isInStalkMode;                                            // 0x1288(0x0030) (Net, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5FDA[0xC0];                                    // 0x12B8(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isKilling;                                                // 0x1378(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8_t                                             _allowedKillCount;                                         // 0x1379(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8_t                                             _allowedKillAfterStrugglePhase;                            // 0x137A(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _allowedKillLastSurvivor;                                  // 0x137B(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1ATM[0x8];                                     // 0x137C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _cachedBloodlustTier;                                      // 0x1384(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y05D[0x8];                                     // 0x1388(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _killerPowerDebugFlags;                                    // 0x1390(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FgameplayTag                                _presenceTag;                                              // 0x1394(0x000C) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _persistantStateTags;                                      // 0x13A0(0x0020) (Edit, NativeAccessSpecifierPrivate)
	bool                                               _enableKillerCrouchInput;                                  // 0x13C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canStartAttackWhileCrouched;                              // 0x13C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G9BZ[0x6];                                     // 0x13C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UcamperPlayer*                               _carriedCamper;                                            // 0x13C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMoriComponent*                              _moriComponent;                                            // 0x13D0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitValidatorComponent*                      _hitValidatorComponent;                                    // 0x13D8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitValidatorConfigurator*                   _hitValidationConfigurator;                                // 0x13E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAttackerComponent*                       _attackerComponent;                                        // 0x13E8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HKWM[0x10];                                    // 0x13F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EAttackType                         _basicAttackType;                                          // 0x1400(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8BZ8[0x7];                                     // 0x1401(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UArmIKSensorComponent*                       _armIKSensorComponent;                                     // 0x1408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UcamperPlayer*                               _survivorBeingKilled;                                      // 0x1410(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9JK0[0x18];                                    // 0x1418(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFirstPersonViewComponent*                   _firstPersonViewComponent;                                 // 0x1430(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKillerIntroComponent*                       _killerIntroComponent;                                     // 0x1438(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKillerBlindingFXComponent*                  _blindingFXComponent;                                      // 0x1440(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E447[0x8];                                     // 0x1448(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.slasherPlayer");
		return ptr;
	}



	bool WasRecentlyCloaked();
	void UpdateRageTierEffect(int previousTier, int currentTier);
	void UpdateAttackZonePivot();
	void TriggerPutDownAnimation();
	void TriggerPickUpAnimation();
	void SpawnSlasherPower();
	bool ShouldApplyBloodlustSpeedModifier();
	void SetSurvivorBeingKilled(class UcamperPlayer* Survivor);
	void SetStalkTierWalkSpeedMultiplier(float stalkTierWalkSpeedMultiplier);
	void SetLightIntensity(float intensity);
	void SetIsKilling(bool isKilling);
	void SetIsHookingSurvivor(bool Value);
	void SetGuidedAction(DeadByDaylight_ESlasherGuidedAction Action);
	void SetChainsawSprinting(bool ChainsawSprinting);
	void SetCarriedCamper(class UcamperPlayer* Camper);
	void SetBeingWiggled(bool Value);
	void SetAttackDetectionZoneSet(DeadByDaylight_EAttackZoneSet attackZoneSet);
	void Server_SetKillerPowerDebugFlag(uint32_t flag, bool Value);
	void Server_SendAttackInput(bool pressed);
	void Server_MergeLockOnDamageZones(bool Enable);
	void Server_DisplayAttackZones(bool display);
	void Server_AllowKilling(int8_t numKills);
	void PlayBloodHitsEffects();
	void OnSurvivorsLeftChanged(int survivorRemaining);
	void OnSurvivorKilled(class UcamperPlayer* playerToKill, bool consumeKill);
	void OnSuccessfulInterruption(class UcamperPlayer* interruptedSurvivor);
	void OnStealthChanged(bool Stealth);
	void OnStalkModeChangedEvent__DelegateSignature(bool isInStalkMode);
	void OnStalkModeChangedCosmetic(bool StalkMode);
	void OnStalkModeChanged(bool StalkMode);
	void OnPickupStart_BP();
	void OnPickUpEnd_BP();
	void OnPerformingChargableInteraction(float progress);
	void OnLoudNoiseTriggered(class Uactor* originator, class Uactor* instigatingActor, const struct Fvector& location, bool shouldTrack, float* audibleRange, bool isQuickAction);
	void OnLoudNoiseIndicatorDestroyed();
	void OnKillerAbilityUpdateActivate(DBDSharedTypes_EKillerAbilities KillerAbility, float Percent);
	void OnKillerAbilityEndDeactivate(DBDSharedTypes_EKillerAbilities KillerAbility, bool forced);
	void OnKillerAbilityEndActivate(DBDSharedTypes_EKillerAbilities KillerAbility);
	void OnKillerAbilityBeginDeactivate(DBDSharedTypes_EKillerAbilities KillerAbility, bool forced);
	void OnKillerAbilityBeginActivate(DBDSharedTypes_EKillerAbilities KillerAbility);
	void OnDropCamperEnd_BP();
	void OnCamperHitFX(class UcamperPlayer* Camper, bool showBloodSpatter);
	void OnAttackStart(DBDSharedTypes_EAttackType AttackType);
	void OnAttackFinish(DBDSharedTypes_EAttackType AttackType);
	void Multicast_SetGuidedAction(DeadByDaylight_ESlasherGuidedAction Action);
	void Multicast_SetAttackDetectionZoneSet(DeadByDaylight_EAttackZoneSet attackZoneSet);
	void Multicast_MergeLockOnDamageZones(bool Enable);
	void Multicast_DisplayAttackZones(bool display);
	void MergeLockOnDamageZones(bool Enable);
	bool Local_CancelAttack();
	bool IsWalkLocked();
	bool IsUncloaking();
	bool IsOfferingAllowingKill(class UcamperPlayer* Camper);
	bool isKilling();
	bool IsInterruptBlocked();
	bool IsInBlinkCooldown();
	bool IsImmuneToObservingPlayerDetection(class UdbdPlayer* observingPlayer);
	bool IsHooking();
	bool IsCrouchAvailable_BP();
	bool IsCloaking();
	bool IsChargingBlink();
	bool IsChainsawSprinting();
	bool IsChainBlinking();
	bool isCarrying();
	bool IsASurvivorInTerrorRadius();
	bool IsAllowedToKill(class UcamperPlayer* Camper);
	void IncrementInterruptBlock();
	bool HasKillerAbility(DBDSharedTypes_EKillerAbilities KillerAbility);
	class USlasherTREmitterComponent* GetTerrorRadiusEmitter();
	class UcamperPlayer* GetSurvivorBeingKilled();
	struct FDateTime GetStillnessStartTime();
	float GetStealthRatio();
	float GetStalkTierWalkSpeedMultiplier();
	int GetRageTier();
	struct FgameplayTag GetPresenceTag();
	struct Fvector GetPlayerDropOffPoint();
	class UcamperPlayer* GetObsessionTarget();
	struct FRotator GetLookRotation();
	float GetLightIntensity();
	bool GetIsAttacking();
	DeadByDaylight_ESlasherGuidedAction GetGuidedAction();
	class UChaserCharacterComponent* GetChaserCharacterComponent();
	TArray<struct FName> GetCharacterCustomAnimTags();
	class UcamperPlayer* GetCarriedCamper();
	float GetBlindedPercent();
	float GetAnimDirection();
	void DisplayAttackZones(bool display);
	void DecrementInterruptBlock();
	void DBD_WalkLocked(bool lock);
	void DBD_SetAttackZones(DeadByDaylight_EAttackZoneSet attackZoneSet);
	void DBD_MergeLockOnDamageZones(bool Enable);
	void DBD_DisplayAttackZones(bool display);
	void DBD_AllowKilling();
	void Client_RequestStun(DBDSharedTypes_EStunType stunType, class UdbdPlayer* stunner);
	bool CanSlashAttack_BP();
	bool CanPickupSurvivor();
	bool CanPerformKillerAbility(DBDSharedTypes_EKillerAbilities KillerAbility);
	bool CanGainRage();
	bool CanEscapeCarry(class UcamperPlayer* player);
	bool CancelAttackByInput();
	bool CanAttack_BP(DBDSharedTypes_EAttackType AttackType);
	bool CanAttack(DBDSharedTypes_EAttackType AttackType);
	bool CanAffectLocalPlayer();
	void BroadcastOnInstantTeleport();
	void BroadcastOffensiveAction();
	void Authority_SetInStalkMode(bool StalkMode, bool forced);
	void Authority_AttemptEscapeCarry(class UcamperPlayer* player);
	void Authority_AllowKilling(int numKills);
	void AttackInputReleased();
	void AttackInputPressed();
	void ActionKillerReleased();
	void ActionKillerPressed();
};

// Class DeadByDaylight.SlasherStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class USlasherStateMachine : public UPlayerStateMachine
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SlasherStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.TerrorRadiusEmitterComponent
// 0x0028 (FullSize[0x0238] - InheritedSize[0x0210])
class UTerrorRadiusEmitterComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_BCVM[0x18];                                    // 0x0210(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _simulatedFixedDistance;                                   // 0x0228(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _imitatesAudioOnly;                                        // 0x022C(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _generatesChaseMusic;                                      // 0x022D(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _active;                                                   // 0x022E(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isFakeTerrorRadius;                                       // 0x022F(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _radius;                                                   // 0x0230(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O4LZ[0x4];                                     // 0x0234(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TerrorRadiusEmitterComponent");
		return ptr;
	}



	void SetTerrorRadius(float radius);
	void SetSimulatedFixedDistance(float distance);
	void SetIsActive(bool active);
	void SetImitatesAudioOnly(bool imitatesAudioOnly);
	void SetGeneratesChaseMusic(bool generatesChaseMusic);
	void RemoveEmitterFromList();
	bool IsInTerrorRadius(class UTerrorRadiusReceiverComponent* receiver);
	float GetSimulatedFixedDistance();
	float GetRadius();
	bool GetIsActive();
	bool GetImitatesAudioOnly();
	bool GetGeneratesChaseMusic();
};

// Class DeadByDaylight.SlasherTREmitterComponent
// 0x0068 (FullSize[0x02A0] - InheritedSize[0x0238])
class USlasherTREmitterComponent : public UTerrorRadiusEmitterComponent
{
public:
	TMap<class UTerrorRadiusReceiverComponent*, struct FReceiverTerrorRadiusOverride> _receiverRadiusOverrides;                                  // 0x0238(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W5D5[0x18];                                    // 0x0288(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SlasherTREmitterComponent");
		return ptr;
	}



	void SetBaseTerrorRadius(float baseTerrorRadius, bool progressive);
};

// Class DeadByDaylight.SoftBanManager
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class USoftBanManager : public UObject
{
public:
	unsigned char                                      UnknownData_FMUA[0x40];                                    // 0x0030(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SoftBanManager");
		return ptr;
	}



};

// Class DeadByDaylight.SoundIndicatorUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USoundIndicatorUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SoundIndicatorUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.SoundMarker
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class USoundMarker : public Uactor
{
public:
	DBDSharedTypes_EHudIndicatorIconType               HudIndicatorIconType;                                      // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EHudOffscreenIndicatorType          HudOffscreenIndicatorType;                                 // 0x0231(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AFLN[0x2];                                     // 0x0232(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFloatRange                                 VisibleDistanceRange;                                      // 0x0234(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HXJG[0x4];                                     // 0x0244(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SoundMarker");
		return ptr;
	}



};

// Class DeadByDaylight.SpawnElement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USpawnElement : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpawnElement");
		return ptr;
	}



};

// Class DeadByDaylight.SpecialEventLoadingScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class USpecialEventLoadingScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_HE87[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpecialEventLoadingScreen");
		return ptr;
	}



	void OnLoadingTextTimerComplete();
};

// Class DeadByDaylight.SpecialEventManager
// 0x02A8 (FullSize[0x02D8] - InheritedSize[0x0030])
class USpecialEventManager : public UObject
{
public:
	unsigned char                                      UnknownData_TVSC[0x80];                                    // 0x0030(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USpecialEventsContainer*                     _specialEventsContainer;                                   // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RFCV[0x220];                                   // 0x00B8(0x0220) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpecialEventManager");
		return ptr;
	}



	DeadByDaylight_ESpecialEventStatus STATIC_GetStatus(const struct FCombinedSpecialEventData& specialEventData);
	bool STATIC_GetSpecialEvent(class UObject* worldContextObject, const struct FName& eventId, struct FCombinedSpecialEventData* outSpecialEventData);
	bool STATIC_GetCurrentSpecialEvent(class UObject* worldContextObject, struct FCombinedSpecialEventData* outSpecialEventData);
};

// Class DeadByDaylight.SpecialEventsContainer
// 0x00F8 (FullSize[0x0128] - InheritedSize[0x0030])
class USpecialEventsContainer : public UObject
{
public:
	unsigned char                                      UnknownData_4JUZ[0xF8];                                    // 0x0030(0x00F8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpecialEventsContainer");
		return ptr;
	}



};

// Class DeadByDaylight.SpecialEventSpawnerComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class USpecialEventSpawnerComponent : public UactorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpecialEventSpawnerComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SplashScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class USplashScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_QQ6O[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SplashScreen");
		return ptr;
	}



	void UpdateLoadingProgression(const struct FString& loadingProgression);
	void UpdateDownloadProgression(const struct FdownloadProgression& downloadProgression);
	void ShowSaveGamePopup();
	void ShowPressKeyState();
	void ShowLoadingState();
	void ShowDownloadProgression();
	void ShowCharacterSlideShow(TArray<struct FCharacterSlideData>* characterSlides);
	void SetVersionText(const struct FString& versionText);
	void OnSaveGamePopupComplete();
	void HidePressKeyState();
	void HideDownloadProgression();
	void HideCharacterSlideShow();
};

// Class DeadByDaylight.SplashScreenScaleform
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class USplashScreenScaleform : public USplashScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SplashScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.SplashScreenUMG
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class USplashScreenUMG : public USplashScreen
{
public:
	class UUMGSplashScreen*                            _splashScreen;                                             // 0x0138(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SplashScreenUMG");
		return ptr;
	}



	void TriggerAnyKey();
};

// Class DeadByDaylight.SpringArmCameraTargetingStrategy
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class USpringArmCameraTargetingStrategy : public UBaseCameraTargetingStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SpringArmCameraTargetingStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.StadiaProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UStadiaProfileDAL : public UPS4GRDKBaseProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StadiaProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.StadiaVirtualKeyboardManager
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class UStadiaVirtualKeyboardManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_ZO6D[0x38];                                    // 0x0038(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StadiaVirtualKeyboardManager");
		return ptr;
	}



};

// Class DeadByDaylight.StakeOutPerk
// 0x0018 (FullSize[0x0360] - InheritedSize[0x0348])
class UStakeOutPerk : public Uperk
{
public:
	TArray<int>                                        MaxTokensByLevel;                                          // 0x0348(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TokenChargeTime;                                           // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_689Y[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StakeOutPerk");
		return ptr;
	}



	void Server_ConsumeToken();
	void Local_BroadcastConsumeToken();
};

// Class DeadByDaylight.StalkedComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UStalkedComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBeingStalkedChanged;                                     // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              _maxStalkPoints;                                           // 0x00C8(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stalkableWhileSightingStalker;                            // 0x00CC(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBeingStalked;                                           // 0x00CD(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B3RR[0x2];                                     // 0x00CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UchargeableComponent*                        _stalkPointsChargeable;                                    // 0x00D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R9US[0x58];                                    // 0x00D8(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StalkedComponent");
		return ptr;
	}



	void OnRep_MaxStalkPoints();
	void OnRep_IsBeingStalked();
	void OnBeingStalkedChanged__DelegateSignature(bool isBeingStalked);
	bool HasStalkPoints();
};

// Class DeadByDaylight.StalkerComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UStalkerComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_I36V[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _distributeStalkRate;                                      // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canStalkWhileInChase;                                     // 0x00E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TWZ1[0x6];                                     // 0x00E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UStalkedComponent*>                   _playerStalkedComponents;                                  // 0x00E8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VW71[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UchargeableComponent*                        _stalkPointsChargeable;                                    // 0x0108(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_04R3[0x20];                                    // 0x0110(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StalkerComponent");
		return ptr;
	}



	void OnStalkPointsAdded__DelegateSignature(float StalkPoints);
	void OnPlayerBeingStalkedChanged(bool isBeingStalked);
	bool IsStalkingSomeone();
	bool HasMaxStalkPoints();
	float GetTotalStalkingPoints();
	float GetScoreMultiplier();
	float GetPercentStalkingPoints();
	float GetMaxStalkingPoints();
	bool CanStalk();
};

// Class DeadByDaylight.StandDisplayable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStandDisplayable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StandDisplayable");
		return ptr;
	}



};

// Class DeadByDaylight.StartLitActivationTimerRemainingCooldownElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStartLitActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StartLitActivationTimerRemainingCooldownElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.StartScreenBase
// 0x0018 (FullSize[0x0250] - InheritedSize[0x0238])
class UStartScreenBase : public ULevelScriptActor
{
public:
	unsigned char                                      UnknownData_I4AU[0x18];                                    // 0x0238(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StartScreenBase");
		return ptr;
	}



	void TravelToMenu();
	void BeginDestroyTravelSequence();
};

// Class DeadByDaylight.StartupInitializerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStartupInitializerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StartupInitializerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.StateTagUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStateTagUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StateTagUtilities");
		return ptr;
	}



	void STATIC_RemoveStateTagToPlayer(class UdbdPlayer* player, const struct FgameplayTag& tag);
	bool STATIC_HasStateTag(class UdbdPlayer* player, const struct FgameplayTag& tag);
	bool STATIC_CurrentInteractionHasStateTag(class UdbdPlayer* player, const struct FgameplayTag& tag);
	bool STATIC_CurrentInteractionHasAnyStateTag(class UdbdPlayer* player, const struct FGameplayTagContainer& tags);
	void STATIC_AddStateTagToPlayer(class UdbdPlayer* player, const struct FgameplayTag& tag);
};

// Class DeadByDaylight.StationaryPointLightComponent
// 0x0004 (FullSize[0x03C0] - InheritedSize[0x03BC])
class UStationaryPointLightComponent : public UPointLightComponent
{
public:
	unsigned char                                      UnknownData_FO52[0x4];                                     // 0x03BC(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StationaryPointLightComponent");
		return ptr;
	}



};

// Class DeadByDaylight.StationarySpotLightComponent
// 0x0008 (FullSize[0x03D0] - InheritedSize[0x03C8])
class UStationarySpotLightComponent : public USpotLightComponent
{
public:
	unsigned char                                      UnknownData_BEZE[0x8];                                     // 0x03C8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StationarySpotLightComponent");
		return ptr;
	}



};

// Class DeadByDaylight.StatusEffectCollectionComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UStatusEffectCollectionComponent : public UactorComponent
{
public:
	TArray<class UstatusEffect*>                       _array;                                                    // 0x00B8(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YU3A[0x18];                                    // 0x00C8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StatusEffectCollectionComponent");
		return ptr;
	}



	void OnRep_Array(TArray<class UstatusEffect*> oldArray);
};

// Class DeadByDaylight.StatusView
// 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
class UStatusView : public Uactor
{
public:
	bool                                               isActive;                                                  // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WNHQ[0x3];                                     // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                level;                                                     // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentageFill;                                            // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsClockwiseTimer;                                          // 0x023C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5OF6[0x5B];                                    // 0x023D(0x005B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UdbdPlayer*                                  _localDBDPlayer;                                           // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StatusView");
		return ptr;
	}



	void ResetView(class UdbdPlayer* dbdPlayer);
	void FireNotification(const struct FstatusViewSource& statusViewSource);
};

// Class DeadByDaylight.SteamProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class USteamProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SteamProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.StoreScreen
// 0x0218 (FullSize[0x0338] - InheritedSize[0x0120])
class UStoreScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_RKUK[0x218];                                   // 0x0120(0x0218) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StoreScreen");
		return ptr;
	}



	void OnUnlockWithCurrency(int currencyId, const struct FString& combinedItem);
	void OnUnlockDlc(const struct FString& dlcId);
	void OnTabSelected(int index);
	void OnStorySelected();
	void OnStoreItemSelected(const struct FString& itemId);
	void OnStoreItemLinkSelected(const struct FString& itemId);
	void OnStoreCharacterSelected(int characterIndex);
	void OnStoreCatalogCategorySelected(int categoryIndex);
	void OnSearchInputChanged(const struct FString& searchInput);
	void OnRotateCharacter(float mouseDistanceChange);
	void OnPromoCodeButtonClicked();
	void OnNotEnoughTokens();
	void OnMarketSlotButtonClick(int slotIndex);
	void OnFiltersUpdated(bool all, bool rarityCommon, bool rarityUncommon, bool rarityRare, bool rarityVeryRare, bool rarityUltraRare, bool rarityArtifact, bool rarityLegendary, bool raritySpecialEvent, bool includeAllOwnedItems);
	void OnFeaturedStoreItemSelected(const struct FString& itemId, bool isOutfit);
	void OnFeaturedCharacterSelected(int characterIndex);
	void OnFeaturedButtonSelected(int linkIndex);
	void OnFeaturedBannerItemSelected(const struct FString& itemId, bool isOutfit);
	void OnFeaturedBannerDlcSelected(const struct FString& dlcId);
	void OnEquipItem(const struct FString& itemId);
	void OnCatalogSelected();
	void OnBuyCurrencyBundle(int index);
};

// Class DeadByDaylight.StoreScreenScaleform
// 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
class UStoreScreenScaleform : public UStoreScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StoreScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.StoreScreenUMG
// 0x0068 (FullSize[0x03A0] - InheritedSize[0x0338])
class UStoreScreenUMG : public UStoreScreen
{
public:
	class UUMGCustomizationScreenWidget*               _customizationScreen;                                      // 0x0338(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGAtlantaStoreScreen*                      _storeScreen;                                              // 0x0340(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JHDO[0x58];                                    // 0x0348(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StoreScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.StruggleComponent
// 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
class UStruggleComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_6Z06[0x4C];                                    // 0x00B8(0x004C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _skillCheckCount;                                          // 0x0104(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N38W[0x38];                                    // 0x0108(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.StruggleComponent");
		return ptr;
	}



	void OnSkillCheckEnd(bool HadInput, bool Success, bool bonus, DBDSharedTypes_ESkillCheckCustomType type);
};

// Class DeadByDaylight.stunnableComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UstunnableComponent : public UactorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.stunnableComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SurveillancePerk
// 0x0008 (FullSize[0x0350] - InheritedSize[0x0348])
class USurveillancePerk : public Uperk
{
public:
	float                                              generatorRegressionStopRevealTime;                         // 0x0348(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8A5O[0x4];                                     // 0x034C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurveillancePerk");
		return ptr;
	}



	void HandleGeneratorIsDamagedChanged(class Ugenerator* generator, class UdbdPlayer* player);
};

// Class DeadByDaylight.SurviveTimerScoreEventComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class USurviveTimerScoreEventComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_1J79[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurviveTimerScoreEventComponent");
		return ptr;
	}



	void Authority_OnGameStarted();
};

// Class DeadByDaylight.SurvivorAttackableComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class USurvivorAttackableComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_2ZFH[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurvivorAttackableComponent");
		return ptr;
	}



	void Multicast_HitCosmetic_NonLocal(class UdbdPlayer* attacker, bool causedKo);
	void Multicast_HitCosmetic(class UdbdPlayer* attacker, bool causedKo);
	void Authority_HitCosmetic(class UdbdPlayer* attacker, bool causeKO);
};

// Class DeadByDaylight.SurvivorCollectableOutlineUpdateStrategy
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
class USurvivorCollectableOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _outlineColor;                                             // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _nearlyConsumedColor;                                      // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurvivorCollectableOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.SurvivorDisconnectionComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class USurvivorDisconnectionComponent : public UactorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurvivorDisconnectionComponent");
		return ptr;
	}



	void Authority_OnPlayerDisconnected(class UdbdPlayer* player);
};

// Class DeadByDaylight.SurvivorFootstepsPerceptionComponent
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class USurvivorFootstepsPerceptionComponent : public UFootstepsPerceptionComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurvivorFootstepsPerceptionComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SurvivorOutlineUpdateStrategy
// 0x0068 (FullSize[0x0128] - InheritedSize[0x00C0])
class USurvivorOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _inDangerColorForSurvivor;                                 // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _noRecoveryDyingColor;                                     // 0x00D0(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _fullRecoveryDyingColor;                                   // 0x00E0(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _saviourColorForSurvivor;                                  // 0x00F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _colorForKiller;                                           // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Utexture*                                    _revealedGradient;                                         // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Utexture*                                    _nonRevealedGradient;                                      // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _trappedIconActive;                                        // 0x0120(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YUL7[0x7];                                     // 0x0121(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurvivorOutlineUpdateStrategy");
		return ptr;
	}



	void SetTrappedIconActive(bool Value);
	bool IsBlockingAuraReadingFromKiller(class UslasherPlayer* Killer);
	bool STATIC_IsActivelyHidingAuraFromKiller(class UcamperPlayer* subject, class UslasherPlayer* witness);
	TArray<class UgameplayModifierContainer*> STATIC_GetEffectsProtectingFromKillerAuraReading(class UcamperPlayer* subject, class UslasherPlayer* Killer);
};

// Class DeadByDaylight.SurvivorPlagueEffect
// 0x0158 (FullSize[0x0400] - InheritedSize[0x02A8])
class USurvivorPlagueEffect : public UstatusEffect
{
public:
	unsigned char                                      UnknownData_0W18[0x48];                                    // 0x02A8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _sicknessAmount;                                           // 0x02F0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sicknessCap;                                              // 0x02F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vomitSlowDuration;                                        // 0x02F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vomitSlowAmount;                                          // 0x02FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      _sicknessThresholds;                                       // 0x0300(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wasRecentlyHitByVomit;                                    // 0x0310(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PVS5[0x7];                                     // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             _nonNauseatingInteractions;                                // 0x0318(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S1EH[0xA0];                                    // 0x0328(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _debugMode;                                                // 0x03C8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NVRU[0x37];                                    // 0x03C9(0x0037) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurvivorPlagueEffect");
		return ptr;
	}



	void RefreshSicknessGainValues();
	void OnSurvivorVomit_Aesthetic();
	void OnSurvivorBecomesInfected_Aesthetic();
	void OnSicknessCured_Aesthetic();
	void OnSicknessChanged_Aesthetic(float newSickness);
	void OnMaxSicknessReached_Aesthetic();
	void OnHitByVomit(bool isSuperVomit);
	void Multicast_OnSurvivorVomit();
	void Multicast_OnSurvivorBecomesInfected();
	void Multicast_OnSicknessCured();
	void Multicast_OnSicknessChanged(float newSickness);
	void Multicast_OnMaxSicknessReached();
	void Multicast_AddOnScreenDebugMessage(uint64_t key, float duration, const struct Fcolor& displayColor, const struct FString& debugMessage);
	bool IsInfected();
	bool IsDebugModeActive();
	bool HasMaxLevelSickness();
	TArray<float> GetSicknessThresholds();
	float GetSicknessPercentage();
	unsigned char GetSicknessLevel();
	float GetSicknessAmount();
	unsigned char GetMaxSicknessLevel();
	void Authority_ResetSickness(float newSickness);
	void Authority_OnHitByVomitProjectileAesthetic();
	void Authority_OnHitByVomitProjectile(float sicknessToAdd);
	void Authority_OnHitBySuperVomitProjectile();
	void Authority_InfectInteractable(class Uinteractable* interactable);
	void Authority_AddSickness(float sicknessToAdd);
};

// Class DeadByDaylight.SurvivorStatusInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USurvivorStatusInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SurvivorStatusInterface");
		return ptr;
	}



};

// Class DeadByDaylight.SwitchProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class USwitchProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.SwitchProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.TallyScreen
// 0x00D8 (FullSize[0x01F8] - InheritedSize[0x0120])
class UTallyScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_C59P[0xD8];                                    // 0x0120(0x00D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TallyScreen");
		return ptr;
	}



	void OnSpectateButtonClick();
	void OnShowSlasherInfos();
	void OnReportPlayerButtonClick(const struct FString& playerId);
	void OnRateMatch(int rateValue);
	void OnPlayerOptionClick(const struct FString& krakenId, const struct FString& playerId, unsigned char option);
	void OnPlayerInfoClick(const struct FString& playerId);
	void OnLevelingSequenceComplete();
	void OnLeaveButtonClick();
	void OnCustomerSupportButtonClick();
	void OnBloodwebButtonClick();
};

// Class DeadByDaylight.TallyScreenScaleform
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UTallyScreenScaleform : public UTallyScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TallyScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.TallyScreenUMG
// 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
class UTallyScreenUMG : public UTallyScreen
{
public:
	class UUMGAtlantaTallyScreen*                      _atlTallyScreen;                                           // 0x01F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TallyScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.TerrorRadiusReceiverComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class UTerrorRadiusReceiverComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIsInTerrorRadiusChanged;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 _trVerticalDistanceFactor;                                 // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _heartbeatMasterVolumeInterpolationSpeed;                  // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3OH2[0x4C];                                    // 0x00D4(0x004C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TerrorRadiusReceiverComponent");
		return ptr;
	}



	bool IsInTerrorRadiusRange();
	bool IsInTerrorRadius();
};

// Class DeadByDaylight.TheGhostUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTheGhostUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TheGhostUtilities");
		return ptr;
	}



	bool STATIC_IsKillerStealth(class Uactor* Killer);
};

// Class DeadByDaylight.TickInEditorSkeletalMesh
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class UTickInEditorSkeletalMesh : public USkeletalMeshActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TickInEditorSkeletalMesh");
		return ptr;
	}



};

// Class DeadByDaylight.TileBank
// 0x0100 (FullSize[0x0130] - InheritedSize[0x0030])
class UTileBank : public UObject
{
public:
	unsigned char                                      UnknownData_RALI[0xF0];                                    // 0x0030(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTile*>                               _allTileBlueprints;                                        // 0x0120(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TileBank");
		return ptr;
	}



};

// Class DeadByDaylight.TileEventComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UTileEventComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_YQYF[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TileEventComponent");
		return ptr;
	}



};

// Class DeadByDaylight.TileMatrix
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTileMatrix : public UObject
{
public:
	TArray<struct FArrayOfATile>                       _matrix;                                                   // 0x0030(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTile*>                               _tiles;                                                    // 0x0040(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTile*>                               _extraTiles;                                               // 0x0050(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FQuadrantInfo>                       _quadInfoArray;                                            // 0x0060(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FArrayOfInt32>                       _quadIndexMatrix;                                          // 0x0070(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TileMatrix");
		return ptr;
	}



};

// Class DeadByDaylight.TileVisitedAnalyticsComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UTileVisitedAnalyticsComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_QEUZ[0x50];                                    // 0x00B8(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TileVisitedAnalyticsComponent");
		return ptr;
	}



};

// Class DeadByDaylight.TimerGate
// 0x0010 (FullSize[0x0258] - InheritedSize[0x0248])
class UTimerGate : public UGate
{
public:
	float                                              _currentTime;                                              // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I1M4[0xC];                                     // 0x024C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TimerGate");
		return ptr;
	}



	void Update(float deltaTime);
	void SetValues(float TimerDuration, float RushGain, float RushBlockDuration);
	void Rushed(bool Success);
	void reset();
	void RemoveTime(float time);
	void AddTime(float time);
};

// Class DeadByDaylight.TimerGateDecrease
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class UTimerGateDecrease : public Uactor
{
public:
	class UTimerGate*                                  TimerGate;                                                 // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TimerGateDecrease");
		return ptr;
	}



	void Update(float deltaTime);
};

// Class DeadByDaylight.DBDTimeTravelManager
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UDBDTimeTravelManager : public UObject
{
public:
	unsigned char                                      UnknownData_XMEQ[0x68];                                    // 0x0030(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.DBDTimeTravelManager");
		return ptr;
	}



};

// Class DeadByDaylight.ToastNotificationScreen
// 0x0048 (FullSize[0x0168] - InheritedSize[0x0120])
class UToastNotificationScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_Y4KP[0x48];                                    // 0x0120(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ToastNotificationScreen");
		return ptr;
	}



	void OnPromptSelected(int NotificationId);
	void OnNotificationDisplayEnd(int NotificationId);
	void OnButtonSelected(int buttonid, int NotificationId);
};

// Class DeadByDaylight.ToastNotificationScreenScaleform
// 0x0000 (FullSize[0x0168] - InheritedSize[0x0168])
class UToastNotificationScreenScaleform : public UToastNotificationScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ToastNotificationScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.ToastNotificationScreenUMG
// 0x0008 (FullSize[0x0170] - InheritedSize[0x0168])
class UToastNotificationScreenUMG : public UToastNotificationScreen
{
public:
	class UUMGToastNotificationScreen*                 _toastNotificationScreen;                                  // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ToastNotificationScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.ToolBoxInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UToolBoxInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ToolBoxInterface");
		return ptr;
	}



	class UChargerComponent* GetChargerComponent();
};

// Class DeadByDaylight.TormentAttackDamageCooldownInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTormentAttackDamageCooldownInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TormentAttackDamageCooldownInterface");
		return ptr;
	}



};

// Class DeadByDaylight.Totem
// 0x0030 (FullSize[0x0308] - InheritedSize[0x02D8])
class UTotem : public Uinteractable
{
public:
	unsigned char                                      UnknownData_JJGB[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       HexPerkID;                                                 // 0x02E0(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsCleansed;                                                // 0x02EC(0x0001) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D9ZO[0x13];                                    // 0x02ED(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Totem");
		return ptr;
	}



	void OnUnbound();
	void OnRep_HexPerkID();
	void OnCleanseTotem(class UdbdPlayer* player);
	void OnBoundToHex();
	void Multicast_UnbindCleansed();
	bool HasHex();
};

// Class DeadByDaylight.TotemOutlineUpdateStrategy
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UTotemOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedColorToSurvivor;                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveLinearColor*                           _revealedColorToKiller;                                    // 0x00D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TotemOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.TreatmentComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UTreatmentComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_DFQ3[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TreatmentComponent");
		return ptr;
	}



	void SetIsInTreatmentMode(bool treatmentMode);
	bool IsInTreatmentMode();
};

// Class DeadByDaylight.TREmitterFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTREmitterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TREmitterFunctionLibrary");
		return ptr;
	}



	int STATIC_GetActiveFakeTerrorRadiusEmittersCount(class UObject* worldContextObject);
};

// Class DeadByDaylight.TriggerableActivatorComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UTriggerableActivatorComponent : public UactorComponent
{
public:
	unsigned char                                      _triggerableClass[0x30];                                   // 0x00B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UTriggerableWorldObjectComponent*>    _triggerables;                                             // 0x00E8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TriggerableActivatorComponent");
		return ptr;
	}



	void Authority_OnLevelReadyToPlay();
};

// Class DeadByDaylight.TriggerableWorldObjectComponent
// 0x0098 (FullSize[0x0150] - InheritedSize[0x00B8])
class UTriggerableWorldObjectComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTriggered;                                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTriggerReset;                                            // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              _triggerResetTime;                                         // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _randomChance;                                             // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _rollFrequency;                                            // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PWA7[0xC];                                     // 0x00E4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UprimitiveComponent>          _conditionalTriggerVolume;                                 // 0x00F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _conditionalVolumeOverlappingPlayers[0x50];                // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
	TWeakObjectPtr<class UprimitiveComponent>          _guaranteedTriggerVolume;                                  // 0x0148(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TriggerableWorldObjectComponent");
		return ptr;
	}



	void SetGuaranteedTriggerVolume(class UprimitiveComponent* volume);
	void SetConditionalTriggerVolume(class UprimitiveComponent* volume);
	void Multicast_OnTriggerReset();
	void Multicast_OnTriggered(class Uactor* instigator, const struct Fvector& triggerLocation);
	void GetConditionalModifiers(class UdbdPlayer* player, float* outAdditive, float* outMultiplicative);
	bool CanPlayerTriggerGuaranteed(class UdbdPlayer* player);
	bool CanPlayerTriggerConditional(class UdbdPlayer* player);
	void Authority_Trigger(class Uactor* instigator, const struct Fvector& triggerLocation);
	void Authority_ResetTrigger();
	void Authority_GuaranteedVolumeOverlap(class UprimitiveComponent* overlappedComponent, class Uactor* other, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& hitResult);
	void Authority_ConditionalVolumeEndOverlap(class UprimitiveComponent* overlappedComponent, class Uactor* other, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void Authority_ConditionalVolumeBeginOverlap(class UprimitiveComponent* overlappedComponent, class Uactor* other, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& hitResult);
};

// Class DeadByDaylight.TriplanarDecalComponent
// 0x0050 (FullSize[0x0260] - InheritedSize[0x0210])
class UTriplanarDecalComponent : public USceneComponent
{
public:
	float                                              MinHeight;                                                 // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Height;                                                    // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaskIntensity;                                             // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BNUZ[0x4];                                     // 0x021C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  TopTexture;                                                // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  BottomTexture;                                             // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  MaskTexture;                                               // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EDetailMode>                    MinQualitySetting;                                         // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JV1R[0x7];                                     // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDecalComponent*                             _triPlanarDecal;                                           // 0x0240(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _triPlanarDecalClass;                                      // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMATERIAL*                                   _decalMaterial;                                            // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R79X[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TriplanarDecalComponent");
		return ptr;
	}



	void UpdateTriplanarDecal();
};

// Class DeadByDaylight.TutorialAssetLibrary
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UTutorialAssetLibrary : public UAssetLibrary
{
public:
	unsigned char                                      UnknownData_II6J[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.TutorialFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTutorialFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialFunctionLibrary");
		return ptr;
	}



	bool STATIC_IsInTutorial(class UObject* worldContextObject);
	class UTutorialObjectiveController* STATIC_GetTutorialObjectiveController(class UObject* worldContextObject);
	class UTutorialNotificationController* STATIC_GetTutorialNotificationController(class UObject* worldContextObject);
	class UTutorialGameState* STATIC_GetTutorialGameState(class UObject* worldContextObject);
	class UTutorialGameMode* STATIC_GetTutorialGameMode(class UObject* worldContextObject);
};

// Class DeadByDaylight.TutorialGameMode
// 0x0018 (FullSize[0x0388] - InheritedSize[0x0370])
class UTutorialGameMode : public UDBDBaseMatchGameMode
{
public:
	class UTutorialObjectiveController*                _tutorialObjectiveController;                              // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTutorialNotificationController*             _tutorialNotificationController;                           // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTutorialHighlightController*                _tutorialHighlightController;                              // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialGameMode");
		return ptr;
	}



	void SetEscapeGenerators(TArray<class Ugenerator*> escapeGenerators, int requiredActivationCount);
	void SetEscapeActivated();
	class UTutorialObjectiveController* GetTutorialObjectiveController();
	class UTutorialNotificationController* GetTutorialNotificationController();
	class UTutorialHighlightController* GetTutorialHighlightController();
};

// Class DeadByDaylight.TutorialGameState
// 0x0050 (FullSize[0x07B8] - InheritedSize[0x0768])
class UTutorialGameState : public UDBDGameState
{
public:
	struct FScriptMulticastDelegate                    OnCurrentTutorialStepChanged;                              // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RSV1[0x2];                                     // 0x0778(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _forceHatchVisible;                                        // 0x077A(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NKYZ[0x3D];                                    // 0x077B(0x003D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialGameState");
		return ptr;
	}



	void TutorialEndReached();
	void SetEscapeRequirementsVisibility(bool isVisible);
	void SetCurrentTutorialStep(DeadByDaylight_ETutorialStep step);
	void OnCurrentTutorialStepChanged__DelegateSignature(DeadByDaylight_ETutorialStep step);
	bool IsTutorialStarted();
	DeadByDaylight_ETutorialStep GetCurrentTutorialStep();
	void CompleteLocallyControlledCharacterIntros();
};

// Class DeadByDaylight.TutorialHighlightController
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UTutorialHighlightController : public UObject
{
public:
	unsigned char                                      UnknownData_V092[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialHighlightController");
		return ptr;
	}



	void SetHudComponentHighlight(DBDSharedTypes_EHudComponent hudComponent, bool show);
};

// Class DeadByDaylight.TutorialNotificationController
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UTutorialNotificationController : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnBlockingNotificationDismissedEvent;                      // 0x0030(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q68J[0x70];                                    // 0x0040(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialNotificationController");
		return ptr;
	}



	void ShowNotification(const struct FName& tutorialNotificationId, float duration);
	void ShowBlockingNotification(const struct FName& tutorialNotificationId);
	void OnBlockingNotificationDismissedEvent__DelegateSignature(const struct FName& tutorialNotificationId);
	void OnBlockingNotificationDismissed();
	void HideNotification();
};

// Class DeadByDaylight.TutorialObjectiveController
// 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
class UTutorialObjectiveController : public UObject
{
public:
	unsigned char                                      UnknownData_MNYS[0xB0];                                    // 0x0030(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialObjectiveController");
		return ptr;
	}



	void RemoveObjective(const struct FName& tutorialObjectiveId);
	void RemoveAllObjectives();
	void CompleteObjective(const struct FName& tutorialObjectiveId, bool removeAfterCompletion);
	void AddObjective(const struct FName& tutorialObjectiveId);
};

// Class DeadByDaylight.TutorialPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UTutorialPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.TutorialsUtilities
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class UTutorialsUtilities : public Uactor
{
public:
	struct FScriptMulticastDelegate                    OnTutorialUIReady;                                         // 0x0230(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BAKR[0x28];                                    // 0x0240(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.TutorialsUtilities");
		return ptr;
	}



	void TriggerTutorialHudFadeOut();
	void TriggerTutorialHudFadeIn();
	class UTutorialsUtilities* STATIC_GetTutorialsUtilities(class UObject* worldContextObject);
	void STATIC_DestroyAI(class UaiController* aiController);
};

// Class DeadByDaylight.AnimationWidget
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UAnimationWidget : public UUserWidget
{
public:
	float                                              _playRate;                                                 // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_230E[0x4];                                     // 0x0264(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.AnimationWidget");
		return ptr;
	}



	void SetPlayRate(float rate);
	float GetPlayRate();
};

// Class DeadByDaylight.UIController
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UUIController : public UObject
{
public:
	class UGFxObject*                                  m_UIControllerObj;                                         // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMobileBaseUserWidget*                       _atlantaLoadingWidget;                                     // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5U96[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UIController");
		return ptr;
	}



};

// Class DeadByDaylight.UIScreenshotTool
// 0x02B8 (FullSize[0x05F0] - InheritedSize[0x0338])
class UUIScreenshotTool : public UCharacterTool
{
public:
	class UPostProcessVolume*                          PostProcessVolume;                                         // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ScreenshotFolderPath;                                      // 0x0340(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ScreenshotResolution;                                      // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IconResolution;                                            // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DelayBeforeTakingScreenshot;                               // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PhotoshopScriptWaitTimeout;                                // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EScreenShotBatching                 Batching;                                                  // 0x0360(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_USJ9[0x3];                                     // 0x0361(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentPart;                                               // 0x0364(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ECustomizationCategory              CurrentPartCategory;                                       // 0x0370(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7B6F[0x3];                                     // 0x0371(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentSetting;                                            // 0x0374(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraActor*                                ScreenshotCamera;                                          // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateCameraFromViewSettings;                              // 0x0388(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8ZK5[0x3];                                     // 0x0389(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScreenshotViewSetting                      SurvivorHeadView;                                          // 0x038C(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      SurvivorTorsoView;                                         // 0x03B4(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      SurvivorLegsView;                                          // 0x03DC(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      KillerHeadView;                                            // 0x0404(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      KillerBodyView;                                            // 0x042C(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      KillerWeaponView;                                          // 0x0454(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UNIR[0x4];                                     // 0x047C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGenderViewSetting>                  GenderViewOverrides;                                       // 0x0480(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterItemCategoryViewSetting>   CharacterViewOverrides;                                    // 0x0490(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FItemViewSetting>                    ItemViewOverrides;                                         // 0x04A0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRoleGenderViewSetting>              OutfitView;                                                // 0x04B0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterViewSetting>               OutfitCharacterOverrides;                                  // 0x04C0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRoleGenderViewSetting>              OutfitTwoPartsView;                                        // 0x04D0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutfitViewSetting>                  OutfitOverrides;                                           // 0x04E0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterAnimation>                 AnimationOverrides;                                        // 0x04F0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      CharmsView;                                                // 0x0500(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FCharmCategorySetting>               CharmsCategoryOverrides;                                   // 0x0528(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharmViewSetting>                   CharmOverrides;                                            // 0x0538(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNamedButton                                ReloadDBButton;                                            // 0x0548(0x0018) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JN66[0x70];                                    // 0x0560(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uactor*                                      _spawnedCharm;                                             // 0x05D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNamedButton                                ShowIconHelp;                                              // 0x05D8(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UIScreenshotTool");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAlertsWidget
// 0x00C0 (FullSize[0x03C0] - InheritedSize[0x0300])
class UUMGAlertsWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      AtlantaScoreAlertComponentClass[0x30];                     // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      AtlantaStatusEffectAlertComponentClass[0x30];              // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UCanvasPanel*                                CanvasPanelAlerts;                                         // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IdleTime;                                                  // 0x0368(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WVBR[0x44];                                    // 0x036C(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _scoreAlertClass;                                          // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _statusEffectAlertClass;                                   // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAlertsWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaCreditsPopup
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGAtlantaCreditsPopup : public UMobileBaseUserWidget
{
public:
	class UUMGHtmlRichText*                            RichTitleText;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            RichContentText;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     _titleDefaultStyle;                                        // 0x0310(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaCreditsPopup");
		return ptr;
	}



	void SetCreditTitle(const struct FString& title);
	void SetCreditContent(const struct FString& content);
};

// Class DeadByDaylight.UMGAtlantaFriendListScreen
// 0x03B0 (FullSize[0x06B0] - InheritedSize[0x0300])
class UUMGAtlantaFriendListScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_AQ15[0x60];                                    // 0x0300(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetSwitcher*                             ListSwitcher;                                              // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             SearchResultSwitcher;                                      // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   NonFriendSearchResult;                                     // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   RequestReceivedSearchResult;                               // 0x0378(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   RequestSentSearchResult;                                   // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   FriendSearchResult;                                        // 0x0388(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  SearchFailureText;                                         // 0x0390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        CloseButton;                                               // 0x0398(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendSearchBarWidget*                   SearchBar;                                                 // 0x03A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              ButtonTabContainer;                                        // 0x03A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendListTabWidget*                     FriendListTabWidget;                                       // 0x03B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSuggestionsListTabWidget*                SuggestionListTabWidget;                                   // 0x03B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRequestsListTabWidget*                   RequestListTabWidget;                                      // 0x03C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendTabButtonWidget*                   FriendsTabButton;                                          // 0x03C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendTabButtonWidget*                   SuggestionsTabButton;                                      // 0x03D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendTabButtonWidget*                   RequestsTabButton;                                         // 0x03D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListContextualMenuWidget*      CurrentContextualMenuWidget;                               // 0x03E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      FriendWidget[0x30];                                        // 0x03E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      RequestSentWidget[0x30];                                   // 0x0418(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendRequestReceivedWidget[0x30];                         // 0x0448(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendsSuggestionWidget[0x30];                             // 0x0478(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendsSuggestion[0x30];                                   // 0x04A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendPartyInviteWidgetClass[0x30];                        // 0x04D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ContextualMenuInvite[0x30];                                // 0x0508(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ContextualMenuConfirmDeclineAction[0x30];                  // 0x0538(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_8A9B[0x90];                                    // 0x0568(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, struct FFriendWidgetList>     _existingFriendListWidgets;                                // 0x05F8(0x0050) (NativeAccessSpecifierPrivate)
	TMap<struct FString, class UUMGBaseFriendListElement*> _existingFriendInvitePartyWidget;                          // 0x0648(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FHW1[0x18];                                    // 0x0698(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaFriendListScreen");
		return ptr;
	}



	void VerifyReceivedFriendRequestFocus(class UexpandableArea* expandableArea, bool bIsExpanded);
	void OnFinishedOutAnimation();
	void HandleTabButtonClicked(unsigned char TabIndex);
	void HandleSearchInputChanged(const struct FText& inputText);
	void HandleSearchButtonClicked();
	void HandleOnActionOnFriend(const struct FactionOnFriend& actionOnFriend);
	void HandleContextualMenuAction(DBDUIViewsMobile_EActionOnFriendType Action);
	void HandleCloseButtonClicked();
};

// Class DeadByDaylight.UMGAtlantaLegalMenuScreen
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGAtlantaLegalMenuScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_RJU1[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaLegalMenuScreen");
		return ptr;
	}



	void SetLegalText(const struct FString& title, const struct FString& legalText);
	void SetButtonText(const struct FText& acceptText, const struct FText& declineText);
	void HandleMenuButtonClickEvent(bool isAccept);
};

// Class DeadByDaylight.UMGGenericPopup
// 0x00E8 (FullSize[0x03E8] - InheritedSize[0x0300])
class UUMGGenericPopup : public UMobileBaseUserWidget
{
public:
	class URichTextBlock*                              title;                                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URichTextBlock*                              message;                                                   // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      TitleBackground;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      TitleSmoke;                                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPopupButton*                             RegressionPopupButton;                                     // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPopupButton*                             AlternativePopupButton;                                    // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPopupButton*                             ProgressionPopupButton;                                    // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                                 ErrorTitleSmokeColor;                                      // 0x0338(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                                 ErrorTitleBackgroundColor;                                 // 0x0360(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                                 DefaultTitleSmokeColor;                                    // 0x0388(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                                 DefaultTitleBackgroundColor;                               // 0x03B0(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0QJZ[0x10];                                    // 0x03D8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGGenericPopup");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaLevelUpPopup
// 0x0000 (FullSize[0x03E8] - InheritedSize[0x03E8])
class UUMGAtlantaLevelUpPopup : public UUMGGenericPopup
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaLevelUpPopup");
		return ptr;
	}



	void OnSetData(int level, int prestige, bool prestigeIncreased, TArray<struct FRewardItemData> rewards);
};

// Class DeadByDaylight.UMGAtlantaNavigationScreen
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGAtlantaNavigationScreen : public UMobileBaseUserWidget
{
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  TextButtonStart;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               PlayModeSelectionVisibility;                               // 0x0310(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               CharacterInfoVisibility;                                   // 0x0311(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               BackButtonVisibility;                                      // 0x0312(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               MenuButtonsVisibility;                                     // 0x0313(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ButtonRoleVisibility;                                      // 0x0314(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T0LG[0x3];                                     // 0x0315(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Ubutton*                                     ButtonRole;                                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                             BottomRightWidgetSwitcher;                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPartySlotsWidget*                        PartyPlayerSlots;                                          // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseCountdownWidget*                     PartyCountdownLarge;                                       // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPartyMemberUIData>                  _partyMembers;                                             // 0x0338(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y69T[0x18];                                    // 0x0348(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaNavigationScreen");
		return ptr;
	}



	TArray<struct FPartyMemberUIData> GetPartyMembersData(int index);
	void ButtonClickEvent(DeadByDaylight_ENavigationScreenButton buttonid);
};

// Class DeadByDaylight.UMGAltantaRitual
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGAltantaRitual : public UMobileBaseUserWidget
{
public:
	struct FText                                       _claimText;                                                // 0x0300(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _claimedText;                                              // 0x0318(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _completedText;                                            // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TEGZ[0x10];                                    // 0x0348(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAltantaRitual");
		return ptr;
	}



	void SetData(const struct FAtlantaRitualUIData& ritual);
	void BroadcastOnClaimRewardsButtonPressed(int RitualId);
};

// Class DeadByDaylight.UMGAtlantaRitualsScreen
// 0x00F0 (FullSize[0x03F0] - InheritedSize[0x0300])
class UUMGAtlantaRitualsScreen : public UMobileBaseUserWidget
{
public:
	class UUMGAtlantaRitualTab*                        DailyTab;                                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGAtlantaRitualTab*                        WeeklyTab;                                                 // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _atlantaRitualTitle;                                       // 0x0310(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _endInLabel;                                               // 0x0328(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _dailyButtonLabel;                                         // 0x0340(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _weeklyButtonLabel;                                        // 0x0358(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _dailyRemainingTime;                                       // 0x0370(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _weeklyRemainingTime;                                      // 0x0388(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_40TC[0x50];                                    // 0x03A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaRitualsScreen");
		return ptr;
	}



	void SetNewRitualNumbers(int newDailyRitualNumber, int newWeeklyRitualNumber);
	void BroadcastOnClaimRewardButtonPressed(int RitualId);
	void BroadcastOnBackButtonPressed();
};

// Class DeadByDaylight.UMGAtlantaRitualTab
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UUMGAtlantaRitualTab : public UMobileBaseUserWidget
{
public:
	class UVerticalBox*                                ContainerBox;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _itemWidgetClass[0x30];                                    // 0x0308(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_A5BJ[0x10];                                    // 0x0338(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaRitualTab");
		return ptr;
	}



	void BroadcastOnClaimRewardsButtonPressed(int RitualId);
};

// Class DeadByDaylight.UMGAtlantaSettingScreen
// 0x0200 (FullSize[0x0500] - InheritedSize[0x0300])
class UUMGAtlantaSettingScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_JU59[0xB0];                                    // 0x0300(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetSwitcher*                             SettingContextSwitcher;                                    // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              SettingTabBox;                                             // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              AlwaysDisplayButtonBox;                                    // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _settingTabButtonClass[0x30];                              // 0x03C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      _settingAlwaysDisplayButtonClass[0x30];                    // 0x03F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      _buttonBoxDividerAsset[0x30];                              // 0x0428(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      _overlayContextWidgetMap[0x50];                            // 0x0458(0x0050) UNKNOWN PROPERTY: MapProperty
	TMap<DeadByDaylight_EOverlayTabs, class UUMGSettingContextWidget*> _contextWidgetMap;                                         // 0x04A8(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GRXC[0x8];                                     // 0x04F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaSettingScreen");
		return ptr;
	}



	void ShowCreditsOrConsentsPopup(const struct FString& title, const struct FString& content);
	void SetRightTopTextInfo(const struct FText& title, const struct FString& content, UMG_ESlateVisibility textVisibility);
	void HandleSurvivorCameraSensitivityChanged(int Value);
	void HandleSettingTabClick(int TabIndex);
	void HandleLeaveButtonClick();
	void HandleLanguageButtonClick(int index);
	void HandleKillerCameraSensitivityChanged(int Value);
	void HandleInvertYToggleClick(bool toggleValue);
	void HandleInteractionButtonToggleClick(int index);
	void HandleHandSideToggleClick(int index);
	void HandleContextButtonClickEvent(int index);
	void HandleAlwaysDisplayButtonClick(int TabIndex);
	void HandleAimAssistToggleClick(bool toggleValue);
};

// Class DeadByDaylight.UMGAtlantaStoreScreen
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGAtlantaStoreScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_44ZH[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UScaleBox*                                   AuricCellsWidget;                                          // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                           AuricCellsGridPanel;                                       // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SUSH[0x8];                                     // 0x0330(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaStoreScreen");
		return ptr;
	}



	void SetBank(DeadByDaylight_ECurrencyType currencyType, int bank);
	void HandleOnStoreLeft();
	void HandleOnClickedBuyAuricCell(int cellIndex);
};

// Class DeadByDaylight.UMGAtlantaTallyScreen
// 0x01C8 (FullSize[0x04C8] - InheritedSize[0x0300])
class UUMGAtlantaTallyScreen : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnTallyLeft;                                               // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallySpectateClicked;                                    // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyAddFriendEvent;                                     // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyReportEvent;                                        // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UUMGTallyListWidget*                         TallyScrollWidget;                                         // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      TallyScoreboardClass[0x30];                                // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyBloodpointsClass[0x30];                               // 0x0378(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyRankClass[0x30];                                      // 0x03A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyPlayerLevelClass[0x30];                               // 0x03D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyCharacterProgressionClass[0x30];                      // 0x0408(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FText                                       TextLeaveLobby;                                            // 0x0438(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       SpectateButtonText;                                        // 0x0450(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	DBDSharedTypes_EPlayerRole                         playerRole;                                                // 0x0468(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EGameType                           GameType;                                                  // 0x0469(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U0Q6[0x2];                                     // 0x046A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PlayerStatus;                                              // 0x046C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               FromSpectateMode;                                          // 0x0470(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6A7I[0x7];                                     // 0x0471(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGTallyScoreboardWidget*                   _scoreboardWidget;                                         // 0x0478(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyBloodpointsWidget*                  _bloodpointsWidget;                                        // 0x0480(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyRankWidget*                         _rankWidget;                                               // 0x0488(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyPlayerLevelWidget*                  _playerLevelWidget;                                        // 0x0490(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyCharacterProgressionWidget*         _characterLevelWidget;                                     // 0x0498(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S041[0x28];                                    // 0x04A0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaTallyScreen");
		return ptr;
	}



	void ShowSpectateButton(bool show);
	void SetScrollPageSize(const struct FGeometry& MyGeometry);
	void HandleTallySpectateClicked();
	void HandleTallyLeave();
	void HandleReportEvent(const struct FString& playerId);
	void HandleAddFriendEvent(const struct FString& playerId);
};

// Class DeadByDaylight.UMGAtlantaTutorialScreen
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGAtlantaTutorialScreen : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGAtlantaTutorialScreen");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBankAndPlayerInfoWidget
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGBankAndPlayerInfoWidget : public UMobileBaseUserWidget
{
public:
	class UUMGLevelBannerWidget*                       LevelBanner;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterPrestigeButton*                 PrestigeButton;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JIV3[0x20];                                    // 0x0310(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBankAndPlayerInfoWidget");
		return ptr;
	}



	void SetPlayerLevel(int level, int prestige, int currentLevelXp, int totalLevelXp, bool isSlasher, bool playUpdateAnim);
	void SetPlayerInfo(const struct FplayerInfoData& playerInfoData);
	void SetCharacterInfoVisibility(UMG_ESlateVisibility newVisibility);
	void SetBank(DeadByDaylight_ECurrencyType currencyType, int bank);
	void OnTooltipTriggeredByLevelBannerWidget(const struct FtooltipPressedData& tooltipPressedData);
	void OnPrestigeButtonClicked();
};

// Class DeadByDaylight.UMGBaseAlertWidget
// 0x0030 (FullSize[0x0290] - InheritedSize[0x0260])
class UUMGBaseAlertWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_BKDS[0x30];                                    // 0x0260(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBaseAlertWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBaseCountdownWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UUMGBaseCountdownWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  TimerTextBlock;                                            // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _timerThreshold;                                           // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MC51[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 _timerColorBelowThreshold;                                 // 0x0310(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _timerColorBeyondThreshold;                                // 0x0338(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YEWX[0x8];                                     // 0x0360(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBaseCountdownWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBaseToastWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UUMGBaseToastWidget : public UMobileBaseUserWidget
{
public:
	class Uimage*                                      ToastIcon;                                                 // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  ToastText;                                                 // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProgressBar*                                TimeToastProgression;                                      // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PET4[0x50];                                    // 0x0318(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBaseToastWidget");
		return ptr;
	}



	void TriggerToastInput(int inputCode);
	void OnTimerFinished();
};

// Class DeadByDaylight.UMGBloodStoreArrayWidget
// 0x0070 (FullSize[0x0370] - InheritedSize[0x0300])
class UUMGBloodStoreArrayWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_RZCH[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGBloodStoreRowWidget*                     FirstBloodStoreRowWidget;                                  // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     SecondBloodStoreRowWidget;                                 // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     ThirdBloodStoreRowWidget;                                  // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     FourthBloodStoreRowWidget;                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     FifthBloodStoreRowWidget;                                  // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DDTR[0x38];                                    // 0x0338(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreArrayWidget");
		return ptr;
	}



	void BroadcastBloodNodeSelected(const struct FString& Id);
};

// Class DeadByDaylight.UMGBloodStoreItemPreviewWidget
// 0x0108 (FullSize[0x0408] - InheritedSize[0x0300])
class UUMGBloodStoreItemPreviewWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_1IQA[0x30];                                    // 0x0300(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _itemName;                                                 // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemDescription;                                          // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int                                                _itemPrice;                                                // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LHBF[0x4];                                     // 0x0364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _refreshPrice;                                             // 0x0368(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _nodeStatusText;                                           // 0x0380(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _refreshTitle;                                             // 0x0398(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemSelectionTitle;                                       // 0x03B0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemSelectionText;                                        // 0x03C8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _purchaseTitle;                                            // 0x03E0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KSUM[0x10];                                    // 0x03F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreItemPreviewWidget");
		return ptr;
	}



	void UnselectItem();
	void showRefreshButton(bool showRefreshButton, bool isRefreshFree);
	void showPurchaseButton(bool showPurchaseButton);
	void DisplayItem(bool isItemPurchaseable, bool isItemAffordable);
	void BroadcastUnselectPressed();
	void BroadcastRefreshPressed();
	void BroadcastPurchasePressed();
};

// Class DeadByDaylight.UMGBloodStoreItemWidget
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UUMGBloodStoreItemWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_MHCF[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uimage*                                      NodeImage;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      BackgroundImage;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      RarityBackground;                                          // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemPanel;                                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                MysteryBoxPanel;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      MysteryBoxRarityBackground;                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CollectedPanel;                                            // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ConsumedPanel;                                             // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EBloodwebNodeContentType            _contentType;                                              // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isMysteryBox;                                             // 0x0351(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CYI4[0x2];                                     // 0x0352(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   _bigItemScale;                                             // 0x0354(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _normalItemScale;                                          // 0x035C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _consumedOpacity;                                          // 0x0364(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M26Q[0x18];                                    // 0x0368(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreItemWidget");
		return ptr;
	}



	void UnFocusNode();
	void SetSelectedVisibilities(bool isSelected);
	void SetBackgroundImages();
	void PlayConsumedAnimation(bool skipIntro);
	void FocusNode();
	void ConsumeNode();
	void CollectNode();
	void BroadcastBloodNodeSelected();
};

// Class DeadByDaylight.UMGBloodStoreMysteryBoxPopup
// 0x0078 (FullSize[0x0460] - InheritedSize[0x03E8])
class UUMGBloodStoreMysteryBoxPopup : public UUMGGenericPopup
{
public:
	class UUMGBloodStoreItemWidget*                    MysteryItem;                                               // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _itemDisplayName;                                          // 0x03F0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemRarityName;                                           // 0x0408(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _itemRarityColor;                                          // 0x0420(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _addedToInventory;                                         // 0x0448(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreMysteryBoxPopup");
		return ptr;
	}



	void StartRevealSequence();
};

// Class DeadByDaylight.UMGBloodStoreRowWidget
// 0x0098 (FullSize[0x0398] - InheritedSize[0x0300])
class UUMGBloodStoreRowWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_X766[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UHorizontalBox*                              ItemContainer;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                LockStatusPanel;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                HardLockedStatusPanel;                                     // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _purchasedItemsNbr;                                        // 0x0328(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _requiredItemNbr;                                          // 0x032C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EBloodStoreRowStyle                 _rowStyle;                                                 // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WYG6[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMargin                                     _itemPadding;                                              // 0x0334(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AO32[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _itemWidgetClass[0x30];                                    // 0x0344(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      _itemClass;                                                // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z84P[0x18];                                    // 0x0380(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreRowWidget");
		return ptr;
	}



	void UnlockRow(bool playAnim);
	void LockRow(bool playAnim);
	void BroadcastUnlockAnimationFinished();
	void BroadcastBloodNodeSelected(const struct FString& Id);
};

// Class DeadByDaylight.UMGBloodStoreSubMenu
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGBloodStoreSubMenu : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_3WFF[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGBloodStoreTimer*                         SurvivorTimer;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreTimer*                         KillerTimer;                                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreSubMenu");
		return ptr;
	}



	void SetFaction(bool isKiller);
	void BroadcastExpiredBloodWeb();
	void BroadcastCharacterRoleButtonClicked();
};

// Class DeadByDaylight.UMGBloodStoreTimer
// 0x0088 (FullSize[0x0388] - InheritedSize[0x0300])
class UUMGBloodStoreTimer : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_2KCW[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 _normalColor;                                              // 0x0310(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _warningColor;                                             // 0x0338(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RemainingTimeTextBlock;                                    // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      RefreshImage;                                              // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JZAT[0x18];                                    // 0x0370(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreTimer");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBloodStoreWidget
// 0x00C0 (FullSize[0x03C0] - InheritedSize[0x0300])
class UUMGBloodStoreWidget : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnBloodNodeSelected;                                       // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBloodNodePurchase;                                       // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBloodStoreRegenerate;                                    // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterRoleButtonClicked;                              // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UUMGBloodStoreArrayWidget*                   BloodStoreArrayWidget;                                     // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreItemPreviewWidget*             ItemPreviewWidget;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreSubMenu*                       BloodStoreSubMenuWidget;                                   // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _bloodStoreTitle;                                          // 0x0358(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killersTitle;                                             // 0x0370(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _survivorsTitle;                                           // 0x0388(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LWBI[0x20];                                    // 0x03A0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGBloodStoreWidget");
		return ptr;
	}



	void UnselectNode();
	void SwitchRole();
	void SetSelectedNode(const struct FString& selectedId);
	void SetFaction(bool isKiller);
	void RegenerateBloodStore();
	void PurchaseSelectedNode();
};

// Class DeadByDaylight.UMGCharacterButton
// 0x0158 (FullSize[0x0458] - InheritedSize[0x0300])
class UUMGCharacterButton : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_OTHF[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uimage*                                      PortraitIcon;                                              // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CharacterSelectedPanel;                                    // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9TZX[0x8];                                     // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                LevelPanel;                                                // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CharacterLevelText;                                        // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  OwnedCustomizationText;                                    // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TotalCustomizationText;                                    // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PricePanel;                                                // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterPrice*                          CellPrice;                                                 // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterPrice*                          ShardPrice;                                                // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCharacterSlotData                          CharacterSlotData;                                         // 0x0360(0x00F8) (BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterButton");
		return ptr;
	}



	void SetIsSelected(bool isSelected);
	void SetCharacterData(const struct FCharacterSlotData& characterData);
	void BroadcastClickedEvent(int characterIndex);
};

// Class DeadByDaylight.UMGCharacterInfoWidget
// 0x0110 (FullSize[0x0410] - InheritedSize[0x0300])
class UUMGCharacterInfoWidget : public UMobileBaseUserWidget
{
public:
	class UScrollBox*                                  CharacterInfoScrollBox;                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterScrollingInfoWidget*            CharacterScrollingInfoWidget;                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CharacterDLCPanel;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     _characterNameText;                                        // 0x0318(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _characterDifficultyText;                                  // 0x0328(0x0018) (Edit, BlueprintVisible, NoClear, Protected, NativeAccessSpecifierProtected)
	struct FString                                     _characterDLCText;                                         // 0x0340(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isKiller;                                                 // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8QWQ[0x7];                                     // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 _easyColor;                                                // 0x0358(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _intermediaryColor;                                        // 0x0380(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _hardColor;                                                // 0x03A8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _currentColor;                                             // 0x03D0(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _characterDLCTitle;                                        // 0x03F8(0x0018) (Edit, BlueprintVisible, NoClear, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterInfoWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPageScrollWidget
// 0x00C0 (FullSize[0x03C0] - InheritedSize[0x0300])
class UUMGPageScrollWidget : public UMobileBaseUserWidget
{
public:
	float                                              ItemWidth;                                                 // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemHeight;                                                // 0x0304(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RowCount;                                                  // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ColumnCount;                                               // 0x030C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ItemGapDistance;                                           // 0x0310(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalPageCount;                                            // 0x0314(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ButtonWidth;                                               // 0x0318(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VO03[0x4];                                     // 0x031C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                ContainerPanel;                                            // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              ButtonsPanel;                                              // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _pageButtonWidgetClass[0x30];                              // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UCanvasPanel*>                        _itemArray;                                                // 0x0360(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _currentPageIndex;                                         // 0x0370(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UWU4[0x4C];                                    // 0x0374(0x004C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGPageScrollWidget");
		return ptr;
	}



	void HandlePageButtonClicked(int PageIndex);
};

// Class DeadByDaylight.UMGGridPageScrollWidget
// 0x0008 (FullSize[0x03C8] - InheritedSize[0x03C0])
class UUMGGridPageScrollWidget : public UUMGPageScrollWidget
{
public:
	unsigned char                                      UnknownData_PZLD[0x8];                                     // 0x03C0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGGridPageScrollWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterPageScrollWidget
// 0x00A8 (FullSize[0x0470] - InheritedSize[0x03C8])
class UUMGCharacterPageScrollWidget : public UUMGGridPageScrollWidget
{
public:
	unsigned char                                      UnknownData_7KRM[0x10];                                    // 0x03C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _characterButtonWidgetClass[0x30];                         // 0x03C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FCharacterSlotData>                  _charactersData;                                           // 0x0408(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isKiller;                                                 // 0x0418(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8LLL[0x7];                                     // 0x0419(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _charactersTitleText;                                      // 0x0420(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killersTitleText;                                         // 0x0438(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _survivorsTitleText;                                       // 0x0450(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BMRK[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterPageScrollWidget");
		return ptr;
	}



	void HandleCharacterClicked(int characterIndex);
};

// Class DeadByDaylight.UMGCharacterPrestigeIcon
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGCharacterPrestigeIcon : public UMobileBaseUserWidget
{
public:
	class Uimage*                                      PrestigeImage;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterPrestigeIcon");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterPrestigeButton
// 0x0020 (FullSize[0x0328] - InheritedSize[0x0308])
class UUMGCharacterPrestigeButton : public UUMGCharacterPrestigeIcon
{
public:
	class Ubutton*                                     PrestigeButton;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PrestigeAnimationCanvas;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U2LB[0x10];                                    // 0x0318(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterPrestigeButton");
		return ptr;
	}



	void SetCharacterPrestigeData(bool canPrestige, int prestigeLevel, DBDSharedTypes_EPlayerRole role);
	void OnPrestigeButtonClicked();
};

// Class DeadByDaylight.UMGCharacterPrice
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGCharacterPrice : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PriceTextBlock;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fcolor                                      AffordableColor;                                           // 0x0308(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct Fcolor                                      UnaffordableColor;                                         // 0x030C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterPrice");
		return ptr;
	}



	void SetCurrencyData(const struct FPurchaseCurrencyData& currencyData);
};

// Class DeadByDaylight.UMGCharacterScrollingInfoWidget
// 0x0110 (FullSize[0x0410] - InheritedSize[0x0300])
class UUMGCharacterScrollingInfoWidget : public UMobileBaseUserWidget
{
public:
	class UUMGTeachablePerkButton*                     FirstTeachablePerk;                                        // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTeachablePerkButton*                     SecondTeachablePerk;                                       // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTeachablePerkButton*                     ThirdTeachablePerk;                                        // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                KillerInfoPanel;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGInventoryItemButton*                     KillerPower;                                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _killerPowerName;                                          // 0x0328(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killerSpeedText;                                          // 0x0340(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killerTerrorRadiusText;                                   // 0x0358(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killerHeightText;                                         // 0x0370(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _characterBioText;                                         // 0x0388(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _perksTitle;                                               // 0x03A0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _teachablesTitle;                                          // 0x03B8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _powerTitle;                                               // 0x03D0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _attributesTitle;                                          // 0x03E8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EKPW[0x10];                                    // 0x0400(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterScrollingInfoWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterSelectionWidget
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGCharacterSelectionWidget : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnCharacterSelected;                                       // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterRoleButtonClicked;                              // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterInfoButtonClicked;                              // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UUMGCharacterPageScrollWidget*               CharacterPageScrollWidget;                                 // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterSelectSubmenu*                  CharacterSelectSubMenu;                                    // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterInfoWidget*                     CharacterInfoWidget;                                       // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             CharacterSwitcher;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isKiller;                                                 // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_76TE[0x7];                                     // 0x0351(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterSelectionWidget");
		return ptr;
	}



	void SwitchPanel();
	void BroadcastSelectedCharacter(int characterIndex);
	void BroadcastRoleButtonClicked();
};

// Class DeadByDaylight.UMGCharacterSelectSubmenu
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGCharacterSelectSubmenu : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_7T0G[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterSelectSubmenu");
		return ptr;
	}



	void SetInInfoPanelMode(bool isInInfoPanel);
	void SetCurrentRole(bool isKiller);
	void BroadcastRoleButtonClicked();
	void BroadcastInfoButtonClicked();
};

// Class DeadByDaylight.UMGCharacterSlideShowWidget
// 0x0070 (FullSize[0x0370] - InheritedSize[0x0300])
class UUMGCharacterSlideShowWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      _perkCategoriesIcons[0x50];                                // 0x0300(0x0050) UNKNOWN PROPERTY: MapProperty
	float                                              SecondsBeforeNextSlide;                                    // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8L6S[0x1C];                                    // 0x0354(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCharacterSlideShowWidget");
		return ptr;
	}



	void WaitAndFadeOut();
	void SwitchCharacterSlide();
	void FadeOut();
	void FadeIn();
	void DisplayCharacterSlide(const struct FCharacterSlideData& characterSlide);
};

// Class DeadByDaylight.UMGChargeableInteractionWidget
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGChargeableInteractionWidget : public UMobileBaseUserWidget
{
public:
	class Uimage*                                      ItemIcon;                                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               InteractionIconVisibility;                                 // 0x0308(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               ItemChargeVisibility;                                      // 0x0309(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               InteractionHudVisibility;                                  // 0x030A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AD71[0x1D];                                    // 0x030B(0x001D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGChargeableInteractionWidget");
		return ptr;
	}



	void SetSecondaryMessage(const struct FString& secondMessage);
	void SetProgressbarValue(float Value);
	void SetProgressBarColor(DBDSharedTypes_EBarColor barColor);
	void SetProficiencyData(int index, const struct FStatusEffectSlotData& proficiencyData);
	void SetOpacity(float opacity);
	void SetMessage(const struct FString& message);
	void SetItemChargeValue(float Value);
	void SetItemChargeColor(DBDSharedTypes_EBarColor barColor);
	void ClearProficienciesData();
};

// Class DeadByDaylight.UMGCommandDebugButton
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGCommandDebugButton : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  CommandLabel;                                              // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Ubutton*                                     CommandButton;                                             // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     CommandName;                                               // 0x0310(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCommandDebugButton");
		return ptr;
	}



	void TriggerCommand();
};

// Class DeadByDaylight.UMGCustomizationCategoriesBar
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGCustomizationCategoriesBar : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_O7VT[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCustomizationCategoriesBar");
		return ptr;
	}



	void SetSelectedCategory(DeadByDaylight_ECustomizationCategory category);
	void SetRole(bool isKiller);
	void BroadcastCustomizationCategoryButtonPressed(DeadByDaylight_ECustomizationCategory categoryIndex);
};

// Class DeadByDaylight.UMGCustomizationItemPriceWidget
// 0x0100 (FullSize[0x0400] - InheritedSize[0x0300])
class UUMGCustomizationItemPriceWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  CurrencyValue;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DiscountPercentageContainer;                               // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DiscountPercentage;                                        // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      CurrencyIcon;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      CurrencyTextures[0x50];                                    // 0x0320(0x0050) UNKNOWN PROPERTY: MapProperty
	struct FSlateColor                                 AffordableCurrencyTextColor;                               // 0x0370(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 AffordableSpecialCurrencyTextColor;                        // 0x0398(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 NonAffordableCurrencyTextColor;                            // 0x03C0(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FString                                     _itemId;                                                   // 0x03E8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_ECurrencyType                       _currencyType;                                             // 0x03F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _hasDiscountPercentage;                                    // 0x03F9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4YJ8[0x6];                                     // 0x03FA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCustomizationItemPriceWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCustomizationItemBuyButton
// 0x0088 (FullSize[0x0488] - InheritedSize[0x0400])
class UUMGCustomizationItemBuyButton : public UUMGCustomizationItemPriceWidget
{
public:
	unsigned char                                      UnknownData_A26A[0x10];                                    // 0x0400(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uimage*                                      CurrencyColorStripe;                                       // 0x0410(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DeadByDaylight_ECurrencyType, struct Fcolor>  _currencyStripeColors;                                     // 0x0418(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                                _disabledOpacity;                                          // 0x0468(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _enabledOpacity;                                           // 0x0478(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCustomizationItemBuyButton");
		return ptr;
	}



	void BroadcastUnlockWithCurrency();
};

// Class DeadByDaylight.UMGCustomizationItemWidget
// 0x00A0 (FullSize[0x03A0] - InheritedSize[0x0300])
class UUMGCustomizationItemWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_LS18[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Uimage*                                      RarityBackground;                                          // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PaintOverlay;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      icon;                                                      // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                NewIndicator;                                              // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                OutfitIndicator;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                PricesContainer;                                           // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemSelectedBorder;                                        // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                EquippedContainer;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _customizationItemPriceWidgetClass[0x30];                  // 0x0350(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UUMGCustomizationItemPriceWidget*>    _priceWidgets;                                             // 0x0380(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _itemIndex;                                                // 0x0390(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _itemId;                                                   // 0x0394(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCustomizationItemWidget");
		return ptr;
	}



	void BroadcastAvailableItemSelected();
};

// Class DeadByDaylight.UMGCustomizationPageScrollWidget
// 0x0068 (FullSize[0x0430] - InheritedSize[0x03C8])
class UUMGCustomizationPageScrollWidget : public UUMGGridPageScrollWidget
{
public:
	unsigned char                                      UnknownData_22YK[0x10];                                    // 0x03C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _customizationItemWidgetClass[0x30];                       // 0x03C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FStoreItemSlotData>                  _availableItemsData;                                       // 0x0408(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGCustomizationItemWidget*>         _itemWidgets;                                              // 0x0418(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5IK3[0x8];                                     // 0x0428(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCustomizationPageScrollWidget");
		return ptr;
	}



	void OnAvailableItemSelectedCallback(int ItemIndex);
};

// Class DeadByDaylight.UMGCustomizationScreenWidget
// 0x00B0 (FullSize[0x03B0] - InheritedSize[0x0300])
class UUMGCustomizationScreenWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_SEYV[0x30];                                    // 0x0300(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGCustomizationPageScrollWidget*           PageScrollWidget;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationCategoriesBar*              CustomizationCategoriesBar;                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CategoryLabel;                                             // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CurrentlyEquippedLabel;                                    // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AvailableInOutfitsContainer;                               // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                UnlockItemContainer;                                       // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationItemWidget*                 OutfitItem;                                                // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                PriceContainer;                                            // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PriceButtonWidgetClass[0x30];                              // 0x0370(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_EH58[0x4];                                     // 0x03A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _currentSelectedItem;                                      // 0x03A4(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGCustomizationScreenWidget");
		return ptr;
	}



	void SetCategoryLabel(DeadByDaylight_ECustomizationCategory category);
	void BroadcastUnlockWithCurrencyEvent(int currencyId, const struct FString& combinedItem);
	void BroadcastCustomizationCategoryButtonPressed(int categoryIndex);
	void BroadcastAvailableItemSelectedEvent(int ItemIndex, const struct FStoreItemSlotData& selectedItem, const struct FStoreItemSlotData& ParentItem);
};

// Class DeadByDaylight.UMGDownloadProgressionWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGDownloadProgressionWidget : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                ProgressBar;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DownloadPercentage;                                        // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DownloadDescription;                                       // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGDownloadProgressionWidget");
		return ptr;
	}



	void UpdateProgression(const struct FdownloadProgression& downloadProgression);
};

// Class DeadByDaylight.UMGEndGameCollapseProgressWidget
// 0x0040 (FullSize[0x0340] - InheritedSize[0x0300])
class UUMGEndGameCollapseProgressWidget : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                ProgressBar;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                MarkerLeftCanvas;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                MarkerRightCanvas;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBoxSlot*                          _markerLeftBox;                                            // 0x0318(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBoxSlot*                          _markerRightBox;                                           // 0x0320(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HE5R[0x18];                                    // 0x0328(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGEndGameCollapseProgressWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGEndGameCollapseWidget
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UUMGEndGameCollapseWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_GZ43[0x8];                                     // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _progressBarInterpSpeed;                                   // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _slowMode;                                                 // 0x030C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0SPY[0x3];                                     // 0x030D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                NormalBar;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SlowBar;                                                   // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGEndGameCollapseProgressWidget*           NormalProgressBar;                                         // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGEndGameCollapseProgressWidget*           SlowProgressBar;                                           // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DDGX[0x48];                                    // 0x0330(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGEndGameCollapseProgressWidget*           _topBar;                                                   // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGEndGameCollapseWidget");
		return ptr;
	}



	void PlayToZeroAnimation();
};

// Class DeadByDaylight.UMGFogWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGFogWidget : public UMobileBaseUserWidget
{
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGFogWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGGameplayAlertWidget
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class UUMGGameplayAlertWidget : public UUMGBaseAlertWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGGameplayAlertWidget");
		return ptr;
	}



	void UpdateWidget(const struct FStatusEffectSlotData& StatusEffectData, const struct FInventorySlotData& originatorData);
};

// Class DeadByDaylight.UMGGhostfaceSpecific
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGGhostfaceSpecific : public UMobileBaseUserWidget
{
public:
	class Uimage*                                      LeftLeanImage;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      RightLeanImage;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGGhostfaceSpecific");
		return ptr;
	}



};

// Class DeadByDaylight.UMGHtmlRichText
// 0x0000 (FullSize[0x06C8] - InheritedSize[0x06C8])
class UUMGHtmlRichText : public URichTextBlock
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGHtmlRichText");
		return ptr;
	}



	void SetHtmlText(const struct FString& InText);
};

// Class DeadByDaylight.UMGHtmlTextDecorator
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UUMGHtmlTextDecorator : public URichTextBlockDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGHtmlTextDecorator");
		return ptr;
	}



};

// Class DeadByDaylight.UMGInboxMessageEntryWidget
// 0x0068 (FullSize[0x02C8] - InheritedSize[0x0260])
class UUMGInboxMessageEntryWidget : public UUserWidget
{
public:
	struct FInboxMessageUIData                         _messageData;                                              // 0x0260(0x0060) (BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                               _isCurrentSelection;                                       // 0x02C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UA1P[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGInboxMessageEntryWidget");
		return ptr;
	}



	void UpdateMessageData(const struct FInboxMessageUIData& messageData);
	void SetMessageData(const struct FInboxMessageUIData& messageData);
	struct FInboxMessageElapsedTime GetElapsedTime();
};

// Class DeadByDaylight.UMGInboxScreen
// 0x00A8 (FullSize[0x03A8] - InheritedSize[0x0300])
class UUMGInboxScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_AIO9[0xA8];                                    // 0x0300(0x00A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGInboxScreen");
		return ptr;
	}



	void UpdateMessagesCount(DeadByDaylight_EInboxMessageUIType messageType, int unclaimedCount, int unreadCount, int totalCount);
	void UpdateMessage(const struct FInboxMessageUIData& message);
	void SetSocialMessages(TArray<struct FInboxMessageUIData> messages, int unreadCount, int totalCount);
	void SetRewardsMessages(TArray<struct FInboxMessageUIData> messages, int unclaimedCount, int unreadCount, int totalCount);
	void SetNewsMessages(TArray<struct FInboxMessageUIData> messages, int unreadCount, int totalCount);
	bool RemoveMessageFromPanel(class UPanelWidget* containingPanel, const struct FString& messageId, bool hasSeparator);
	void RemoveMessage(const struct FString& messageId);
	void ReadMessageEvent(const struct FString& messageId);
	void ReadAllMessagesEvent(DeadByDaylight_EInboxMessageUIType messageType);
	int FindWidgetIndexByMessageId(class UPanelWidget* containingPanel, const struct FString& messageId);
	class UUMGInboxMessageEntryWidget* FindMessageWidgetById(class UPanelWidget* containingPanel, const struct FString& messageId);
	void CleanMessageEvent(const struct FString& messageId);
	void CleanAllMessagesEvent(DeadByDaylight_EInboxMessageUIType messageType);
	void ClaimMessageEvent(const struct FString& messageId);
	void ClaimAllMessagesEvent(DeadByDaylight_EInboxMessageUIType messageType);
	void ButtonClickEvent(DeadByDaylight_EInboxScreenButton buttonid);
};

// Class DeadByDaylight.UMGInventoryItemButton
// 0x0000 (FullSize[0x04D0] - InheritedSize[0x04D0])
class UUMGInventoryItemButton : public UUMGLoadoutItemButton
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGInventoryItemButton");
		return ptr;
	}



	void UpdateItemButtonProgressBar(class Ucollectable* Item, class UProgressBar* itemProgressBar);
	void UpdateItemButton(class Ucollectable* Item);
	void UpdateAddonButton(class UItemAddon* Addon);
};

// Class DeadByDaylight.UmgPlayerHud
// 0x00F8 (FullSize[0x0358] - InheritedSize[0x0260])
class UUmgPlayerHud : public UUserWidget
{
public:
	class UAtlantaSkillCheckWidget*                    SkillCheckWidget;                                          // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGAlertsWidget*                            AtlantaAlertsWidget;                                       // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGObjectivesWidget*                        AtlantaObjectivesWidget;                                   // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPerkHudWidget*                              AtlantaPerksWidget;                                        // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGStatusEffectsWidget*                     AtlantaStatusEffectsWidget;                                // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGChargeableInteractionWidget*             AtlantaInteractionWidget;                                  // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaPromptWidget*                        AtlantaPromptWidget;                                       // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaPromptWidget*                        AtlantaTutorialPromptWidget;                               // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPlayersStatusWidget*                     AtlantaPlayersStatusWidget;                                // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                                AtlantaObjectivesContainer;                                // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPerkSoundHudWidget*                         PerkSoundHudWidget;                                        // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMobileBaseUserWidget*                       CenterInteractionButton;                                   // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGEndGameCollapseWidget*                   EndGameCollapseWidget;                                     // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPerkClickedEvent;                                        // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialLeaveClickedEvent;                               // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialNextClickedEvent;                                // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSettingsClickedEvent;                                    // 0x02F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDBDPlayerController*                        LocalController;                                           // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAtlantaHudDirectionalStick*                 AtlantaDirectionalStick;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UdbdPlayer*                                  _localPlayer;                                              // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FRJ0[0x8];                                     // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  _unlockedVirtualJoystickThumbImage;                        // 0x0328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _lockedVirtualJoystickThumbImage;                          // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1AX5[0x20];                                    // 0x0338(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UmgPlayerHud");
		return ptr;
	}



	void TutorialTallyNextSelected();
	void TutorialTallyLeaveSelected();
	void SetVirtualJoystickThumbImage(class UDBDPlayerController* controller, bool Locked);
	void OnSettingsButtonPressed();
	void OnPerkClicked(const struct FName& perkID);
	void OnInitializeHUD();
	bool IsInteractionAvailable(DeadByDaylight_EInputInteractionType InteractionType);
	bool IsInitialized();
	void InitializeHUD();
	void GetInteractionIconByType(DeadByDaylight_EInputInteractionType InteractionInputType);
	bool CanInitialize();
};

// Class DeadByDaylight.UmgKillerHud
// 0x0040 (FullSize[0x0398] - InheritedSize[0x0358])
class UUmgKillerHud : public UUmgPlayerHud
{
public:
	class UPowerButton*                                PowerButton;                                               // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionButton*                               SecondAbilityButton;                                       // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionButton*                               AttackButton;                                              // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGGhostfaceSpecific*                       GhostfaceSpecific;                                         // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UslasherPlayer*                              Killer;                                                    // 0x0378(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZGL8[0x18];                                    // 0x0380(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UmgKillerHud");
		return ptr;
	}



	void UpdatePowerButtonTier(int previousTier, int currentTier, bool isFirstTime);
	bool ShouldShowPowerHighlight();
	void OnSecondAbilityButtonPressed();
	void OnPowerButtonReleased();
	void OnPowerButtonPressed();
	void OnCancelButtonReleased();
	void OnCancelButtonPressed();
	void OnAttackButtonReleased();
	void OnAttackButtonPressed();
	bool IsPowerButtonAvailable();
	bool IsCancelPowerButtonAvailable();
	bool IsAttackButtonVisible();
	bool IsAttackButtonAvailable();
	class UinteractionDefinition* GetCurrentPowerUseInteraction();
};

// Class DeadByDaylight.UMGLevelBannerWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGLevelBannerWidget : public UMobileBaseUserWidget
{
public:
	class Ubutton*                                     TooltipButton;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TUNK[0x10];                                    // 0x0308(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLevelBannerWidget");
		return ptr;
	}



	void SetProgressValue(float progress);
	void SetInfo(int playerLevel, int playerPrestige, int currentExperience, int nextLevelExperience);
	void SetExperienceVisibility(bool isExperienceVisible, bool isBig);
	void OnTooltipButtonLongPressEvent();
};

// Class DeadByDaylight.UMGLoadingScreenWidget
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGLoadingScreenWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  description;                                               // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      HintIcon;                                                  // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                                LoadingBar;                                                // 0x0310(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                KillerPanel;                                               // 0x0318(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                SurvivorPanel;                                             // 0x0320(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  title;                                                     // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLoadingScreenWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGLoadoutBaseWidget
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGLoadoutBaseWidget : public UMobileBaseUserWidget
{
public:
	class UUMGLoadoutItemButton*                       ItemOrPowerButton;                                         // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       AddonFirstButton;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       AddonSecondButton;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       OfferingButton;                                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkFirstButton;                                           // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkSecondButton;                                          // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkThirdButton;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkFourthButton;                                          // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGLoadoutItemButton*>               LoadoutItemButtons;                                        // 0x0340(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               UsingMatchRules;                                           // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               PerkSlotsLockedByAdmin;                                    // 0x0351(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               isSlasher;                                                 // 0x0352(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IOII[0x5];                                     // 0x0353(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLoadoutBaseWidget");
		return ptr;
	}



	void SetLoadoutData(TArray<struct FInventorySlotData> loadoutData, bool UsingMatchRules, bool PerkSlotsLockedByAdmin, DeadByDaylight_ELoadoutSlot loadoutSlot, bool isSlasher);
	void SetIsSelectedLoadoutItemButton(DeadByDaylight_ELoadoutSlot loadoutSlot);
	void SetDividerImageColor(const struct FLinearColor& color);
};

// Class DeadByDaylight.UMGLoadoutFilterButton
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGLoadoutFilterButton : public UMobileBaseUserWidget
{
public:
	class Ubutton*                                     ActionButton;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutFilterButtonClicked;                              // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U8FG[0x10];                                    // 0x0318(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLoadoutFilterButton");
		return ptr;
	}



	void SetIsSelected(bool isSelected);
	void SetIcon();
	void OnActionButtonClick();
	void InitFilterButton(const struct FName& filterName);
};

// Class DeadByDaylight.UMGLoadoutFilterWidget
// 0x0078 (FullSize[0x0378] - InheritedSize[0x0300])
class UUMGLoadoutFilterWidget : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnLoadoutFilterClicked;                                    // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      AtlantaLoadoutFilterButtonClass[0x30];                     // 0x0310(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              FilterContainerBox;                                        // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               Filters;                                                   // 0x0348(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGLoadoutFilterButton*>             FilterButtons;                                             // 0x0358(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutFilterButton*                     SelectedFilterButton;                                      // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IEBL[0x8];                                     // 0x0370(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLoadoutFilterWidget");
		return ptr;
	}



	void OnFilterButtonClicked(const struct FName& filterName);
	void InitFilterWidget();
	void ClearSelectedFilter();
};

// Class DeadByDaylight.UMGLoadoutPageScrollWidget
// 0x0110 (FullSize[0x04D0] - InheritedSize[0x03C0])
class UUMGLoadoutPageScrollWidget : public UUMGPageScrollWidget
{
public:
	bool                                               ShouldResizeWidget;                                        // 0x03C0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8AJK[0x7];                                     // 0x03C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _itemWidgetClass[0x30];                                    // 0x03C1(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	DeadByDaylight_EInventoryGridFormat                _gridFormat;                                               // 0x03F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F247[0x7];                                     // 0x03F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FInventorySlotData>                  _inventoryData;                                            // 0x0400(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        _inventorySelectedItemIndexes;                             // 0x0410(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     _subtitle;                                                 // 0x0420(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NYLE[0xA0];                                    // 0x0430(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLoadoutPageScrollWidget");
		return ptr;
	}



	void SetItemWidgetClass();
	void SetItemIsSelected(int index, bool isSelected);
	void SetInventoryData(DeadByDaylight_EInventoryGridFormat gridFormat, TArray<struct FInventorySlotData> inventoryData, TArray<int> selectedItemsIndexes, const struct FString& trackingItemName, const struct FString& subtitle);
	void HandleItemClicked(const struct FName& itemId);
};

// Class DeadByDaylight.UMGLoadoutWidget
// 0x0068 (FullSize[0x03C0] - InheritedSize[0x0358])
class UUMGLoadoutWidget : public UUMGLoadoutBaseWidget
{
public:
	struct FText                                       InventoryItemTypeText;                                     // 0x0358(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       InventoryFilterText;                                       // 0x0370(0x0018) (BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	class UUMGLoadoutPageScrollWidget*                 PageScrollWidget;                                          // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       LoadoutTitleText;                                          // 0x0390(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       InventoryPanelTitleText;                                   // 0x03A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLoadoutWidget");
		return ptr;
	}



	void SetInventoryData(DeadByDaylight_EInventoryGridFormat gridFormat, TArray<struct FInventorySlotData> inventoryData, TArray<int> selectedItemsIndexes, const struct FString& trackingItemName, const struct FString& subtitle);
};

// Class DeadByDaylight.UMGLobbyJoinedWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UUMGLobbyJoinedWidget : public UMobileBaseUserWidget
{
public:
	struct FText                                       TextLeaveLobby;                                            // 0x0300(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TextPlayerNotReadyYet;                                     // 0x0318(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TextWaitingPlayers;                                        // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TextToBeReady;                                             // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              CommandButtonsContainer;                                   // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLobbyJoinedWidget");
		return ptr;
	}



	void UpdatePlayersLatency(TMap<int, float> playersLatency, bool isHost);
	void SetWidgetsVisibility(bool widgetsVisibilty);
	void SetReadyStatus(TArray<struct FPlayerReadyStatusData> playersReadyStatusData);
	void SetLocalPlayerInfo(const struct FplayerInfoData& playerInfoData);
	void SetLobbyTimer(int seconds);
	void SetLoadoutDataForLocalPlayer(TArray<struct FInventorySlotData> loadoutData, bool UsingMatchRules, bool PerkSlotsLockedByAdmin, bool isSlasher);
	void RemovePlayersInfo(int playerId);
	void AddPlayerInfo(int playerId, const struct FplayerInfoData& playerInfoData, bool isPlayerReady, TArray<struct FInventorySlotData> loadoutData);
};

// Class DeadByDaylight.UMGLobbyOfferingItemWidget
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGLobbyOfferingItemWidget : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLobbyOfferingItemWidget");
		return ptr;
	}



	void SetOfferingData(const struct FInventorySlotData& data);
};

// Class DeadByDaylight.UMGLobbyOfferingWidget
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGLobbyOfferingWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                CanvasOffering;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LobbyOfferingItemClass[0x30];                              // 0x0308(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_XAJ5[0x28];                                    // 0x0338(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLobbyOfferingWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGLobbyScreen
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UUMGLobbyScreen : public UMobileBaseUserWidget
{
public:
	class UUMGLobbySearchingWidget*                    LobbySearchingWidget;                                      // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnJoinedLobbyLeaved;                                       // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSearchingLobbyCancelled;                                 // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                             LobbySwitcher;                                             // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLobbyJoinedWidget*                       LobbyJoinedWidget;                                         // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLobbyOfferingWidget*                     OfferingWidget;                                            // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFogWidget*                               FogWidget;                                                 // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLobbyScreen");
		return ptr;
	}



	void HandleSearchingLobbyCancel();
	void HandleJoinedLobbyLeave();
};

// Class DeadByDaylight.UMGLobbySearchingWidget
// 0x0098 (FullSize[0x03F0] - InheritedSize[0x0358])
class UUMGLobbySearchingWidget : public UUMGLoadoutBaseWidget
{
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                   // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       ItemOrPowerText;                                           // 0x0360(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       AddonText;                                                 // 0x0378(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       OfferingText;                                              // 0x0390(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       PerksText;                                                 // 0x03A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       TextWaitingForPlayers;                                     // 0x03C0(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       TextEstimatedTimeTitle;                                    // 0x03D8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGLobbySearchingWidget");
		return ptr;
	}



	void SetWaitingTimer(int seconds);
	void SetEstimatedWaitingTimer(int seconds);
};

// Class DeadByDaylight.UMGObjectivesWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGObjectivesWidget : public UMobileBaseUserWidget
{
public:
	UMG_ESlateVisibility                               PanelEscapeRequirementsVisibility;                         // 0x0300(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PanelGeneratorVisibility;                                  // 0x0301(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PanelFindExitVisibility;                                   // 0x0302(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PanelHatchVisibility;                                      // 0x0303(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EWVC[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGObjectivesWidget");
		return ptr;
	}



	void UpdateTextMessage(const struct FText& textFind, const struct FText& textExit, const struct FText& textOr);
	void UpdateGeneratorCount(int Count);
};

// Class DeadByDaylight.UMGPartyPlayerSlotWidget
// 0x0050 (FullSize[0x0480] - InheritedSize[0x0430])
class UUMGPartyPlayerSlotWidget : public UUMGBaseButtonWidget
{
public:
	class UTextBlock*                                  playerName;                                                // 0x0430(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CharacterName;                                             // 0x0438(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      FriendIcon;                                                // 0x0440(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TZ9K[0x38];                                    // 0x0448(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGPartyPlayerSlotWidget");
		return ptr;
	}



	void SetVisualsFromState(DeadByDaylight_EPartyPlayerSlotWidgetState widgetState);
};

// Class DeadByDaylight.UMGPartySlotsWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGPartySlotsWidget : public UMobileBaseUserWidget
{
public:
	class UPanelWidget*                                PartyPlayerSlotsContainer;                                 // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGPartyPlayerSlotWidget*>           _partySlots;                                               // 0x0308(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGPartySlotsWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPerkSelectionPopup
// 0x0088 (FullSize[0x0470] - InheritedSize[0x03E8])
class UUMGPerkSelectionPopup : public UUMGGenericPopup
{
public:
	class UPerkSelectionSlotWidget*                    LargePerkSelectionSlot;                                    // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkSelectionSlotWidget*                    FirstSmallSlot;                                            // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkSelectionSlotWidget*                    SecondSmallSlot;                                           // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PictureCharacterBackground;                                // 0x0400(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SelectablePerksContainer;                                  // 0x0408(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UMGPerkSelectionSlotWidget[0x30];                          // 0x0410(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UVerticalBox*                                SmallSlotContainer;                                        // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              RewardSubTitle;                                            // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              PerkSelectionTitle;                                        // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPerkSelectionSlotWidget*>            _selectablePerk;                                           // 0x0458(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LPMI[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGPerkSelectionPopup");
		return ptr;
	}



	void OnSlotSelected(int index);
};

// Class DeadByDaylight.UMGPlayersStatusWidget
// 0x00E0 (FullSize[0x03E0] - InheritedSize[0x0300])
class UUMGPlayersStatusWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      PlayerStatusIconClass[0x30];                               // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              playersContainer;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int, class UUMGPlayerStatusIcon*>             playerIcons;                                               // 0x0338(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UUMGPlayerStatusIcon*>  playerIconsByName;                                         // 0x0388(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NAJR[0x8];                                     // 0x03D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGPlayersStatusWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPlayerStatusIcon
// 0x0100 (FullSize[0x0400] - InheritedSize[0x0300])
class UUMGPlayerStatusIcon : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                HealthBar;                                                 // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProgressBar*                                TimerBar;                                                  // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HealthBarContainer;                                        // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                TimerBarContainer;                                         // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  playerName;                                                // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      StatusIconBloodTop;                                        // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      StatusIconBloodBottom;                                     // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      StatusIcon;                                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                ObsessionCanvas;                                           // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                BrokenIndicatorCanvas;                                     // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                AfflictionCanvas;                                          // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                AfflictionIntroCanvas;                                     // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SleepCanvas;                                               // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                ReverseBearTrapCanvas;                                     // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      ReverseBearTrapArrow;                                      // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _hookedTexture;                                            // 0x0378(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _hookedBloodTexture;                                       // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _trappedTexture;                                           // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _trappedBloodTexture;                                      // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _deadTexture;                                              // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _deadBloodTexture;                                         // 0x03A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _escapedTexture;                                           // 0x03A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _injuredTexture;                                           // 0x03B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _injuredBloodTexture;                                      // 0x03B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _crawlingTexture;                                          // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _crawlingBloodTexture;                                     // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _sacrificedTexture;                                        // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _sacrificedBloodTexture;                                   // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _disconnectedTexture;                                      // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _defaultTexture;                                           // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                _maxNumberCharacterInName;                                 // 0x03F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0MIQ[0xC];                                     // 0x03F4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGPlayerStatusIcon");
		return ptr;
	}



	void SetReverseTrapProgressionTimer(float seconds);
};

// Class DeadByDaylight.UMGPopupButton
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGPopupButton : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  Label;                                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Ubutton*                                     UmgButton;                                                 // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ATAX[0x14];                                    // 0x0310(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DisabledOpacity;                                           // 0x0324(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnabledOpacity;                                            // 0x0328(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9P20[0x4];                                     // 0x032C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGPopupButton");
		return ptr;
	}



	void OnButtonClick();
};

// Class DeadByDaylight.UMGRankBanner
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGRankBanner : public UMobileBaseUserWidget
{
public:
	class Uimage*                                      Frame;                                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Label;                                                     // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGRankBanner");
		return ptr;
	}



	void SetData(int rank, DBDSharedTypes_EPlayerRole playerRole);
};

// Class DeadByDaylight.UMGReceivedFriendRequestListElement
// 0x0008 (FullSize[0x03C8] - InheritedSize[0x03C0])
class UUMGReceivedFriendRequestListElement : public UUMGBaseFriendListElement
{
public:
	class URichTextBlock*                              FriendRequestStatusRichText;                               // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGReceivedFriendRequestListElement");
		return ptr;
	}



};

// Class DeadByDaylight.UMGRoleSelectionScreen
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGRoleSelectionScreen : public UMobileBaseUserWidget
{
public:
	int                                                _newInboxMessageCount;                                     // 0x0300(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DFXC[0x1C];                                    // 0x0304(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGRoleSelectionScreen");
		return ptr;
	}



	void ButtonClickEvent(DeadByDaylight_ERoleSelectionScreenButton buttonid);
};

// Class DeadByDaylight.UMGScoreAlertWidget
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class UUMGScoreAlertWidget : public UUMGBaseAlertWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGScoreAlertWidget");
		return ptr;
	}



	void UpdateWidget(DBDSharedTypes_EDBDScoreCategory ScoreType, const struct FString& title, int scoreValue, float progress, const struct FText& defaultScoreText);
};

// Class DeadByDaylight.UMGScrollListPageButton
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGScrollListPageButton : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnClicked;                                                 // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                PageIndex;                                                 // 0x0310(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96GM[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Ubutton*                                     ActionButton;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      SelectedImage;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGScrollListPageButton");
		return ptr;
	}



	void SetIsSelected(bool selected);
	void HandleActionButtonClick();
};

// Class DeadByDaylight.UMGSettingContextWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGSettingContextWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_YOC7[0x18];                                    // 0x0300(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSettingContextWidget");
		return ptr;
	}



	void SetContextTitle(const struct FText& contextTitle);
	void HandleContextButtonClickEvent(int buttonData);
};

// Class DeadByDaylight.UMGSettingAboutContextWidget
// 0x0010 (FullSize[0x0328] - InheritedSize[0x0318])
class UUMGSettingAboutContextWidget : public UUMGSettingContextWidget
{
public:
	class UUMGSettingContextButton*                    EULAButton;                                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSettingContextButton*                    CreditsButton;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSettingAboutContextWidget");
		return ptr;
	}



	void SetVersionNumber(const struct FString& versionNumber);
};

// Class DeadByDaylight.UMGSettingContextButton
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGSettingContextButton : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnSettingContextButtonClickEvent;                          // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XUYX[0x8];                                     // 0x0310(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSettingContextButton");
		return ptr;
	}



	void SetIsSelected(bool isSelected);
	void SetContextButtonData(int buttonid);
	void SetButtonText(const struct FString& buttonText);
	void HandleSettingContextButtonClick();
	int GetContextButtonData();
};

// Class DeadByDaylight.UMGSettingControlsContextWidget
// 0x0090 (FullSize[0x03A8] - InheritedSize[0x0318])
class UUMGSettingControlsContextWidget : public UUMGSettingContextWidget
{
public:
	unsigned char                                      UnknownData_F9TM[0x60];                                    // 0x0318(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               AimAssist;                                                 // 0x0378(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4OO2[0x3];                                     // 0x0379(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                HandSide;                                                  // 0x037C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                InteractionButton;                                         // 0x0380(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               InvertY;                                                   // 0x0384(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DE72[0x3];                                     // 0x0385(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KillerCameraSensitivity;                                   // 0x0388(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SurvivorCameraSensitivity;                                 // 0x038C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IEIH[0x18];                                    // 0x0390(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSettingControlsContextWidget");
		return ptr;
	}



	void HandleSurvivorCameraSensitivityChanged(float sliderValue);
	void HandleKillerCameraSensitivityChanged(float sliderValue);
	void HandleInvertYToggleClick(bool toggleValue);
	void HandleInteractionButtonToggleClick(int index);
	void HandleHandSideToggleClick(int index);
	void HandleAimAssistToggleClick(bool toggleValue);
};

// Class DeadByDaylight.UMGSettingLanguageContextWidget
// 0x0048 (FullSize[0x0360] - InheritedSize[0x0318])
class UUMGSettingLanguageContextWidget : public UUMGSettingContextWidget
{
public:
	class UScrollBox*                                  LanguageScrollBox;                                         // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _languageButtonClass[0x30];                                // 0x0320(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	int                                                _languageListRowGap;                                       // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NC1E[0x4];                                     // 0x0354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGSettingContextButton*                    _selectedLanguageButton;                                   // 0x0358(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSettingLanguageContextWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGSettingMenuButton
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGSettingMenuButton : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_Z9K6[0x18];                                    // 0x0300(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSettingMenuButton");
		return ptr;
	}



	void SetTabButtonText(const struct FText& buttonText);
	void SetIsSelected(bool isSelected);
	void HandleSettingTabButtonClick();
};

// Class DeadByDaylight.UMGSplashScreen
// 0x0070 (FullSize[0x0370] - InheritedSize[0x0300])
class UUMGSplashScreen : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnSaveGamePopupCompleteEvent;                              // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScreenTouched;                                           // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SavePopup;                                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  GameVersion;                                               // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  LoadingState;                                              // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  PressKey;                                                  // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Ubutton*                                     TapButton;                                                 // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  SaveGameTitle;                                             // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  SaveGameDescription;                                       // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGDownloadProgressionWidget*               downloadProgression;                                       // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGCharacterSlideShowWidget*                CharacterSlideShow;                                        // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JKN5[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSplashScreen");
		return ptr;
	}



	void OnTapButtonClicked();
	void OnSaveGamePopupComplete();
};

// Class DeadByDaylight.UMGStatusEffectIcon
// 0x0048 (FullSize[0x0518] - InheritedSize[0x04D0])
class UUMGStatusEffectIcon : public UUMGLoadoutItemButton
{
public:
	struct FStatusEffectSlotData                       StatusEffectData;                                          // 0x04D0(0x0048) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGStatusEffectIcon");
		return ptr;
	}



	void UpdateWidget();
	void UpdatePercentageFill(float percentage);
};

// Class DeadByDaylight.UMGStatusEffectsWidget
// 0x0090 (FullSize[0x0390] - InheritedSize[0x0300])
class UUMGStatusEffectsWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      AtlantaStatusEffectIconClass[0x30];                        // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              StatusEffectsBox;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, class UUMGStatusEffectIcon*>    _statusEffectsMap;                                         // 0x0338(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3QZI[0x8];                                     // 0x0388(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGStatusEffectsWidget");
		return ptr;
	}



	void RemoveExistingStatusEffect(const struct FString& statusEffectID);
};

// Class DeadByDaylight.UMGStoreAuricCellButton
// 0x0078 (FullSize[0x0378] - InheritedSize[0x0300])
class UUMGStoreAuricCellButton : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_F7AS[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurrencyPurchaseData                       CurrencyPurchaseData;                                      // 0x0310(0x0058) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class UTextBlock*                                  AuricCellTitleText;                                        // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X5O0[0x8];                                     // 0x0370(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGStoreAuricCellButton");
		return ptr;
	}



	void UpdateWidget();
	void HandleButtonClicked();
};

// Class DeadByDaylight.UmgSurvivorHud
// 0x0080 (FullSize[0x03D8] - InheritedSize[0x0358])
class UUmgSurvivorHud : public UUmgPlayerHud
{
public:
	unsigned char                                      UnknownData_G0EV[0x8];                                     // 0x0358(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UActionButton*                               CrouchButton;                                              // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UcamperPlayer*                               Survivor;                                                  // 0x0368(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2AIG[0x8];                                     // 0x0370(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  _unpressedLookBackJoystickThumbImage;                      // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _pressedLookBackJoystickThumbImage;                        // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZXIL[0x20];                                    // 0x0388(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  _unpressedLookBackJoystickBackgroundImage;                 // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _pressedLookBackJoystickBackgroundImage;                   // 0x03B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CGS2[0x20];                                    // 0x03B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UmgSurvivorHud");
		return ptr;
	}



	void SetNonRestrictedControlsVisibility(bool Visible);
	void SetLookBackJoystickPosition(const struct FVector2D& position);
	void SetLookBackJoystickImage(bool pressed);
	void RespondToVirtualJoystickPressChanged(int controlIndex, bool pressed);
	void LookBackJoystickPressChanged(bool pressed);
	struct FVector2D GetLookBackJoystickNormalizedOffset();
	bool GetLookBackJoystickIsPressed();
};

// Class DeadByDaylight.UMGSwitcherScreen
// 0x00B0 (FullSize[0x03B0] - InheritedSize[0x0300])
class UUMGSwitcherScreen : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnLoadoutWidgetSlotClicked;                                // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutWidgetInventoryItemSelected;                      // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutWidgetInventoryItemUnselected;                    // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1C92[0x60];                                    // 0x0330(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetSwitcher*                             ContainerWidgetSwitcher;                                   // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreWidget*                        BloodStoreWidget;                                          // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutWidget*                           LoadoutWidget;                                             // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterSelectionWidget*                CharacterSelectionWidget;                                  // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGSwitcherScreen");
		return ptr;
	}



	void BroadcastSlotClickedEvent(int loadoutSlot);
	void BroadcastItemUnSelectedEvent(int ItemIndex);
	void BroadcastItemSelectedEvent(int ItemIndex);
	void BroadcastCharacterSelectedEvent(int characterIndex);
	void BroadcastCharacterRoleButtonClickedEvent();
	void BroadcastCharacterInfoButtonClickedEvent();
	void BroadcastBloodStoreRegenerate(int CharacterId);
	void BroadcastBloodNodeSelected(int CharacterId, int NodeID, int nodeDepth);
	void BroadcastBloodNodePurchase(int CharacterId);
};

// Class DeadByDaylight.UMGTallyBloodpointsScoreWidget
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGTallyBloodpointsScoreWidget : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyBloodpointsScoreWidget");
		return ptr;
	}



	void UpdateWidgetByScoreData(const struct FText& title, class UTexture2D* asset, int scoreValue);
};

// Class DeadByDaylight.UMGTallyListElementWidget
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGTallyListElementWidget : public UMobileBaseUserWidget
{
public:
	int                                                ElementIndex;                                              // 0x0300(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   WidgetSize;                                                // 0x0304(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OAD2[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyListElementWidget");
		return ptr;
	}



	void OnPlayInAnimation();
	void OnPageVisibilityChanged(bool isVisible, bool wasInAnimationPlayed);
	void OnInAnimationFinished();
};

// Class DeadByDaylight.UMGTallyBloodpointsWidget
// 0x01A0 (FullSize[0x04B0] - InheritedSize[0x0310])
class UUMGTallyBloodpointsWidget : public UUMGTallyListElementWidget
{
public:
	UMG_ESlateVisibility                               _itemBoxVisibility;                                        // 0x0310(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EWBS[0x7];                                     // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _labelTotalScore;                                          // 0x0318(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _labelItemTitle;                                           // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _labelItemAddOnTitle;                                      // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                                _labelItemTitleColor;                                      // 0x0360(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              BoxScoreCategory;                                          // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DBDSharedTypes_EDBDScoreCategory, struct FScoreCategoryUIExtraData> _scoreCategoryExtraDataMap;                                // 0x0378(0x0050) (Edit, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HSTQ[0xE8];                                    // 0x03C8(0x00E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyBloodpointsWidget");
		return ptr;
	}



	void UpdateTallyTotalBloodpoints(int totalValue);
	void UpdateTallyRewardWidget(const struct FString& rewardName, int existReward, int addReward);
	void UpdateTallyItemWidget(const struct FTallyItemChangedData& data);
	void ShowTallyItemWidget(bool isShow);
};

// Class DeadByDaylight.UMGTallyCharacterProgressionBar
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGTallyCharacterProgressionBar : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_OH1U[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProgressBar*                                ProgressBar;                                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyCharacterProgressionBar");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyCharacterProgressionWidget
// 0x0088 (FullSize[0x0398] - InheritedSize[0x0310])
class UUMGTallyCharacterProgressionWidget : public UUMGTallyListElementWidget
{
public:
	class UUMGTallyCharacterProgressionBar*            CharacterProgressionBar;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextCharacterCurrentExperience;                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextExperienceForNextLevel;                                // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextExperienceEarned;                                      // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextCurrentLevel;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      CharacterPicture;                                          // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      PrestigeIcon;                                              // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextCharacterName;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ExperiencePerSecond;                                       // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9GV5[0x44];                                    // 0x0354(0x0044) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyCharacterProgressionWidget");
		return ptr;
	}



	void StartSequence();
	void StartNewLevel();
	void SetWidgetToFinalState();
	void OnFullBarOut();
	void OnFullBarIn();
};

// Class DeadByDaylight.UMGTallyEmblemWidget
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGTallyEmblemWidget : public UMobileBaseUserWidget
{
public:
	TMap<DeadByDaylight_EEmblemQuality, class UTexture2D*> _emblemBackgrounds;                                        // 0x0300(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class Uimage*                                      BackgroundImage;                                           // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class Uimage*                                      IconImage;                                                 // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyEmblemWidget");
		return ptr;
	}



	void PlayFadeInAnimation();
};

// Class DeadByDaylight.UMGTallyListWidget
// 0x00F0 (FullSize[0x04B0] - InheritedSize[0x03C0])
class UUMGTallyListWidget : public UUMGPageScrollWidget
{
public:
	struct FText                                       TopLeftText;                                               // 0x03C0(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TopRightText;                                              // 0x03D8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ListBGPanel;                                               // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EPlayerRole                         _playerRole;                                               // 0x03F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LVCN[0x7];                                     // 0x03F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _inAnimationPlayedPages[0x50];                             // 0x03F9(0x0050) UNKNOWN PROPERTY: SetProperty
	TMap<DeadByDaylight_ETallyListPageID, class UUMGTallyListElementWidget*> _listItemWidgets;                                          // 0x0450(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_414N[0x10];                                    // 0x04A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyListWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyPip
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGTallyPip : public UMobileBaseUserWidget
{
public:
	class Uimage*                                      Filling;                                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyPip");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyPlayerLevelWidget
// 0x0048 (FullSize[0x0358] - InheritedSize[0x0310])
class UUMGTallyPlayerLevelWidget : public UUMGTallyListElementWidget
{
public:
	unsigned char                                      UnknownData_6KBA[0x48];                                    // 0x0310(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyPlayerLevelWidget");
		return ptr;
	}



	void OnSetInitialPlayerXp(int initialXp, const struct FPlayerLevelData& initialLevelData);
	void OnSetFinalPlayerXp(int finalXp, TArray<struct FPlayerLevelData> reachedLevels, TArray<struct FXpBonusData> xpBonuses, TArray<struct FRewardItemData> rewardsEarned);
	TArray<struct FXpBonusData> GetXpBonuses();
	TArray<struct FRewardItemData> GetRewardsEarned();
	TArray<struct FPlayerLevelData> GetReachedLevels();
	int GetInitialXp();
	int GetFinalXp();
};

// Class DeadByDaylight.UMGTallyProgressBar
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGTallyProgressBar : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                ProgressBar;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PipsContainer;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _pipsClasses[0x10];                                        // 0x0310(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FVector2D                                   _pipsAlignment;                                            // 0x0320(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyProgressBar");
		return ptr;
	}



	void SetPercent(float Value);
	int GetPipsCount();
};

// Class DeadByDaylight.UMGTallyRankBanner
// 0x0040 (FullSize[0x0340] - InheritedSize[0x0300])
class UUMGTallyRankBanner : public UMobileBaseUserWidget
{
public:
	class UHorizontalBox*                              PipsContainer;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRankBanner*                              RankBanner;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _pipsClasses[0x10];                                        // 0x0310(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FMargin                                     _pipsPadding;                                              // 0x0320(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UUMGTallyPip*>                        Pips;                                                      // 0x0330(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyRankBanner");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyRankWidget
// 0x00A0 (FullSize[0x03B0] - InheritedSize[0x0310])
class UUMGTallyRankWidget : public UUMGTallyListElementWidget
{
public:
	struct FMargin                                     _emblemsPadding;                                           // 0x0310(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      EmblemWidgetClass[0x30];                                   // 0x0320(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              EmblemsContainer;                                          // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyProgressBar*                        ProgressBar;                                               // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyRankBanner*                         RankBanner;                                                // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RankProgressLabel;                                         // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGTallyEmblemWidget*>               _emblems;                                                  // 0x0370(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTallyScorePipsData                         _scoreData;                                                // 0x0380(0x0030) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyRankWidget");
		return ptr;
	}



	struct FTallyScorePipsData GetScoreData();
	TArray<class UUMGTallyEmblemWidget*> GetEmblems();
};

// Class DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget
// 0x02A8 (FullSize[0x0600] - InheritedSize[0x0358])
class UUMGTallyScoreboardPlayerInfoWidget : public UUMGLoadoutBaseWidget
{
public:
	struct FScriptMulticastDelegate                    OnTallyScoreboardAddFriendEvent;                           // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyScoreboardReportEvent;                              // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class Uimage*                                      ImageHorizontalSeparation;                                 // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTallyPlayerResultData                      PlayerResultData;                                          // 0x0380(0x0278) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               LoadoutIsBlocked;                                          // 0x05F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AZ7H[0x7];                                     // 0x05F9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget");
		return ptr;
	}



	void UpdateWidget();
	void UpdateReported();
	void updateLoadout();
	void SetPlayerScoreData(const struct FTallyPlayerResultData& resultData);
	void SetPlayerReported(bool isReport);
	void SetPlayerLoadoutBlocked(bool isBlock);
	void HandleReportEvent(const struct FName& buttonid);
	void HandleAddFriendEvent(const struct FName& buttonid);
};

// Class DeadByDaylight.UMGTallyScoreboardWidget
// 0x00A0 (FullSize[0x03B0] - InheritedSize[0x0310])
class UUMGTallyScoreboardWidget : public UUMGTallyListElementWidget
{
public:
	struct FScriptMulticastDelegate                    OnTallyScoreboardAddFriendEvent;                           // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyScoreboardReportEvent;                              // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FText                                       LabelTextRank;                                             // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       LabelTextScore;                                            // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       LabelTextStatus;                                           // 0x0360(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         KillerWidget;                                              // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         FirstSurvivorWidget;                                       // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         SecondSurvivorWidget;                                      // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         ThirdSurvivorWidget;                                       // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         FourthSurvivorWidget;                                      // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGTallyScoreboardPlayerInfoWidget*> SurvivorWidgets;                                           // 0x03A0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTallyScoreboardWidget");
		return ptr;
	}



	void SetFadeOut();
	void HandleReportEvent(const struct FString& playerId);
	void HandleAddFriendEvent(const struct FString& playerId);
};

// Class DeadByDaylight.UMGTeachablePerkButton
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGTeachablePerkButton : public UMobileBaseUserWidget
{
public:
	class UPerkActionButton*                           TeachablePerkButton;                                       // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Uimage*                                      LockedStatusIcon;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGTeachablePerkButton");
		return ptr;
	}



};

// Class DeadByDaylight.UMGToastNotificationScreen
// 0x0168 (FullSize[0x0468] - InheritedSize[0x0300])
class UUMGToastNotificationScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      NotificationToast[0x30];                                   // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      InvitationPartyToast[0x30];                                // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UVerticalBox*                                ToastsContainer;                                           // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BIJN[0x30];                                    // 0x0368(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<uint32_t, class UUMGBaseToastWidget*>         _toastsDisplayedOnScreen;                                  // 0x0398(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EQB3[0x80];                                    // 0x03E8(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UMGToastNotificationScreen");
		return ptr;
	}



	void HandleOnPromptSelected(int NotificationId);
	void HandleOnNotificationDisplayEnd(int NotificationId);
	void HandleOnButtonSelected(int buttonid, int NotificationId);
};

// Class DeadByDaylight.UnlockPersonalPerksPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UUnlockPersonalPerksPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.UnlockPersonalPerksPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.VaultableComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UVaultableComponent : public UactorComponent
{
public:
	struct FScriptMulticastDelegate                    OnVault;                                                   // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FgameplayTag                                _vaultableScoreEvent;                                      // 0x00C8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_95NL[0x14];                                    // 0x00D4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VaultableComponent");
		return ptr;
	}



	void SignalVault(class UdbdPlayer* Survivor, float interactionTime);
	void OnChaseEnded(class UdbdPlayer* Survivor, float chaseTimer);
};

// Class DeadByDaylight.VersioningUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UVersioningUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VersioningUtilities");
		return ptr;
	}



	bool STATIC_IsVisualRework();
};

// Class DeadByDaylight.VideoNativePlayer
// 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
class UVideoNativePlayer : public Uactor
{
public:
	unsigned char                                      UnknownData_V7R9[0x30];                                    // 0x0230(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VideoNativePlayer");
		return ptr;
	}



};

// Class DeadByDaylight.VideoPlayer
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UVideoPlayer : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VideoPlayer");
		return ptr;
	}



};

// Class DeadByDaylight.VideoThumbnailPlayer
// 0x0098 (FullSize[0x02C8] - InheritedSize[0x0230])
class UVideoThumbnailPlayer : public Uactor
{
public:
	unsigned char                                      UnknownData_R6TW[0x20];                                    // 0x0230(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMediaPlayer*                                MediaPlayer;                                               // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMediaSoundComponent*                        SoundComponent;                                            // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                                 VideoPlayerWidget;                                         // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             _audioComponent;                                           // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QL82[0x18];                                    // 0x0270(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _source[0x30];                                             // 0x0270(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_Y3UG[0x10];                                    // 0x02B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VideoThumbnailPlayer");
		return ptr;
	}



	void OnVideoAssetLoaded();
	void OnMediaOpened(const struct FString& openedUrl);
	void OnMediaClosed();
	void OnEndReached();
};

// Class DeadByDaylight.VisibleHatchRestrictedPlacementAreaStrategy
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UVisibleHatchRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{
public:
	unsigned char                                      UnknownData_1K53[0x8];                                     // 0x0070(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VisibleHatchRestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.VomitStateComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UVomitStateComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_SIFU[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTagStateBool                               _isCharging;                                               // 0x00C0(0x0030) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.VomitStateComponent");
		return ptr;
	}



	void SetVomitState(DeadByDaylight_ELinkedVomitState newVomitState);
	void SetObjectState(class UGameplayTagContainerComponent* ObjectState);
	bool IsVomiting();
	DeadByDaylight_ELinkedVomitState getVomitState();
};

// Class DeadByDaylight.WakerObject
// 0x0030 (FullSize[0x0308] - InheritedSize[0x02D8])
class UWakerObject : public Uinteractable
{
public:
	unsigned char                                      UnknownData_S6KL[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperDreamworldComponent*                  _linkedCamperDreamworldComponent;                          // 0x02E0(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               isInteracting;                                             // 0x02E8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _chargeComplete;                                           // 0x02E9(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WQOI[0x1E];                                    // 0x02EA(0x001E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.WakerObject");
		return ptr;
	}



	void UpdateVisibilityAndOutline();
	void SetChargeComplete(bool Complete);
	void OnRep_LinkedCamperChanged(class UCamperDreamworldComponent* previous);
	void OnNewLinkedCamper(class UCamperDreamworldComponent* dreamworldComponent);
	void OnLinkedCamperDreamStateChanged(bool isInDreamworld, bool locallyObservedChanged);
	void OnAnyCamperDreamStateChanged(bool isInDreamworld, bool locallyObservedChanged);
	void LinkCampersOnLevelReadyToPlay();
	bool IsLinkedToCamper(class UdbdPlayer* Camper);
	bool HasLinkedCamper();
	bool GetIsInteracting();
	class UprimitiveComponent* GetInteractorPrimitiveComponent();
	float GetInteractionPercentComplete();
	bool GetChargeComplete();
	bool CanWakeUpCamper(class UdbdPlayer* Camper);
	void BindToCamperDreamStateChanged(class UdbdPlayer* player);
};

// Class DeadByDaylight.WalesCypherHandler
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UWalesCypherHandler : public ULocalPlayerSubsystem
{
public:
	class UWalesCypherParameters*                      _walesCypherParams;                                        // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_43HZ[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.WalesCypherHandler");
		return ptr;
	}



};

// Class DeadByDaylight.WalesCypherParameters
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UWalesCypherParameters : public UDataAsset
{
public:
	struct FString                                     AUDIO_EVENT;                                               // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SLASHER_INDEX;                                             // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CAMPER_INDEX;                                              // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.WalesCypherParameters");
		return ptr;
	}



};

// Class DeadByDaylight.WalletHandler
// 0x0120 (FullSize[0x0150] - InheritedSize[0x0030])
class UWalletHandler : public UObject
{
public:
	unsigned char                                      UnknownData_WFU0[0x120];                                   // 0x0030(0x0120) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.WalletHandler");
		return ptr;
	}



};

// Class DeadByDaylight.WeightedElement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeightedElement : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.WeightedElement");
		return ptr;
	}



};

// Class DeadByDaylight.Window
// 0x00F8 (FullSize[0x03D0] - InheritedSize[0x02D8])
class UWindow : public Uinteractable
{
public:
	struct FNativeBlockIndicatorData                   NativeSmokeOtherIndicatorData;                             // 0x02D8(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FNativeBlockIndicatorData                   NativeEntityIndicatorData;                                 // 0x02F0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FNativeBlockIndicatorData                   NativeSmokeSelfIndicatorData;                              // 0x0308(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                               _isBlockedByLevel;                                         // 0x0320(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9C3A[0x7];                                     // 0x0321(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChildActorComponent*                        _entityAssets;                                             // 0x0328(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialHelper*                             _materialHelper;                                           // 0x0330(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _akAudioWindow;                                            // 0x0338(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               akAudioEventWindowsBlocStart;                              // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               akAudioEventWindowsBlocStop;                               // 0x0348(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UcamperPlayer*, struct FVaultData>      _survivorVaultData;                                        // 0x0350(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ILG3[0x8];                                     // 0x03A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULocalPlayerTrackerComponent*                _localPlayerTracker;                                       // 0x03A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlockableComponent*                         _blockableComponent;                                       // 0x03B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W0KW[0x10];                                    // 0x03B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDNavEvadeLoopComponent*                   _navEvadeLoopComponent;                                    // 0x03C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.Window");
		return ptr;
	}



	void OnRep_blockedByLevel();
	void OnLocallyObservedChanged();
	void OnFastVault(class UdbdPlayer* player, class UinteractionDefinition* interaction);
	void NotifyOnFastVault(class UdbdPlayer* player, class UinteractionDefinition* interaction);
	bool IsWindowVaultBlockedForAnyPlayer();
	bool IsWindowVaultBlockedFor(class UdbdPlayer* player);
	class UMaterialHelper* GetMaterialHelper();
	class UChildActorComponent* GetEntityAssets();
	bool GetBlockedByLevel();
	class UAkComponent* GetAudioComponent();
	void Authority_SetBlockedByLevel(bool isBlockedByLevel);
	void Authority_OnVaultInternal(class UdbdPlayer* player, bool canBlockVault);
};

// Class DeadByDaylight.XboxProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UXboxProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.XboxProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.ZoneDetectorComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UZoneDetectorComponent : public UactorComponent
{
public:
	unsigned char                                      UnknownData_UAJR[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UprimitiveComponent*>                 _zones;                                                    // 0x00D0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               _tags;                                                     // 0x00E0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = nullptr;
	if (!ptr)
		ptr = 
UObject::FindClass("Class DeadByDaylight.ZoneDetectorComponent");
		return ptr;
	}



	void OnOverlapExit(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex);
	void OnOverlapEnter(class UprimitiveComponent* hitComponent, class Uactor* otherActor, class UprimitiveComponent* otherComp, int otherBodyIndex, bool bFromSweep, const struct FhitResult& sweepResult);
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
